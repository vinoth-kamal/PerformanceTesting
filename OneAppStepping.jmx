<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="OneApp" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="ServerName" elementType="Argument">
            <stringProp name="Argument.name">ServerName</stringProp>
            <stringProp name="Argument.value">34.100.198.4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PortNumber" elementType="Argument">
            <stringProp name="Argument.name">PortNumber</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ResponseDuration" elementType="Argument">
            <stringProp name="Argument.name">ResponseDuration</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ThreadCount" elementType="Argument">
            <stringProp name="Argument.name">ThreadCount</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="LoopCount" elementType="Argument">
            <stringProp name="Argument.name">LoopCount</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RampUp" elementType="Argument">
            <stringProp name="Argument.name">RampUp</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ThreadLifeTime" elementType="Argument">
            <stringProp name="Argument.name">ThreadLifeTime</stringProp>
            <stringProp name="Argument.value">3000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Responsecode" elementType="Argument">
            <stringProp name="Argument.name">Responsecode</stringProp>
            <stringProp name="Argument.value">200</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
    </TestPlan>
    <hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="jp@gc - Stepping Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">1</stringProp>
        <stringProp name="Start users count burst">1</stringProp>
        <stringProp name="Start users period">1</stringProp>
        <stringProp name="Stop users count">1</stringProp>
        <stringProp name="Stop users period">1</stringProp>
        <stringProp name="flighttime">100</stringProp>
        <stringProp name="rampUp">1</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <intProp name="LoopController.loops">-1</intProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">CounterValue</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login_Activation" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
            <collectionProp name="CookieManager.cookies"/>
            <boolProp name="CookieManager.clearEachIteration">true</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
          <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
            <boolProp name="clearEachIteration">true</boolProp>
            <boolProp name="useExpires">false</boolProp>
            <boolProp name="CacheManager.controlledByThread">false</boolProp>
          </CacheManager>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">CounterNumber</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login_01_00a_GET_OTP" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">abc-login/adityabirla/api/v1/login/otp?mobileNumber=${randomNumber}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-login/adityabirla/api/v1/login/otp?mobileNumber=1234567890
${__Random(5,var)}   /search?q=${__chooseRandom(1111,2222,iter)}  ${__Random(000000100,999999999,)}</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.text.SimpleDateFormat
import java.util.Date

def now = new Date()
def sdf = new SimpleDateFormat(&quot;HHmmss&quot;)
def rand = Math.abs(new Random().nextInt() % 10000L)
def result = sdf.format(now) + rand.toString().padLeft(10 - sdf.format(now).length(), &apos;0&apos;)
vars.put(&quot;randomNumber&quot;, result)

//vars.put(&quot;randomNumber&quot;, String.format(&quot;%010d&quot;, Math.abs(new Random().nextLong() % 10000000000L)));



</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="otp" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">otp</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;,&quot;otp&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
              <stringProp name="TestPlan.comments">&quot;,&quot;otp&quot;:&quot;123456&quot;</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${DurationAssertion}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Responde code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login_01_00b_Login_POST_Verify_OTP" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;mobileNumber&quot;: &quot;${randomNumber}&quot;,&#xd;
    &quot;otp&quot;: &quot;${otp}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-login/adityabirla/api/v1/login/otp/verification</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-login/adityabirla/api/v1/login/otp/verification     ${__Random(1111111111,9999999999,)}</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${DurationAssertion}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Responde code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login_01_00c_POST_Save_Customer_info" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&#xd;
    &quot;mobileNumber&quot;: &quot;${randomNumber}&quot;,&#xd;
&#xd;
    &quot;firstName&quot;: &quot;niteen&quot;,&#xd;
&#xd;
    &quot;lastName&quot;: &quot;singh&quot;,&#xd;
&#xd;
    &quot;dateOfBirth&quot;: &quot;2023-06-24T08:58:39.619&quot;,&#xd;
&#xd;
    &quot;kycCoustomer&quot;: [&#xd;
&#xd;
        {&#xd;
&#xd;
            &quot;permanentAddress&quot;: &quot;pune&quot;,&#xd;
&#xd;
            &quot;digilockerStatus&quot;: &quot;no&quot;,&#xd;
&#xd;
            &quot;digilockerCreatedDate&quot;: &quot;&quot;,&#xd;
&#xd;
            &quot;videoKYC&quot;: &quot;yes&quot;,&#xd;
&#xd;
            &quot;lastFetchedDT&quot;: &quot;&quot;&#xd;
&#xd;
        }&#xd;
&#xd;
    ],&#xd;
&#xd;
    &quot;address&quot;: [&#xd;
&#xd;
        {&#xd;
&#xd;
            &quot;addressLineOne&quot;: &quot;banglore&quot;,&#xd;
&#xd;
            &quot;addressLineTwo&quot;: &quot;chadnichowk&quot;,&#xd;
&#xd;
            &quot;pin&quot;: &quot;1234&quot;,&#xd;
&#xd;
            &quot;city&quot;: &quot;banglore&quot;,&#xd;
&#xd;
            &quot;state&quot;: &quot;karnatka&quot;,&#xd;
&#xd;
            &quot;typeofaddress&quot;: &quot;Home&quot;,&#xd;
&#xd;
            &quot;landmark&quot;:&quot;abc&quot;&#xd;
&#xd;
        }&#xd;
&#xd;
    ],&#xd;
&#xd;
    &quot;professionalDetails&quot;: {&#xd;
&#xd;
        &quot;employmentType&quot;: &quot;salary&quot;,&#xd;
&#xd;
        &quot;companyName&quot;: &quot;pune&quot;,&#xd;
&#xd;
        &quot;annualIncome&quot;: 3,&#xd;
&#xd;
        &quot;totalWorkExperience&quot;: 4,&#xd;
&#xd;
        &quot;createdBy&quot;: &quot;Niteen&quot;,&#xd;
&#xd;
        &quot;createdDate&quot;: &quot;&quot;,&#xd;
&#xd;
        &quot;modifiedBy&quot;: &quot;&quot;,&#xd;
&#xd;
        &quot;modifiedDate&quot;: &quot;&quot;&#xd;
&#xd;
    },&#xd;
&#xd;
    &quot;loanType&quot;: &quot;PL&quot;,&#xd;
&#xd;
    &quot;panNumber&quot;: &quot;sadadad&quot;,&#xd;
&#xd;
    &quot;adharNumber&quot;: &quot;876537373&quot;,&#xd;
&#xd;
    &quot;email&quot;: &quot;niteensingh@gmail.com&quot;,&#xd;
&#xd;
    &quot;gender&quot;: &quot;Male&quot;,&#xd;
&#xd;
    &quot;nriCustomer&quot;: &quot;&quot;,&#xd;
&#xd;
    &quot;createdby&quot;: &quot;&quot;,&#xd;
&#xd;
    &quot;createddate&quot;: &quot;2023-06-24T08:58:39.619&quot;,&#xd;
&#xd;
    &quot;modifiedBy&quot;: &quot;&quot;,&#xd;
&#xd;
    &quot;modifieddate&quot;: &quot;2023-06-24T08:58:39.619&quot;,&#xd;
&#xd;
    &quot;active&quot;: &quot;&quot;,&#xd;
&#xd;
    &quot;enableDHA&quot;: &quot;y&quot;&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-customer/oneabc/adityabirla/api/v1/customer/info/customer</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-customer/oneabc/adityabirla/api/v1/customer/info/customer</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="id" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">id</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;id&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="TestPlan.comments">&quot;id&quot;:7208,&quot;      &quot;id&quot;:7230,&quot;</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${DurationAssertion}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1186383599">${ResponseCode201}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Responde code is not matching with expected 201</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login_01_00d_POST_Set_MPIN" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: &quot;${id}&quot;,&#xd;
	&quot;mpin&quot;: &quot;${__Random(1001,9999,)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-login/adityabirla/api/v1/login/mpin</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-login/adityabirla/api/v1/login/mpin     ${__Random(0001,9999,)}</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${DurationAssertion}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1186383599">${ResponseCode201}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Responde code is not matching with expected 201</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login_01_00e_POST_Forgot_MPIN" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;mobileNumber&quot;: &quot;${randomNumber}&quot;,&#xd;
    &quot;mpin&quot;: &quot;5676&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-login/adityabirla/api/v1/login/mpin/update</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-login/adityabirla/api/v1/login/mpin/update</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${DurationAssertion}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1186383599">${ResponseCode201}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Responde code is not matching with expected 201</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login_01_00f_GET_Get_Customer_info" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;customerId&quot;:&quot;${id}&quot;,&#xd;
&quot;mobileNo&quot;:&quot;${randomNumber}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-customer/oneabc/adityabirla/api/v1/customer/info/customer?mobileNumber=${randomNumber}&amp;customerId= ${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-customer/oneabc/adityabirla/api/v1/customer/info/customer?mobileNumber=8888888881&amp;customerId=
http://34.93.88.9:8080/abc-customer/oneabc/adityabirla/api/v1/customer/info/customer </stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">C:\Users\harishraj.s\Desktop\UAT_JMeter\Login\LoginResult.csv</stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Cmots" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="VasCmotsPathURI" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">C:/Endurance/Cmots/CmotsPathURI.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="TestPlan.comments">PathURI</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">CounterValue</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="stockReturns" elementType="Argument">
                <stringProp name="Argument.value">20558</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.name">stockReturns</stringProp>
              </elementProp>
              <elementProp name="Pickright_Investpack_servername" elementType="Argument">
                <stringProp name="Argument.name">Pickright_Investpack_servername</stringProp>
                <stringProp name="Argument.value">stage-web.pickright.co.in</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ServerNameCMOT" elementType="Argument">
                <stringProp name="Argument.name">ServerNameCMOT</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">abmportfolioapi.uat.cmots.com</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00a_GET_Market_Indices_BSE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${Market_Indices_BSE}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/indices/bse</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00b_GET_Market_Indices_NSE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${Market_Indices_NSE}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/indices/nse</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00c_GET_PortfoiloPerfomers" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${PortfoiloPerfomers}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/portfolioperformance/1009275/1/equity/-</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00d_GET_ForthComingIPOs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${ForthComingIPOs}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00e_GET_OpenIPOs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${OpenIPOs}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/openissues/nse/-/100</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00f_GET_ClosedIPOs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${ClosedIPOs}${__Random(1,100,)}/-/-</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00g_GET_52_WeekHighNSE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${WeekHighNSE}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/indices/bse</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00h_GET_52_WeekHighBSE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${WeekHighBSE}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/FiftyTwoWeekHigh/bse/-/1</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00i_GET_52_WeekLowNSE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${WeekLowNSE}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/FiftyTwoWeeklow/nse/-/20</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00j_GET_52_WeekLowBSE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${WeekLowBSE}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/FiftyTwoWeeklow/bse/-/20</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00k_GET_TrendingStocksNSE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${TrendingStocksNSE}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/trendingstocks/nse/u/20</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00l_GET_TrendingStocksBSE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${TrendingStocksBSE}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/trendingstocks/bse/u</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00m_GET_MostActiveBSE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${MostActiveBSE}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/MostActiveToppers/bse/-/10</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00n_GET_MostActiveNSE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${MostActiveNSE}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/MostActiveToppers/nse/-/10</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00o_GET_NiftyGainers" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${NiftyGainers}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/Gainers/NSE/NIFTY/Week/5</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00p_GET_NiftyLosers" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${NiftyLosers}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/losers/nse/NIFTY/Week/10</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00q_GET_StockReturnsBSE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${StockReturnsBSE}/1y/${stockReturns}/bse</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/stockreturns/5400/1y/20558/bse</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00r_GET_StockReturnsNSE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${StockReturnsNSE}/1y/${stockReturns}/nse</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/stockreturns/5400/1y/20558/nse</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00s_GET_Pickright_Investpack" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${Pickright_Investpack_servername}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${Pickright_Investpack}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">https://stage-web.pickright.co.in/business_service/investpacks</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer QUJNTDpBQk1M</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00t_GET_TopLosersBSE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${TopLosersBSE}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/losers/BSE/BSE_sensex/day/5</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00u_GET_GainersBSE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${GainersBSE}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/Gainers/BSE/BSE_sensex/day/5</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="HomeLoan" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <stringProp name="TestPlan.comments">${__Random(111,999,)}</stringProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="TF_1" elementType="Argument">
                <stringProp name="Argument.name">TF_1</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TF_2" elementType="Argument">
                <stringProp name="Argument.name">TF_2</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ResponseCode" elementType="Argument">
                <stringProp name="Argument.name">ResponseCode</stringProp>
                <stringProp name="Argument.value">201</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="HomeLoanePathURI" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">C:/Endurance/HomeLoan/HomeLoanPathURI.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="TestPlan.comments">PathURI</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
            <collectionProp name="CookieManager.cookies"/>
            <boolProp name="CookieManager.clearEachIteration">true</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
          <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
            <boolProp name="clearEachIteration">true</boolProp>
            <boolProp name="useExpires">true</boolProp>
            <boolProp name="CacheManager.controlledByThread">false</boolProp>
          </CacheManager>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">CounterValue</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomeLoan_09_00a_POST_HomeLoan${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">	{       &quot;customerId&quot;:1685${__Random(1,3,)},&#xd;
	        &quot;firstName&quot;: &quot;Perumal&quot;,&#xd;
	        &quot;lastName&quot;: &quot;&quot;,&#xd;
	        &quot;dateOfBirth&quot;: &quot;&quot;,&#xd;
	        &quot;gender&quot;: &quot;M&quot;,&#xd;
	        &quot;mobileNumber&quot;: &quot;${__Random(65000,99999,)}86390&quot;,&#xd;
	        &quot;emailAddress&quot;: &quot;perumal.p@gavstech.com&quot;,&#xd;
	        &quot;panNumber&quot;: &quot;ABCDE1111H&quot;,&#xd;
	        &quot;aadhaarNumber&quot;: &quot;1234123412341234&quot;,&#xd;
	        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
	        &quot;createdDate&quot;: null,&#xd;
	        &quot;modifiedBy&quot;: &quot;Perumal&quot;,&#xd;
	        &quot;modifiedDate&quot;: null,&#xd;
	        &quot;enableDha&quot;:&quot;Y&quot;,&#xd;
	        &quot;nriCustomer&quot;:${__V(TF_${__Random(1,2,)})},&#xd;
	        &quot;status&quot;: ${__V(TF_${__Random(1,2,)})},    &#xd;
	    &quot;professionalDetails&quot;: [{    &#xd;
	        &quot;employmentType&quot;: &quot;Salaried&quot;,&#xd;
	        &quot;employerId&quot;: &quot;GAVS&quot;,&#xd;
	        &quot;annualIncome&quot;: &quot;1&quot;,&#xd;
	        &quot;totalWorkExperience&quot;: 1,&#xd;
	        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
	        &quot;createdDate&quot;: null,&#xd;
	        &quot;modifiedBy&quot;: null,&#xd;
	        &quot;modifiedDate&quot;: null,&#xd;
	        &quot;status&quot;: ${__V(TF_${__Random(1,2,)})}&#xd;
	    }],&#xd;
	    &quot;propertyDetails&quot;:[ {&#xd;
	        &quot;propertyLocation&quot;: &quot;600059&quot;,&#xd;
	        &quot;propertyValue&quot;: &quot;2&quot;,&#xd;
	        &quot;loanAmount&quot;: &quot;{       &quot;customerId&quot;:1685${__Random(1,3,)},&#xd;
        &quot;firstName&quot;: &quot;Perumal&quot;,&#xd;
        &quot;lastName&quot;: &quot;&quot;,&#xd;
        &quot;dateOfBirth&quot;: &quot;&quot;,&#xd;
        &quot;gender&quot;: &quot;M&quot;,&#xd;
        &quot;mobileNumber&quot;: &quot;${__Random(65000,99999,)}86390&quot;,&#xd;
        &quot;emailAddress&quot;: &quot;perumal.p@gavstech.com&quot;,&#xd;
        &quot;panNumber&quot;: &quot;ABCDE1111H&quot;,&#xd;
        &quot;aadhaarNumber&quot;: &quot;1234123412341234&quot;,&#xd;
        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;createdDate&quot;: null,&#xd;
        &quot;modifiedBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;modifiedDate&quot;: null,&#xd;
        &quot;enableDha&quot;:&quot;Y&quot;,&#xd;
        &quot;nriCustomer&quot;:${__V(TF_${__Random(1,2,)})},&#xd;
        &quot;status&quot;: ${__V(TF_${__Random(1,2,)})},    &#xd;
    &quot;professionalDetails&quot;: [{    &#xd;
        &quot;employmentType&quot;: &quot;Salaried&quot;,&#xd;
        &quot;employerId&quot;: &quot;GAVS&quot;,&#xd;
        &quot;annualIncome&quot;: &quot;1&quot;,&#xd;
        &quot;totalWorkExperience&quot;: 1,&#xd;
        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;createdDate&quot;: null,&#xd;
        &quot;modifiedBy&quot;: null,&#xd;
        &quot;modifiedDate&quot;: null,&#xd;
        &quot;status&quot;: ${__V(TF_${__Random(1,2,)})}&#xd;
    }],&#xd;
    &quot;propertyDetails&quot;:[ {&#xd;
        &quot;propertyLocation&quot;: &quot;600059&quot;,&#xd;
        &quot;propertyValue&quot;: &quot;2&quot;,&#xd;
        &quot;loanAmount&quot;: &quot;1000&quot;, &#xd;
        &quot;loanType&quot;:&quot;&quot;,       &#xd;
        &quot;foreclosureAmount&quot;:&quot;1.00&quot;,&#xd;
        &quot;foundHome&quot;: ${__V(TF_${__Random(1,2,)})},&#xd;
        &quot;financialCoApplicant&quot;: ${__V(TF_${__Random(1,2,)})},&#xd;
        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;createdDate&quot;: &quot;2023-07-14T22:58:39.619&quot;,&#xd;
        &quot;modifiedBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;modifiedDate&quot;: &quot;2023-07-14T22:58:39.619&quot;,&#xd;
        &quot;status&quot;: ${__V(TF_${__Random(1,2,)})}&#xd;
    }]&#xd;
}&#xd;
1000&quot;, &#xd;
	        &quot;loanType&quot;:&quot;&quot;,       &#xd;
	        &quot;foreclosureAmount&quot;:&quot;1.00&quot;,&#xd;
	        &quot;foundHome&quot;: ${__V(TF_${__Random(1,2,)})},&#xd;
	        &quot;financialCoApplicant&quot;: ${__V(TF_${__Random(1,2,)})},&#xd;
	        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
	        &quot;createdDate&quot;: &quot;2023-07-14T22:58:39.619&quot;,&#xd;
	        &quot;modifiedBy&quot;: &quot;Perumal&quot;,&#xd;
	        &quot;modifiedDate&quot;: &quot;2023-07-14T22:58:39.619&quot;,&#xd;
	        &quot;status&quot;: ${__V(TF_${__Random(1,2,)})}&#xd;
	    }]&#xd;
	}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${HomeLoan}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/homeloan/api/v1/home-loan   2023-07-14T22:58:39.619  ${__time(dd/MM/yyyy&apos;T&apos;HH:mm:ss.SSSZ)}
</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomeLoan_09_00b_POST_top-up" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{       &quot;customerId&quot;:16853,&#xd;
        &quot;firstName&quot;: &quot;Perumal&quot;,&#xd;
        &quot;lastName&quot;: &quot;&quot;,&#xd;
        &quot;dateOfBirth&quot;: &quot;&quot;,&#xd;
        &quot;gender&quot;: &quot;M&quot;,&#xd;
        &quot;mobileNumber&quot;: &quot;9488383838&quot;,&#xd;
        &quot;emailAddress&quot;: &quot;perumal.p@gavstech.com&quot;,&#xd;
        &quot;panNumber&quot;: &quot;ABCDE1111H&quot;,&#xd;
        &quot;aadhaarNumber&quot;: &quot;1234123412341234&quot;,&#xd;
        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;createdDate&quot;: null,&#xd;
        &quot;modifiedBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;modifiedDate&quot;: null,&#xd;
        &quot;enableDha&quot;:&quot;Y&quot;,&#xd;
        &quot;nriCustomer&quot;:false,&#xd;
        &quot;status&quot;: &quot;true&quot;,    &#xd;
    &quot;professionalDetails&quot;: [{    &#xd;
        &quot;employmentType&quot;: &quot;Salaried&quot;,&#xd;
        &quot;employerId&quot;: &quot;GAVS&quot;,&#xd;
        &quot;annualIncome&quot;: &quot;1&quot;,&#xd;
        &quot;totalWorkExperience&quot;: 1,&#xd;
        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;createdDate&quot;: null,&#xd;
        &quot;modifiedBy&quot;: null,&#xd;
        &quot;modifiedDate&quot;: null,&#xd;
        &quot;status&quot;: &quot;true&quot;&#xd;
    }],&#xd;
    &quot;propertyDetails&quot;:[ {&#xd;
        &quot;propertyLocation&quot;: &quot;600059&quot;,&#xd;
        &quot;propertyValue&quot;: &quot;2&quot;,&#xd;
        &quot;loanAmount&quot;: &quot;1000&quot;,        &#xd;
        &quot;foreclosureAmount&quot;:&quot;1.00&quot;,&#xd;
        &quot;foundHome&quot;: true,&#xd;
        &quot;financialCoApplicant&quot;: false,&#xd;
        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;createdDate&quot;: &quot;2023-07-14T22:58:39.619&quot;,&#xd;
        &quot;modifiedBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;modifiedDate&quot;: &quot;2023-07-14T22:58:39.619&quot;,&#xd;
        &quot;status&quot;: &quot;true&quot;&#xd;
    }]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${top-up}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/homeloan/api/v1/home-loan/top-up    http://34.93.88.9:8080/api/v1/home-loan/top-up</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomeLoan_09_00c_POST_balance-transfer" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{       &quot;customerId&quot;:16853,&#xd;
        &quot;firstName&quot;: &quot;Perumal&quot;,&#xd;
        &quot;lastName&quot;: &quot;&quot;,&#xd;
        &quot;dateOfBirth&quot;: &quot;&quot;,&#xd;
        &quot;gender&quot;: &quot;M&quot;,&#xd;
        &quot;mobileNumber&quot;: &quot;9408899899&quot;,&#xd;
        &quot;emailAddress&quot;: &quot;perumal.p@gavstech.com&quot;,&#xd;
        &quot;panNumber&quot;: &quot;ABCDE1111C&quot;,&#xd;
        &quot;aadhaarNumber&quot;: &quot;1234123412341234&quot;,&#xd;
        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;createdDate&quot;: null,&#xd;
        &quot;modifiedBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;modifiedDate&quot;: null,&#xd;
        &quot;enableDha&quot;:&quot;Y&quot;,&#xd;
        &quot;nriCustomer&quot;:false,&#xd;
        &quot;status&quot;: &quot;true&quot;,    &#xd;
    &quot;professionalDetails&quot;: [{    &#xd;
        &quot;employmentType&quot;: &quot;Salaried&quot;,&#xd;
        &quot;employerId&quot;: &quot;Global&quot;,&#xd;
        &quot;annualIncome&quot;: &quot;1&quot;,&#xd;
        &quot;totalWorkExperience&quot;: 1,&#xd;
        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;createdDate&quot;: null,&#xd;
        &quot;modifiedBy&quot;: null,&#xd;
        &quot;modifiedDate&quot;: null,&#xd;
        &quot;status&quot;: &quot;true&quot;&#xd;
    }],&#xd;
    &quot;propertyDetails&quot;:[ {&#xd;
        &quot;propertyLocation&quot;: &quot;600500&quot;,&#xd;
        &quot;propertyValue&quot;: &quot;2&quot;,&#xd;
        &quot;loanAmount&quot;: &quot;1000000&quot;,        &#xd;
        &quot;foreclosureAmount&quot;:&quot;1.00&quot;,&#xd;
        &quot;foundHome&quot;: true,&#xd;
        &quot;financialCoApplicant&quot;: false,&#xd;
        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;createdDate&quot;: &quot;2023-07-14T22:58:39.619&quot;,&#xd;
        &quot;modifiedBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;modifiedDate&quot;: &quot;2023-07-14T22:58:39.619&quot;,&#xd;
        &quot;status&quot;: &quot;true&quot;&#xd;
    }]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${balance-transfer}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/homeloan/api/v1/home-loan/balance-transfer</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomeLoan_09_00d_POST_Loan-against-property" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{       &quot;customerId&quot;:200,&#xd;
        &quot;firstName&quot;: &quot;Perumal&quot;,&#xd;
        &quot;lastName&quot;: &quot;&quot;,&#xd;
        &quot;dateOfBirth&quot;: &quot;&quot;,&#xd;
        &quot;gender&quot;: &quot;M&quot;,&#xd;
        &quot;mobileNumber&quot;: &quot;9483738222&quot;,&#xd;
        &quot;emailAddress&quot;: &quot;perumal.p@gavstech.com&quot;,&#xd;
        &quot;panNumber&quot;: &quot;ABCDE1111H&quot;,&#xd;
        &quot;aadhaarNumber&quot;: &quot;1234123412341234&quot;,&#xd;
        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;createdDate&quot;: null,&#xd;
        &quot;modifiedBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;modifiedDate&quot;: null,&#xd;
        &quot;enableDha&quot;:&quot;Y&quot;,&#xd;
        &quot;nriCustomer&quot;:true,&#xd;
        &quot;status&quot;: &quot;true&quot;,    &#xd;
    &quot;professionalDetails&quot;: [{    &#xd;
        &quot;employmentType&quot;: &quot;Salaried&quot;,&#xd;
        &quot;employerId&quot;: &quot;GAVS&quot;,&#xd;
        &quot;annualIncome&quot;: &quot;1&quot;,&#xd;
        &quot;totalWorkExperience&quot;: 1,&#xd;
        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;createdDate&quot;: null,&#xd;
        &quot;modifiedBy&quot;: null,&#xd;
        &quot;modifiedDate&quot;: null,&#xd;
        &quot;status&quot;: &quot;true&quot;&#xd;
    }],&#xd;
    &quot;propertyDetails&quot;:[ {&#xd;
        &quot;propertyLocation&quot;: &quot;600059&quot;,&#xd;
        &quot;propertyValue&quot;: &quot;2&quot;,&#xd;
        &quot;loanAmount&quot;: &quot;1000&quot;, &#xd;
        &quot;loanType&quot;:&quot;&quot;,       &#xd;
        &quot;foreclosureAmount&quot;:&quot;1.00&quot;,&#xd;
        &quot;foundHome&quot;: true,&#xd;
        &quot;financialCoApplicant&quot;: false,&#xd;
        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;createdDate&quot;: &quot;2023-07-14T22:58:39.619&quot;,&#xd;
        &quot;modifiedBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;modifiedDate&quot;: &quot;2023-07-14T22:58:39.619&quot;,&#xd;
        &quot;status&quot;: &quot;true&quot;&#xd;
    }]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${Loan-against-property}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/homeloan/api/v1/home-loan/loan-against-property</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="false">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">${__BeanShell(import org.apache.jmeter.services.FileServer;FileServer.gerfileServer().getBaseDir();)}</stringProp>
              <stringProp name="script">BeanShell(import org.apache.jmeter.services.FileServer;FileServer.gerfileServer().getBaseDir();)
new File(arg[0]+</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomeLoan_09_00e_GET_EmployerDetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${EmployerDetails}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/homeloan/api/v1/home-loan/employers?employerName=A</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="BusinessLoan" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BL_50_100_00a_GET_FetchState&amp;City" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${FetchState&amp;City}0106</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/businessloan/api/v1/pincode?pincode=654546</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Rosponse code is not matching expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BL_50_100_00b_GET_OccupationList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${Occupations}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/businessloan/api/v1/occupations</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Rosponse code is not matching expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BL_50_100_00c_GET_ResidenceTypes" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${residence-types}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/businessloan/api/v1/residence-types</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Rosponse code is not matching expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BL_50_100_00d_GET_BusinessTypes" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${BusinessTypes}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/businessloan/api/v1/type-of-businesses</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Rosponse code is not matching expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BL_50_100_00e_GET_CustomerDetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${customer}16851</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/businessloan/api/v1/customer/4</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Rosponse code is not matching expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BL_50_100_00f_POST_CreateBusinessLoan" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:16851,&#xd;
	&quot;tandc &quot;:true,&#xd;
	&quot;consent&quot; :true,&#xd;
	&quot;panNumber&quot; :&quot;&quot;,&#xd;
	&quot;email&quot; :&quot;&quot;,&#xd;
	&quot;loanAmount&quot; :${LoanAmount},&#xd;
	&quot;residenceTypeId&quot;:${ResidentType},&#xd;
	&quot;occupationId&quot;:${OccupationID},&#xd;
	&quot;typeOfBusinessId&quot;:${typeofBusinessID},&#xd;
	&quot;pincode&quot;:620002,&#xd;
	&quot;city&quot;:&quot;&quot;,&#xd;
	&quot;state&quot;:&quot;&quot;,&#xd;
	&quot;companyName&quot;:&quot;&quot;,&#xd;
	&quot;createdBy&quot;:&quot;&quot;,&#xd;
	&quot;createdDate&quot;:&quot;&quot;,&#xd;
	&quot;modifiedDate&quot;:&quot;&quot;,&#xd;
	&quot;modifiedBy&quot;:&quot;&quot;,&#xd;
	&quot;status&quot;:&quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${businessloans}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/businessloan/api/v1/businessloans</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1411309059">&quot;Business Loan has been created successfully.&quot;,</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Rosponse code is not matching expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">C:\Users\harishraj.s\Downloads\OneApp\OneApp\Business Loan\BusinessloanResult.csv</stringProp>
          </ResultCollector>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="BusinessLoan Path_URL" enabled="true">
            <stringProp name="filename">C:/Endurance/Business Loan/BusinessLoanPath.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Businessloan Params" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">C:/Endurance/Business Loan/BusinessloanParams.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames"></stringProp>
          </CSVDataSet>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">CounterValue</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
            <collectionProp name="CookieManager.cookies"/>
            <boolProp name="CookieManager.clearEachIteration">true</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
          <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
            <boolProp name="clearEachIteration">true</boolProp>
            <boolProp name="useExpires">true</boolProp>
            <boolProp name="CacheManager.controlledByThread">false</boolProp>
          </CacheManager>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="HealthInsurance " enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="coveramt_1" elementType="Argument">
                <stringProp name="Argument.name">coveramt_1</stringProp>
                <stringProp name="Argument.value">300000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="coveramt_2" elementType="Argument">
                <stringProp name="Argument.name">coveramt_2</stringProp>
                <stringProp name="Argument.value">500000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="coveramt_3" elementType="Argument">
                <stringProp name="Argument.name">coveramt_3</stringProp>
                <stringProp name="Argument.value">700000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="coveramt_4" elementType="Argument">
                <stringProp name="Argument.name">coveramt_4</stringProp>
                <stringProp name="Argument.value">1000000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="policyType_1" elementType="Argument">
                <stringProp name="Argument.name">policyType_1</stringProp>
                <stringProp name="Argument.value">Personal</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="policyType_2" elementType="Argument">
                <stringProp name="Argument.name">policyType_2</stringProp>
                <stringProp name="Argument.value">Corporate</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TF_1" elementType="Argument">
                <stringProp name="Argument.name">TF_1</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TF_2" elementType="Argument">
                <stringProp name="Argument.name">TF_2</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="customerId" elementType="Argument">
                <stringProp name="Argument.name">customerId</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${__Random(18,22,)}</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="HealthInsuracetPathURI" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">C:\Endurance\HealthInsurance\HealthInsurancePathURI.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="TestPlan.comments">PathURI</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">CounterValue</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00a_GET_customersbyid" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${customersbyid}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/customers/191</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="custTermInsID" enabled="false">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">custTermInsID</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">custTermInsID&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
              <stringProp name="TestPlan.comments">{&quot;custTermInsID&quot;:839,&quot;       fetching  custTermInsID</stringProp>
            </BoundaryExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00b_GET_topupcoverage" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customerId&quot;: ${__Random(15000,20000,)},&#xd;
  &quot;gender&quot;: &quot;M&quot;,&#xd;
  &quot;locationPin&quot;: 12345,&#xd;
  &quot;planName&quot;: &quot;abc&quot;,&#xd;
  &quot;finalCoverage&quot;: 23.0,&#xd;
  &quot;finalMonthlyPremium&quot;: 12,&#xd;
  &quot;existingInsurance&quot;: ${__V(TF_${__Random(1,2,)})},&#xd;
  &quot;existingpolicyType&quot;: null,&#xd;
  &quot;existingCoverage&quot;: ${__V(coveramt_${__Random(1,4,)})},&#xd;
  &quot;createdBy&quot;: &quot;user&quot;,&#xd;
  &quot;modifiedBy&quot;: &quot;user&quot;,&#xd;
  &quot;active&quot;: &quot;Y&quot;,&#xd;
  &quot;healthInsuranceDetailsDTO&quot;: {&#xd;
    &quot;selfAge&quot;: ${__Random(30,40,)},&#xd;
    &quot;spouseAge&quot;: ${__Random(30,35,)},&#xd;
    &quot;child1age&quot;: ${__Random(22,29,)},&#xd;
    &quot;child2age&quot;: ${__Random(19,21,)},&#xd;
    &quot;child3age&quot;: ${__Random(14,18,)},&#xd;
    &quot;child4age&quot;: ${__Random(10,14,)},&#xd;
    &quot;fatherAge&quot;: ${__Random(51,60,)},&#xd;
    &quot;motherAge&quot;: ${__Random(41,47,)},&#xd;
    &quot;createdBy&quot;: &quot;user&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;user&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${topupcoverage}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/topupcoverage</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00c_GET_occupations" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customerId&quot;: ${__Random(15000,20000,)},&#xd;
  &quot;gender&quot;: &quot;M&quot;,&#xd;
  &quot;locationPin&quot;: 12345,&#xd;
  &quot;planName&quot;: &quot;abc&quot;,&#xd;
  &quot;finalCoverage&quot;: 23.0,&#xd;
  &quot;finalMonthlyPremium&quot;: 12,&#xd;
  &quot;existingInsurance&quot;: ${__V(TF_${__Random(1,2,)})},&#xd;
  &quot;existingpolicyType&quot;: null,&#xd;
  &quot;existingCoverage&quot;: ${__V(coveramt_${__Random(1,4,)})},&#xd;
  &quot;createdBy&quot;: &quot;user&quot;,&#xd;
  &quot;modifiedBy&quot;: &quot;user&quot;,&#xd;
  &quot;active&quot;: &quot;Y&quot;,&#xd;
  &quot;healthInsuranceDetailsDTO&quot;: {&#xd;
    &quot;selfAge&quot;: ${__Random(30,40,)},&#xd;
    &quot;spouseAge&quot;: 0,&#xd;
    &quot;child1age&quot;: ${__Random(22,29,)},&#xd;
    &quot;child2age&quot;: ${__Random(19,21,)},&#xd;
    &quot;child3age&quot;: ${__Random(14,18,)},&#xd;
    &quot;child4age&quot;: ${__Random(10,14,)},&#xd;
    &quot;fatherAge&quot;: ${__Random(51,60,)},&#xd;
    &quot;motherAge&quot;: 0,&#xd;
    &quot;createdBy&quot;: &quot;user&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;user&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${occupation}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/occupation</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00d_GET_Addons" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${addons}sumInsured=200000&amp;travel_si=10000&amp;planName=ABHI Super Health Plus Top up&amp;opd_si=0&amp;vaccineCover_si=750&amp;personalAccidentCover_si=700000&amp;criticalillness_si=300000&amp;age=35&amp;icmi_si=30000000&amp;roomType=any&amp;hospitalCash_si=500&amp;gender=1&amp;adultCount=1&amp;childCount=0&amp;maternity_si=0&amp;teleOpd_si=5000 </stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/addons?sumInsured=200000&amp;travel_si=10000&amp;planName=ABHI Super Health Plus Top up&amp;opd_si=0&amp;vaccineCover_si=750&amp;personalAccidentCover_si=700000&amp;criticalillness_si=300000&amp;age=35&amp;icmi_si=30000000&amp;roomType=any&amp;hospitalCash_si=500&amp;gender=1&amp;adultCount=1&amp;childCount=0&amp;maternity_si=0&amp;teleOpd_si=5000</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00e_GET_incomerange" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${incomerange}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/incomerange</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00f_GET_education" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${education}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/education</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00g_GET_resume" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${resume}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/resume/25</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00h_GET_relation" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${relation}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/education</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00i_GET_kycstart" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${kycstart}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/kyc/start/12345678/25</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00j_POST_preQuote" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 25,&#xd;
    &quot;super5&quot;: false,&#xd;
    &quot;super10&quot;: false,&#xd;
    &quot;super15&quot;: false,&#xd;
    &quot;sumInsured&quot;: 500000,&#xd;
    &quot;createdBy&quot;: &quot;user&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;user&quot;,&#xd;
    &quot;active&quot;: true,&#xd;
    &quot;selfAge&quot;: 25,&#xd;
    &quot;spouseAge&quot;: 0,&#xd;
    &quot;son1age&quot;: 0,&#xd;
    &quot;son2age&quot;: 12,&#xd;
    &quot;son3age&quot;: 0,&#xd;
    &quot;son4age&quot;: 0,&#xd;
    &quot;daughter1age&quot;: 13,&#xd;
    &quot;daughter2age&quot;: 0,&#xd;
    &quot;daughter3age&quot;: 0,&#xd;
    &quot;daughter4age&quot;: 0,&#xd;
    &quot;fatherAge&quot;: 0,&#xd;
    &quot;motherAge&quot;: 0,&#xd;
    &quot;fatherinlawage&quot;: 0,&#xd;
    &quot;motherinlawage&quot;: 0,&#xd;
    &quot;gender&quot;: &quot;Male&quot;,&#xd;
    &quot;locationPin&quot;: 400025,&#xd;
    &quot;existingInsurance&quot;: false,&#xd;
    &quot;existingpolicyType&quot;: null,&#xd;
    &quot;existingCoverage&quot;: 0,    &#xd;
    &quot;currentstep&quot;: 1,&#xd;
    &quot;finalstep&quot;: 7&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${preQuote}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/preQuote</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00k_POST_quoteDetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 25,&#xd;
    &quot;super5&quot;: false,&#xd;
    &quot;super10&quot;: false,&#xd;
    &quot;super15&quot;: false,&#xd;
    &quot;sumInsured&quot;: 10000000,&#xd;
    &quot;createdBy&quot;: &quot;user&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;user&quot;,&#xd;
    &quot;active&quot;: true,&#xd;
    &quot;selfAge&quot;: 25,&#xd;
    &quot;spouseAge&quot;: 0,&#xd;
    &quot;son1age&quot;: 0,&#xd;
    &quot;son2age&quot;: 12,&#xd;
    &quot;son3age&quot;: 0,&#xd;
    &quot;son4age&quot;: 0,&#xd;
    &quot;daughter1age&quot;: 13,&#xd;
    &quot;daughter2age&quot;: 0,&#xd;
    &quot;daughter3age&quot;: 0,&#xd;
    &quot;daughter4age&quot;: 0,&#xd;
    &quot;fatherAge&quot;: 0,&#xd;
    &quot;motherAge&quot;: 0,&#xd;
    &quot;fatherinlawage&quot;: 0,&#xd;
    &quot;motherinlawage&quot;: 0,&#xd;
    &quot;gender&quot;: &quot;Male&quot;,&#xd;
    &quot;locationPin&quot;: 400025,&#xd;
    &quot;existingInsurance&quot;: false,&#xd;
    &quot;existingpolicyType&quot;: null,&#xd;
    &quot;existingCoverage&quot;: 0,&#xd;
    &quot;currentstep&quot;: 1,&#xd;
    &quot;finalstep&quot;: 6&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${quoteDetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/quoteDetails</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00l_POST_addonDetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 25,&#xd;
    &quot;super5&quot;: false,&#xd;
    &quot;super10&quot;: false,&#xd;
    &quot;super15&quot;: false,&#xd;
    &quot;sumInsured&quot;: 500000,&#xd;
    &quot;createdBy&quot;: &quot;user&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;user&quot;,&#xd;
    &quot;active&quot;: true,&#xd;
    &quot;selectedPlanId&quot;: 1,&#xd;
    &quot;selectedQuoteId&quot;: &quot;Q06cd9134-a87d-47d9-9d07-225028ac59a3&quot;,   &#xd;
    &quot;selfAge&quot;: 25,&#xd;
    &quot;spouseAge&quot;: 0,&#xd;
    &quot;son1age&quot;: 0,&#xd;
    &quot;son2age&quot;: 12,&#xd;
    &quot;son3age&quot;: 0,&#xd;
    &quot;son4age&quot;: 0,&#xd;
    &quot;daughter1age&quot;: 13,&#xd;
    &quot;daughter2age&quot;: 0,&#xd;
    &quot;daughter3age&quot;: 0,&#xd;
    &quot;daughter4age&quot;: 0,&#xd;
    &quot;fatherAge&quot;: 0,&#xd;
    &quot;motherAge&quot;: 0,&#xd;
    &quot;fatherinlawage&quot;: 0,&#xd;
    &quot;motherinlawage&quot;: 0,&#xd;
    &quot;gender&quot;: &quot;Male&quot;,&#xd;
    &quot;locationPin&quot;: 400025,&#xd;
    &quot;existingInsurance&quot;: false,&#xd;
    &quot;existingpolicyType&quot;: null,&#xd;
    &quot;existingCoverage&quot;: 0,&#xd;
     &quot;addonDetails&quot;: [&#xd;
        {&#xd;
            &quot;addoninsured&quot;: &quot;self&quot;,&#xd;
            &quot;addonname&quot;: &quot;Future Secure&quot;,&#xd;
            &quot;addoninput&quot;: &quot;12&quot;,&#xd;
            &quot;premium&quot;: 8.7&#xd;
        }&#xd;
    ],&#xd;
    &quot;planDetails&quot;: [&#xd;
         {&#xd;
            &quot;planId&quot;: 1,&#xd;
            &quot;planCode&quot;: &quot;7100100002&quot;,&#xd;
            &quot;planName&quot;: &quot;ABHI Activ Fit Plus&quot;,&#xd;
            &quot;sumInsured&quot;: 500000,&#xd;
            &quot;this_plan_is_for&quot;: &quot;For Health conscious people who stay active&quot;,&#xd;
            &quot;premiumAmount&quot;: 11327.0,&#xd;
            &quot;policyType&quot;: &quot;Family Floater&quot;,&#xd;
            &quot;deductible&quot;: &quot;0.0&quot;,&#xd;
            &quot;quoteId&quot;: &quot;Q-a091c9a0-c1d3-4d4a-9e7e-067320076e8d&quot;,&#xd;
            &quot;usp&quot;: [&#xd;
                &quot;Unlimited Refill&quot;,&#xd;
                &quot;Policy Premium Return&quot;,&#xd;
                &quot;Good Health Discount&quot;,&#xd;
                &quot;Pre &amp; Post Hospitalisation&quot;,&#xd;
                &quot;Early Bird Discount&quot;&#xd;
            ]&#xd;
        },&#xd;
        {&#xd;
            &quot;planId&quot;: 4,&#xd;
            &quot;planCode&quot;: &quot;6212100004&quot;,&#xd;
            &quot;planName&quot;: &quot;ABHI Activ Health Platinum Essential&quot;,&#xd;
            &quot;sumInsured&quot;: 500000,&#xd;
            &quot;this_plan_is_for&quot;: &quot;People looking for a wide range of health and wellness benefits&quot;,&#xd;
            &quot;premiumAmount&quot;: 8698.0,&#xd;
            &quot;policyType&quot;: &quot;Family Floater&quot;,&#xd;
            &quot;deductible&quot;: &quot;0.0&quot;,&#xd;
            &quot;quoteId&quot;: &quot;Q-81affd2d-c227-42ca-9278-6f53351c7460&quot;,&#xd;
            &quot;usp&quot;: [&#xd;
                &quot;Day 1 cover for chronic diseases&quot;,&#xd;
                &quot;No Claim Bonus&quot;,&#xd;
                &quot;Policy Premium Return&quot;,&#xd;
                &quot;Expert Health Assistance&quot;,&#xd;
                &quot;Cashless Home Treatment&quot;&#xd;
            ]&#xd;
        }&#xd;
    ],&#xd;
    &quot;currentstep&quot;: 2,&#xd;
    &quot;finalstep&quot;: 7&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${addonDetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/addonDetails</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00m_POST_proposerinusreddetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 25,&#xd;
    &quot;super5&quot;: false,&#xd;
    &quot;super10&quot;: false,&#xd;
    &quot;super15&quot;: false,&#xd;
    &quot;sumInsured&quot;: 500000,&#xd;
    &quot;createdBy&quot;: &quot;user&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;user&quot;,&#xd;
    &quot;active&quot;: true,&#xd;
    &quot;selectedPlanId&quot;: 1,&#xd;
    &quot;selectedQuoteId&quot;: &quot;Q06cd9134-a87d-47d9-9d07-225028ac59a3&quot;,&#xd;
    &quot;selfAge&quot;: 25,&#xd;
    &quot;spouseAge&quot;: 0,&#xd;
    &quot;son1age&quot;: 0,&#xd;
    &quot;son2age&quot;: 12,&#xd;
    &quot;son3age&quot;: 0,&#xd;
    &quot;son4age&quot;: 0,&#xd;
    &quot;daughter1age&quot;: 13,&#xd;
    &quot;daughter2age&quot;: 0,&#xd;
    &quot;daughter3age&quot;: 0,&#xd;
    &quot;daughter4age&quot;: 0,&#xd;
    &quot;fatherAge&quot;: 0,&#xd;
    &quot;motherAge&quot;: 0,&#xd;
    &quot;fatherinlawage&quot;: 0,&#xd;
    &quot;motherinlawage&quot;: 0,&#xd;
    &quot;gender&quot;: &quot;Male&quot;,&#xd;
    &quot;locationPin&quot;: 400025,&#xd;
    &quot;existingInsurance&quot;: false,&#xd;
    &quot;existingpolicyType&quot;: null,&#xd;
    &quot;existingCoverage&quot;: 0,&#xd;
    &quot;proposalId&quot;: &quot;P-9d77508a-4848-40f5-aacd-5dde072657e6&quot;,&#xd;
    &quot;kycmodifiedpremium&quot;: &quot;&quot;,&#xd;
    &quot;addonDetails&quot;: [&#xd;
        {&#xd;
            &quot;addoninsured&quot;: &quot;self&quot;,&#xd;
            &quot;addonname&quot;: &quot;Future Secure&quot;,&#xd;
            &quot;addoninput&quot;: &quot;12&quot;,&#xd;
            &quot;premium&quot;: 8.7&#xd;
        }&#xd;
    ],&#xd;
    &quot;planDetails&quot;: [&#xd;
         {&#xd;
            &quot;planId&quot;: 1,&#xd;
            &quot;planCode&quot;: &quot;7100100002&quot;,&#xd;
            &quot;planName&quot;: &quot;ABHI Activ Fit Plus&quot;,&#xd;
            &quot;sumInsured&quot;: 500000,&#xd;
            &quot;this_plan_is_for&quot;: &quot;For Health conscious people who stay active&quot;,&#xd;
            &quot;premiumAmount&quot;: 11327.0,&#xd;
            &quot;policyType&quot;: &quot;Family Floater&quot;,&#xd;
            &quot;deductible&quot;: &quot;0.0&quot;,&#xd;
            &quot;quoteId&quot;: &quot;Q-a091c9a0-c1d3-4d4a-9e7e-067320076e8d&quot;,&#xd;
            &quot;usp&quot;: [&#xd;
                &quot;Unlimited Refill&quot;,&#xd;
                &quot;Policy Premium Return&quot;,&#xd;
                &quot;Good Health Discount&quot;,&#xd;
                &quot;Pre &amp; Post Hospitalisation&quot;,&#xd;
                &quot;Early Bird Discount&quot;&#xd;
            ]&#xd;
        },&#xd;
        {&#xd;
            &quot;planId&quot;: 4,&#xd;
            &quot;planCode&quot;: &quot;6212100004&quot;,&#xd;
            &quot;planName&quot;: &quot;ABHI Activ Health Platinum Essential&quot;,&#xd;
            &quot;sumInsured&quot;: 500000,&#xd;
            &quot;this_plan_is_for&quot;: &quot;People looking for a wide range of health and wellness benefits&quot;,&#xd;
            &quot;premiumAmount&quot;: 8698.0,&#xd;
            &quot;policyType&quot;: &quot;Family Floater&quot;,&#xd;
            &quot;deductible&quot;: &quot;0.0&quot;,&#xd;
            &quot;quoteId&quot;: &quot;Q-81affd2d-c227-42ca-9278-6f53351c7460&quot;,&#xd;
            &quot;usp&quot;: [&#xd;
                &quot;Day 1 cover for chronic diseases&quot;,&#xd;
                &quot;No Claim Bonus&quot;,&#xd;
                &quot;Policy Premium Return&quot;,&#xd;
                &quot;Expert Health Assistance&quot;,&#xd;
                &quot;Cashless Home Treatment&quot;&#xd;
            ]&#xd;
        }&#xd;
    ],&#xd;
    &quot;proposerInsuredDetails&quot;: {&#xd;
        &quot;nominee&quot;: {&#xd;
            &quot;nomineename&quot;: &quot;Jane Doe&quot;,&#xd;
            &quot;nomineemno&quot;: &quot;9876543210&quot;,&#xd;
            &quot;nomineerelationcode&quot;: 1&#xd;
        },&#xd;
        &quot;proposerInsured&quot;: [&#xd;
            { &#xd;
                &quot;insuredmember&quot;: &quot;self&quot;,&#xd;
                &quot;name&quot;: &quot;John&quot;,&#xd;
                &quot;dob&quot;: &quot;1985-10-15&quot;,&#xd;
                &quot;mno&quot;: &quot;1234567890&quot;,&#xd;
                &quot;panno&quot;: &quot;AWAPR91955F&quot;,&#xd;
                &quot;mailid&quot;: &quot;john@example.com&quot;,&#xd;
                &quot;maritalstatus&quot;: &quot;Single&quot;,&#xd;
                &quot;nationality&quot;: &quot;Indian&quot;,&#xd;
                &quot;height&quot;: 175,&#xd;
                &quot;weight&quot;: 75,&#xd;
                &quot;educationid&quot;: 2,&#xd;
                &quot;occupationid&quot;: 3,&#xd;
                &quot;incomerangeid&quot;: 4,&#xd;
                &quot;proposer&quot;: true&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;currentstep&quot;: 3,&#xd;
    &quot;finalstep&quot;: 7&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${proposerinusreddetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/postData</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00n_POST_kycdetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 25,&#xd;
    &quot;super5&quot;: false,&#xd;
    &quot;super10&quot;: false,&#xd;
    &quot;super15&quot;: false,&#xd;
    &quot;sumInsured&quot;: 500000,&#xd;
    &quot;createdBy&quot;: &quot;user&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;user&quot;,&#xd;
    &quot;active&quot;: true,&#xd;
    &quot;selectedPlanId&quot;: 1,&#xd;
    &quot;selectedQuoteId&quot;: &quot;Q06cd9134-a87d-47d9-9d07-225028ac59a3&quot;,&#xd;
    &quot;proposalId&quot;: &quot;P-9d77508a-4848-40f5-aacd-5dde072657e6&quot;,&#xd;
    &quot;selfAge&quot;: 25,&#xd;
    &quot;spouseAge&quot;: 0,&#xd;
    &quot;son1age&quot;: 0,&#xd;
    &quot;son2age&quot;: 12,&#xd;
    &quot;son3age&quot;: 0,&#xd;
    &quot;son4age&quot;: 0,&#xd;
    &quot;daughter1age&quot;: 13,&#xd;
    &quot;daughter2age&quot;: 0,&#xd;
    &quot;daughter3age&quot;: 0,&#xd;
    &quot;daughter4age&quot;: 0,&#xd;
    &quot;fatherAge&quot;: 0,&#xd;
    &quot;motherAge&quot;: 0,&#xd;
    &quot;fatherinlawage&quot;: 0,&#xd;
    &quot;motherinlawage&quot;: 0,&#xd;
    &quot;gender&quot;: &quot;Male&quot;,&#xd;
    &quot;locationPin&quot;: 400025,&#xd;
    &quot;existingInsurance&quot;: false,&#xd;
    &quot;existingpolicyType&quot;: null,&#xd;
    &quot;existingCoverage&quot;: 0,&#xd;
    &quot;kycmodifiedpremium&quot;:&quot;&quot;,&#xd;
    &quot;addonDetails&quot;: [&#xd;
        {&#xd;
            &quot;addoninsured&quot;: &quot;self&quot;,&#xd;
            &quot;addonname&quot;: &quot;Future Secure&quot;,&#xd;
            &quot;addoninput&quot;: &quot;12&quot;,&#xd;
            &quot;premium&quot;: 8.7&#xd;
        }&#xd;
    ],&#xd;
    &quot;planDetails&quot;: [&#xd;
         {&#xd;
            &quot;planId&quot;: 1,&#xd;
            &quot;planCode&quot;: &quot;7100100002&quot;,&#xd;
            &quot;planName&quot;: &quot;ABHI Activ Fit Plus&quot;,&#xd;
            &quot;sumInsured&quot;: 500000,&#xd;
            &quot;this_plan_is_for&quot;: &quot;For Health conscious people who stay active&quot;,&#xd;
            &quot;premiumAmount&quot;: 11327.0,&#xd;
            &quot;policyType&quot;: &quot;Family Floater&quot;,&#xd;
            &quot;deductible&quot;: &quot;0.0&quot;,&#xd;
            &quot;quoteId&quot;: &quot;Q-a091c9a0-c1d3-4d4a-9e7e-067320076e8d&quot;,&#xd;
            &quot;usp&quot;: [&#xd;
                &quot;Unlimited Refill&quot;,&#xd;
                &quot;Policy Premium Return&quot;,&#xd;
                &quot;Good Health Discount&quot;,&#xd;
                &quot;Pre &amp; Post Hospitalisation&quot;,&#xd;
                &quot;Early Bird Discount&quot;&#xd;
            ]&#xd;
        },&#xd;
        {&#xd;
            &quot;planId&quot;: 4,&#xd;
            &quot;planCode&quot;: &quot;6212100004&quot;,&#xd;
            &quot;planName&quot;: &quot;ABHI Activ Health Platinum Essential&quot;,&#xd;
            &quot;sumInsured&quot;: 500000,&#xd;
            &quot;this_plan_is_for&quot;: &quot;People looking for a wide range of health and wellness benefits&quot;,&#xd;
            &quot;premiumAmount&quot;: 8698.0,&#xd;
            &quot;policyType&quot;: &quot;Family Floater&quot;,&#xd;
            &quot;deductible&quot;: &quot;0.0&quot;,&#xd;
            &quot;quoteId&quot;: &quot;Q-81affd2d-c227-42ca-9278-6f53351c7460&quot;,&#xd;
            &quot;usp&quot;: [&#xd;
                &quot;Day 1 cover for chronic diseases&quot;,&#xd;
                &quot;No Claim Bonus&quot;,&#xd;
                &quot;Policy Premium Return&quot;,&#xd;
                &quot;Expert Health Assistance&quot;,&#xd;
                &quot;Cashless Home Treatment&quot;&#xd;
            ]&#xd;
        }&#xd;
    ],&#xd;
     &quot;proposerInsuredDetails&quot;: {&#xd;
        &quot;nominee&quot;: {&#xd;
            &quot;nomineename&quot;: &quot;Jane Doe&quot;,&#xd;
            &quot;nomineemno&quot;: &quot;9876543210&quot;,&#xd;
            &quot;nomineerelationcode&quot;: 1&#xd;
        },&#xd;
        &quot;proposerInsured&quot;: [&#xd;
            { &#xd;
                &quot;insuredmember&quot;: &quot;self&quot;,&#xd;
                &quot;name&quot;: &quot;John&quot;,&#xd;
                &quot;dob&quot;: &quot;1985-10-15&quot;,&#xd;
                &quot;mno&quot;: &quot;1234567890&quot;,&#xd;
                &quot;panno&quot;: &quot;AWAPR91955F&quot;,&#xd;
                &quot;mailid&quot;: &quot;john@example.com&quot;,&#xd;
                &quot;maritalstatus&quot;: &quot;Single&quot;,&#xd;
                &quot;nationality&quot;: &quot;Indian&quot;,&#xd;
                &quot;height&quot;: 175,&#xd;
                &quot;weight&quot;: 75,&#xd;
                &quot;educationid&quot;: 2,&#xd;
                &quot;occupationid&quot;: 3,&#xd;
                &quot;incomerangeid&quot;: 4,&#xd;
                &quot;proposer&quot;: true&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &#xd;
    &quot;kycDetails&quot;:{&#xd;
        &quot;kyctype&quot;:&quot;&quot;,&#xd;
        &quot;gmaplocation&quot;:&quot;&quot;,&#xd;
        &quot;apartment&quot;:&quot;&quot;,&#xd;
        &quot;landmark&quot;:&quot;&quot;,&#xd;
        &quot;pincode&quot;:1234,&#xd;
        &quot;city&quot;:&quot;&quot;,&#xd;
        &quot;state&quot;:&quot;&quot;,&#xd;
        &quot;addresstype&quot;:&quot;&quot;,&#xd;
        &quot;ckycflag&quot;: false,&#xd;
        &quot;ckycno&quot;: null,&#xd;
        &quot;digilocker&quot;: false,&#xd;
        &quot;maskedaadharnumber&quot;: null,&#xd;
        &quot;hypervergeovdstatus&quot;: true,&#xd;
        &quot;kycstatus&quot;: null,&#xd;
        &quot;photo&quot;: null,&#xd;
        &quot;errorMessage&quot;: null,&#xd;
        &quot;imageurl&quot;: &quot;https://prod-audit-portal-ind.s3.ap-south-1.amazonaws.com/gkyc-ap-south-1/readId/2023-09-20/qw9rjg/1695219582576-add2986b-966c-4bb5-a7e6-a1d28f495869/image.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAZRKK5ZMRVZOEGSPG%2F20230920%2Fap-south-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20230920T180233Z&amp;X-Amz-Expires=900&amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEPD%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCmFwLXNvdXRoLTEiRzBFAiEAh49nqNTJ2VDMmYYOjormlQvgN6vOtp8aK8NEWAOK9BwCIChzJ%2FNlZ46lFfN8HtF7KTROWgfLZeErKFDmG%2FsyDYoLKsgFCNn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQARoMNjU1Njc2NTI1MzQ3IgxRU6QftYHNOnhdWGEqnAU2HFKca1JHv%2F%2FAnb%2BhxQLp71VrSLQoWAQE2NFqZu3WMagHgEOZbWGfMGjnSkOx%2FharzGS6AKoUmE%2F0TY8KT1TBtfPlYP%2Bn1ux7XyW7Bx3qSLqhYbQfh3vVJWbfAfDutM7%2FBmQYLe%2FiGiUCfUjWMG6T0rXDtONhKQVXJm4wvnjxBB13yXvAQVwZWM1nObuEMvhQill8MJaCuoKR98nbx5hhkSOkaCTAMo%2BZH6B2CBR2zdOgPbdOpL%2BayrDNKJeOEkhnwE4lgBz6qxk5nT2LBMHdZZuciTMU9rSDnTlfLCrc13T%2B%2Bpcaw7Vu4OzR2wkNwOnaX75Cj1TJoKqKfnZsEhq0IXKZibAl%2BqJESZ72EtHrdX%2FXgNjPWRNKDCinMNQrfd61%2BSyA8iocsVEFrONUTB1mxWgjAz67aPhPJqlO96JfZbXH91UKDJiJd4fiXPJ4n4DABuSRuAXqMYaODi3RvI2aXSUTIPAYHMY0pO9LJZ1%2F16OLGDBAi7m9HK8XW7zVL7waBlZOKNduywuSz1ZlIpWAoCC5bX3LQa8zQY6sG4DFwaHDyFwNAIqc2iO0cAXzWb2jCo%2BALbcLEIIanzcOBQ7CG4f5WHmrgsO19W1y7uWcWBCYX2edcDS41fOBd9Qrqc2RwcIoiPJMeGcBM8eH0iez23x2pS%2BjDRpHC8cU6r8joQFJcJjSyahz%2BRXq4XKf5ZO8GQzf1gnF71p33fyT6%2B9MXy1WJzl21WfXMhBRBI7DbgnLzcyBC6vHdIUYAnOIW1b5qHfS09Pk1Irnzl1xfzas4IjSb0CwgD4HnhH4Ya68w0W6v9%2FkzJCcHR2sgPRBBe3pbjw7dffnB8YfCS2d5PSlEMPXDGCdnZ8yF6vKy0p%2FyZSgoZrzDETBCrSkUzDloKyoBjqxAZPLav4ZRorfps2SQ7%2FGbwCy7QsRKMZ9uy7d8MOEgU5Y5jE1hjVft8ihe4kSDcr3XrvCjBTTAyU2ha1NakueYTwakFCMT6xbAIx23HrH%2Bzu4Pgzw0SZK0roI2OCQXLr88fbpE4k1KN5b97FcF2d9oT8V3xEytYyyKGpdNHhRAKUH1N1aUcewewksNAe4wqX99P5WCkQU56usfisD9aabHwVOYItsbhIa7Br8ASGnGSOpHw%3D%3D&amp;X-Amz-Signature=30b954a772508d3f7bb9799c998723f42ec77725c67c8f983de5bc6c195f540a&amp;X-Amz-SignedHeaders=host&quot;,&#xd;
        &quot;idNumber&quot;: &quot;XXXXXXXX8553&quot;,&#xd;
        &quot;kycmodifiedpremium&quot;:&quot;2000&quot;&#xd;
    },&#xd;
    &quot;currentstep&quot;: 4,&#xd;
    &quot;finalstep&quot;: 7&#xd;
    }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${kycdetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/postData</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00o_POST_lifestyledetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 25,&#xd;
    &quot;super5&quot;: false,&#xd;
    &quot;super10&quot;: false,&#xd;
    &quot;super15&quot;: false,&#xd;
    &quot;sumInsured&quot;: 500000,&#xd;
    &quot;createdBy&quot;: &quot;user&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;user&quot;,&#xd;
    &quot;active&quot;: true,&#xd;
    &quot;selectedPlanId&quot;: 1,&#xd;
    &quot;selectedQuoteId&quot;: &quot;Q06cd9134-a87d-47d9-9d07-225028ac59a3&quot;,&#xd;
    &quot;selfAge&quot;: 25,&#xd;
    &quot;spouseAge&quot;: 0,&#xd;
    &quot;son1age&quot;: 0,&#xd;
    &quot;son2age&quot;: 12,&#xd;
    &quot;son3age&quot;: 0,&#xd;
    &quot;son4age&quot;: 0,&#xd;
    &quot;daughter1age&quot;: 13,&#xd;
    &quot;daughter2age&quot;: 0,&#xd;
    &quot;daughter3age&quot;: 0,&#xd;
    &quot;daughter4age&quot;: 0,&#xd;
    &quot;fatherAge&quot;: 0,&#xd;
    &quot;motherAge&quot;: 0,&#xd;
    &quot;fatherinlawage&quot;: 0,&#xd;
    &quot;motherinlawage&quot;: 0,&#xd;
    &quot;gender&quot;: &quot;Male&quot;,&#xd;
    &quot;locationPin&quot;: 400025,&#xd;
    &quot;existingInsurance&quot;: false,&#xd;
    &quot;existingpolicyType&quot;: null,&#xd;
    &quot;existingCoverage&quot;: 0,&#xd;
    &quot;proposalId&quot;: &quot;P-9d77508a-4848-40f5-aacd-5dde072657e6&quot;,&#xd;
    &quot;addonDetails&quot;: [&#xd;
        {&#xd;
            &quot;addoninsured&quot;: &quot;self&quot;,&#xd;
            &quot;addonname&quot;: &quot;Future Secure&quot;,&#xd;
            &quot;addoninput&quot;: &quot;12&quot;,&#xd;
            &quot;premium&quot;: 8.7&#xd;
        }&#xd;
    ],&#xd;
    &quot;planDetails&quot;: [&#xd;
        {&#xd;
            &quot;planId&quot;: 1,&#xd;
            &quot;planCode&quot;: &quot;7100100002&quot;,&#xd;
            &quot;planName&quot;: &quot;ABHI Activ Fit Plus&quot;,&#xd;
            &quot;sumInsured&quot;: 500000,&#xd;
            &quot;this_plan_is_for&quot;: &quot;For Health conscious people who stay active&quot;,&#xd;
            &quot;premiumAmount&quot;: 11327.0,&#xd;
            &quot;policyType&quot;: &quot;Family Floater&quot;,&#xd;
            &quot;deductible&quot;: &quot;0.0&quot;,&#xd;
            &quot;quoteId&quot;: &quot;Q-a091c9a0-c1d3-4d4a-9e7e-067320076e8d&quot;,&#xd;
            &quot;usp&quot;: [&#xd;
                &quot;Unlimited Refill&quot;,&#xd;
                &quot;Policy Premium Return&quot;,&#xd;
                &quot;Good Health Discount&quot;,&#xd;
                &quot;Pre &amp; Post Hospitalisation&quot;,&#xd;
                &quot;Early Bird Discount&quot;&#xd;
            ]&#xd;
        },&#xd;
        {&#xd;
            &quot;planId&quot;: 4,&#xd;
            &quot;planCode&quot;: &quot;6212100004&quot;,&#xd;
            &quot;planName&quot;: &quot;ABHI Activ Health Platinum Essential&quot;,&#xd;
            &quot;sumInsured&quot;: 500000,&#xd;
            &quot;this_plan_is_for&quot;: &quot;People looking for a wide range of health and wellness benefits&quot;,&#xd;
            &quot;premiumAmount&quot;: 8698.0,&#xd;
            &quot;policyType&quot;: &quot;Family Floater&quot;,&#xd;
            &quot;deductible&quot;: &quot;0.0&quot;,&#xd;
            &quot;quoteId&quot;: &quot;Q-81affd2d-c227-42ca-9278-6f53351c7460&quot;,&#xd;
            &quot;usp&quot;: [&#xd;
                &quot;Day 1 cover for chronic diseases&quot;,&#xd;
                &quot;No Claim Bonus&quot;,&#xd;
                &quot;Policy Premium Return&quot;,&#xd;
                &quot;Expert Health Assistance&quot;,&#xd;
                &quot;Cashless Home Treatment&quot;&#xd;
            ]&#xd;
        }&#xd;
    ],&#xd;
   &quot;proposerInsuredDetails&quot;: {&#xd;
        &quot;nominee&quot;: {&#xd;
            &quot;nomineename&quot;: &quot;Jane Doe&quot;,&#xd;
            &quot;nomineemno&quot;: &quot;9876543210&quot;,&#xd;
            &quot;nomineerelationcode&quot;: 1&#xd;
        },&#xd;
        &quot;proposerInsured&quot;: [&#xd;
            { &#xd;
                &quot;insuredmember&quot;: &quot;self&quot;,&#xd;
                &quot;name&quot;: &quot;John&quot;,&#xd;
                &quot;dob&quot;: &quot;1985-10-15&quot;,&#xd;
                &quot;mno&quot;: &quot;1234567890&quot;,&#xd;
                &quot;panno&quot;: &quot;AWAPR91955F&quot;,&#xd;
                &quot;mailid&quot;: &quot;john@example.com&quot;,&#xd;
                &quot;maritalstatus&quot;: &quot;Single&quot;,&#xd;
                &quot;nationality&quot;: &quot;Indian&quot;,&#xd;
                &quot;height&quot;: 175,&#xd;
                &quot;weight&quot;: 75,&#xd;
                &quot;educationid&quot;: 2,&#xd;
                &quot;occupationid&quot;: 3,&#xd;
                &quot;incomerangeid&quot;: 4,&#xd;
                &quot;proposer&quot;: true&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &#xd;
    &quot;kycDetails&quot;:{&#xd;
        &quot;kyctype&quot;:&quot;&quot;,&#xd;
        &quot;gmaplocation&quot;:&quot;&quot;,&#xd;
        &quot;apartment&quot;:&quot;&quot;,&#xd;
        &quot;landmark&quot;:&quot;&quot;,&#xd;
        &quot;pincode&quot;:1234,&#xd;
        &quot;city&quot;:&quot;&quot;,&#xd;
        &quot;state&quot;:&quot;&quot;,&#xd;
        &quot;addresstype&quot;:&quot;&quot;,&#xd;
        &quot;ckycflag&quot;: false,&#xd;
        &quot;ckycno&quot;: null,&#xd;
        &quot;digilocker&quot;: false,&#xd;
        &quot;maskedaadharnumber&quot;: null,&#xd;
        &quot;hypervergeovdstatus&quot;: true,&#xd;
        &quot;kycstatus&quot;: null,&#xd;
        &quot;photo&quot;: null,&#xd;
        &quot;errorMessage&quot;: null,&#xd;
        &quot;imageurl&quot;: &quot;https://prod-audit-portal-ind.s3.ap-south-1.amazonaws.com/gkyc-ap-south-1/readId/2023-09-20/qw9rjg/1695219582576-add2986b-966c-4bb5-a7e6-a1d28f495869/image.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAZRKK5ZMRVZOEGSPG%2F20230920%2Fap-south-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20230920T180233Z&amp;X-Amz-Expires=900&amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEPD%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCmFwLXNvdXRoLTEiRzBFAiEAh49nqNTJ2VDMmYYOjormlQvgN6vOtp8aK8NEWAOK9BwCIChzJ%2FNlZ46lFfN8HtF7KTROWgfLZeErKFDmG%2FsyDYoLKsgFCNn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQARoMNjU1Njc2NTI1MzQ3IgxRU6QftYHNOnhdWGEqnAU2HFKca1JHv%2F%2FAnb%2BhxQLp71VrSLQoWAQE2NFqZu3WMagHgEOZbWGfMGjnSkOx%2FharzGS6AKoUmE%2F0TY8KT1TBtfPlYP%2Bn1ux7XyW7Bx3qSLqhYbQfh3vVJWbfAfDutM7%2FBmQYLe%2FiGiUCfUjWMG6T0rXDtONhKQVXJm4wvnjxBB13yXvAQVwZWM1nObuEMvhQill8MJaCuoKR98nbx5hhkSOkaCTAMo%2BZH6B2CBR2zdOgPbdOpL%2BayrDNKJeOEkhnwE4lgBz6qxk5nT2LBMHdZZuciTMU9rSDnTlfLCrc13T%2B%2Bpcaw7Vu4OzR2wkNwOnaX75Cj1TJoKqKfnZsEhq0IXKZibAl%2BqJESZ72EtHrdX%2FXgNjPWRNKDCinMNQrfd61%2BSyA8iocsVEFrONUTB1mxWgjAz67aPhPJqlO96JfZbXH91UKDJiJd4fiXPJ4n4DABuSRuAXqMYaODi3RvI2aXSUTIPAYHMY0pO9LJZ1%2F16OLGDBAi7m9HK8XW7zVL7waBlZOKNduywuSz1ZlIpWAoCC5bX3LQa8zQY6sG4DFwaHDyFwNAIqc2iO0cAXzWb2jCo%2BALbcLEIIanzcOBQ7CG4f5WHmrgsO19W1y7uWcWBCYX2edcDS41fOBd9Qrqc2RwcIoiPJMeGcBM8eH0iez23x2pS%2BjDRpHC8cU6r8joQFJcJjSyahz%2BRXq4XKf5ZO8GQzf1gnF71p33fyT6%2B9MXy1WJzl21WfXMhBRBI7DbgnLzcyBC6vHdIUYAnOIW1b5qHfS09Pk1Irnzl1xfzas4IjSb0CwgD4HnhH4Ya68w0W6v9%2FkzJCcHR2sgPRBBe3pbjw7dffnB8YfCS2d5PSlEMPXDGCdnZ8yF6vKy0p%2FyZSgoZrzDETBCrSkUzDloKyoBjqxAZPLav4ZRorfps2SQ7%2FGbwCy7QsRKMZ9uy7d8MOEgU5Y5jE1hjVft8ihe4kSDcr3XrvCjBTTAyU2ha1NakueYTwakFCMT6xbAIx23HrH%2Bzu4Pgzw0SZK0roI2OCQXLr88fbpE4k1KN5b97FcF2d9oT8V3xEytYyyKGpdNHhRAKUH1N1aUcewewksNAe4wqX99P5WCkQU56usfisD9aabHwVOYItsbhIa7Br8ASGnGSOpHw%3D%3D&amp;X-Amz-Signature=30b954a772508d3f7bb9799c998723f42ec77725c67c8f983de5bc6c195f540a&amp;X-Amz-SignedHeaders=host&quot;,&#xd;
        &quot;idNumber&quot;: &quot;XXXXXXXX8553&quot;,&#xd;
        &quot;kycmodifiedpremium&quot;:&quot;2000&quot;&#xd;
    },&#xd;
    &quot;lifestylemedicaldetails&quot;: [&#xd;
        {&#xd;
            &quot;insuredMember&quot;: &quot;self&quot;,&#xd;
            &quot;name&quot;: &quot;john&quot;,&#xd;
            &quot;lifeStyleDetails&quot;: [&#xd;
                {&#xd;
                    &quot;habitName&quot;: &quot;smoking&quot;,&#xd;
                    &quot;habitCount&quot;: 3&#xd;
                }&#xd;
            ],&#xd;
            &quot;medicalDetails&quot;: [&#xd;
                {&#xd;
                    &quot;diseaseName&quot;: &quot;Hypertension&quot;,&#xd;
                    &quot;diagnosisStartDate&quot;: &quot;2023-09-15&quot;,&#xd;
                    &quot;lastConsultationDate&quot;: &quot;2023-09-30&quot;,&#xd;
                    &quot;surgeryName&quot;: &quot;None&quot;,&#xd;
                    &quot;treatmentGiven&quot;: &quot;Medication&quot;,&#xd;
                    &quot;otherComments&quot;: &quot;Patient is responding well to treatment.&quot;,&#xd;
                    &quot;disability&quot;: &quot;None&quot;,&#xd;
                    &quot;hospitalizationStartDate&quot;: &quot;2023-09-20&quot;,&#xd;
                    &quot;hospitalizationEndDate&quot;: &quot;2023-09-25&quot;,&#xd;
                    &quot;isPregnancy&quot;: false,&#xd;
                    &quot;expectedDelivery&quot;: null,&#xd;
                    &quot;previousPolicyNumber&quot;: &quot;POL123456&quot;,&#xd;
                    &quot;benefitType&quot;: &quot;Health&quot;,&#xd;
                    &quot;previousSumInsured&quot;: &quot;50000&quot;,&#xd;
                    &quot;isPreviousClaimed&quot;: true,&#xd;
                    &quot;isPrevProposalDeclined&quot;: false,&#xd;
                    &quot;proposalDeclComments&quot;: &quot;No previous proposal was declined.&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ],&#xd;
    &quot;currentstep&quot;: 5,&#xd;
    &quot;finalstep&quot;: 7&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${lifestyledetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/postData</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00p_POST_reviewanddeclaration" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 25,&#xd;
    &quot;super5&quot;: false,&#xd;
    &quot;super10&quot;: false,&#xd;
    &quot;super15&quot;: false,&#xd;
    &quot;sumInsured&quot;: 500000,&#xd;
    &quot;createdBy&quot;: &quot;user&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;user&quot;,&#xd;
    &quot;active&quot;: true,&#xd;
    &quot;selectedPlanId&quot;: 1,&#xd;
    &quot;selectedQuoteId&quot;: &quot;Q06cd9134-a87d-47d9-9d07-225028ac59a3&quot;,&#xd;
    &quot;proposalId&quot;: &quot;P-9d77508a-4848-40f5-aacd-5dde072657e6&quot;,&#xd;
    &quot;selfAge&quot;: 25,&#xd;
    &quot;spouseAge&quot;: 0,&#xd;
    &quot;son1age&quot;: 0,&#xd;
    &quot;son2age&quot;: 12,&#xd;
    &quot;son3age&quot;: 0,&#xd;
    &quot;son4age&quot;: 0,&#xd;
    &quot;daughter1age&quot;: 13,&#xd;
    &quot;daughter2age&quot;: 0,&#xd;
    &quot;daughter3age&quot;: 0,&#xd;
    &quot;daughter4age&quot;: 0,&#xd;
    &quot;fatherAge&quot;: 0,&#xd;
    &quot;motherAge&quot;: 0,&#xd;
    &quot;fatherinlawage&quot;: 0,&#xd;
    &quot;motherinlawage&quot;: 0,&#xd;
    &quot;gender&quot;: &quot;Male&quot;,&#xd;
    &quot;locationPin&quot;: 400025,&#xd;
    &quot;existingInsurance&quot;: false,&#xd;
    &quot;existingpolicyType&quot;: null,&#xd;
    &quot;existingCoverage&quot;: 0,&#xd;
    &quot;kycmodifiedpremium&quot;: &quot;&quot;,&#xd;
    &quot;ghddiscount&quot;: &quot;&quot;,&#xd;
    &quot;addonDetails&quot;: [&#xd;
        {&#xd;
            &quot;addoninsured&quot;: &quot;self&quot;,&#xd;
            &quot;addonname&quot;: &quot;Future Secure&quot;,&#xd;
            &quot;addoninput&quot;: &quot;12&quot;,&#xd;
            &quot;premium&quot;: 8.7&#xd;
        }&#xd;
    ],&#xd;
    &quot;planDetails&quot;: [&#xd;
        {&#xd;
            &quot;planId&quot;: 1,&#xd;
            &quot;planCode&quot;: &quot;7100100002&quot;,&#xd;
            &quot;planName&quot;: &quot;ABHI Activ Fit Plus&quot;,&#xd;
            &quot;sumInsured&quot;: 500000,&#xd;
            &quot;this_plan_is_for&quot;: &quot;For Health conscious people who stay active&quot;,&#xd;
            &quot;premiumAmount&quot;: 11327.0,&#xd;
            &quot;policyType&quot;: &quot;Family Floater&quot;,&#xd;
            &quot;deductible&quot;: &quot;0.0&quot;,&#xd;
            &quot;quoteId&quot;: &quot;Q-a091c9a0-c1d3-4d4a-9e7e-067320076e8d&quot;,&#xd;
            &quot;usp&quot;: [&#xd;
                &quot;Unlimited Refill&quot;,&#xd;
                &quot;Policy Premium Return&quot;,&#xd;
                &quot;Good Health Discount&quot;,&#xd;
                &quot;Pre &amp; Post Hospitalisation&quot;,&#xd;
                &quot;Early Bird Discount&quot;&#xd;
            ]&#xd;
        },&#xd;
        {&#xd;
            &quot;planId&quot;: 4,&#xd;
            &quot;planCode&quot;: &quot;6212100004&quot;,&#xd;
            &quot;planName&quot;: &quot;ABHI Activ Health Platinum Essential&quot;,&#xd;
            &quot;sumInsured&quot;: 500000,&#xd;
            &quot;this_plan_is_for&quot;: &quot;People looking for a wide range of health and wellness benefits&quot;,&#xd;
            &quot;premiumAmount&quot;: 8698.0,&#xd;
            &quot;policyType&quot;: &quot;Family Floater&quot;,&#xd;
            &quot;deductible&quot;: &quot;0.0&quot;,&#xd;
            &quot;quoteId&quot;: &quot;Q-81affd2d-c227-42ca-9278-6f53351c7460&quot;,&#xd;
            &quot;usp&quot;: [&#xd;
                &quot;Day 1 cover for chronic diseases&quot;,&#xd;
                &quot;No Claim Bonus&quot;,&#xd;
                &quot;Policy Premium Return&quot;,&#xd;
                &quot;Expert Health Assistance&quot;,&#xd;
                &quot;Cashless Home Treatment&quot;&#xd;
            ]&#xd;
        }&#xd;
    ],&#xd;
    &quot;proposerInsuredDetails&quot;: {&#xd;
        &quot;nominee&quot;: {&#xd;
            &quot;nomineename&quot;: &quot;Jane Doe&quot;,&#xd;
            &quot;nomineemno&quot;: &quot;9876543210&quot;,&#xd;
            &quot;nomineerelationcode&quot;: 1&#xd;
        },&#xd;
        &quot;proposerInsured&quot;: [&#xd;
            { &#xd;
                &quot;insuredmember&quot;: &quot;self&quot;,&#xd;
                &quot;name&quot;: &quot;John&quot;,&#xd;
                &quot;dob&quot;: &quot;1985-10-15&quot;,&#xd;
                &quot;mno&quot;: &quot;1234567890&quot;,&#xd;
                &quot;panno&quot;: &quot;AWAPR91955F&quot;,&#xd;
                &quot;mailid&quot;: &quot;john@example.com&quot;,&#xd;
                &quot;maritalstatus&quot;: &quot;Single&quot;,&#xd;
                &quot;nationality&quot;: &quot;Indian&quot;,&#xd;
                &quot;height&quot;: 175,&#xd;
                &quot;weight&quot;: 75,&#xd;
                &quot;educationid&quot;: 2,&#xd;
                &quot;occupationid&quot;: 3,&#xd;
                &quot;incomerangeid&quot;: 4,&#xd;
                &quot;proposer&quot;: true&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &#xd;
    &quot;kycDetails&quot;: {&#xd;
        &quot;kyctype&quot;: &quot;&quot;,&#xd;
        &quot;gmaplocation&quot;: &quot;&quot;,&#xd;
        &quot;apartment&quot;: &quot;&quot;,&#xd;
        &quot;landmark&quot;: &quot;&quot;,&#xd;
        &quot;pincode&quot;: 1234,&#xd;
        &quot;city&quot;: &quot;&quot;,&#xd;
        &quot;state&quot;: &quot;&quot;,&#xd;
        &quot;addresstype&quot;: &quot;&quot;,&#xd;
        &quot;ckycflag&quot;: false,&#xd;
        &quot;ckycno&quot;: null,&#xd;
        &quot;digilocker&quot;: false,&#xd;
        &quot;maskedaadharnumber&quot;: null,&#xd;
        &quot;hypervergeovdstatus&quot;: true,&#xd;
        &quot;kycstatus&quot;: null,&#xd;
        &quot;photo&quot;: null,&#xd;
        &quot;errorMessage&quot;: null,&#xd;
        &quot;imageurl&quot;: &quot;https://prod-audit-portal-ind.s3.ap-south-1.amazonaws.com/gkyc-ap-south-1/readId/2023-09-20/qw9rjg/1695219582576-add2986b-966c-4bb5-a7e6-a1d28f495869/image.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAZRKK5ZMRVZOEGSPG%2F20230920%2Fap-south-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20230920T180233Z&amp;X-Amz-Expires=900&amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEPD%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCmFwLXNvdXRoLTEiRzBFAiEAh49nqNTJ2VDMmYYOjormlQvgN6vOtp8aK8NEWAOK9BwCIChzJ%2FNlZ46lFfN8HtF7KTROWgfLZeErKFDmG%2FsyDYoLKsgFCNn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQARoMNjU1Njc2NTI1MzQ3IgxRU6QftYHNOnhdWGEqnAU2HFKca1JHv%2F%2FAnb%2BhxQLp71VrSLQoWAQE2NFqZu3WMagHgEOZbWGfMGjnSkOx%2FharzGS6AKoUmE%2F0TY8KT1TBtfPlYP%2Bn1ux7XyW7Bx3qSLqhYbQfh3vVJWbfAfDutM7%2FBmQYLe%2FiGiUCfUjWMG6T0rXDtONhKQVXJm4wvnjxBB13yXvAQVwZWM1nObuEMvhQill8MJaCuoKR98nbx5hhkSOkaCTAMo%2BZH6B2CBR2zdOgPbdOpL%2BayrDNKJeOEkhnwE4lgBz6qxk5nT2LBMHdZZuciTMU9rSDnTlfLCrc13T%2B%2Bpcaw7Vu4OzR2wkNwOnaX75Cj1TJoKqKfnZsEhq0IXKZibAl%2BqJESZ72EtHrdX%2FXgNjPWRNKDCinMNQrfd61%2BSyA8iocsVEFrONUTB1mxWgjAz67aPhPJqlO96JfZbXH91UKDJiJd4fiXPJ4n4DABuSRuAXqMYaODi3RvI2aXSUTIPAYHMY0pO9LJZ1%2F16OLGDBAi7m9HK8XW7zVL7waBlZOKNduywuSz1ZlIpWAoCC5bX3LQa8zQY6sG4DFwaHDyFwNAIqc2iO0cAXzWb2jCo%2BALbcLEIIanzcOBQ7CG4f5WHmrgsO19W1y7uWcWBCYX2edcDS41fOBd9Qrqc2RwcIoiPJMeGcBM8eH0iez23x2pS%2BjDRpHC8cU6r8joQFJcJjSyahz%2BRXq4XKf5ZO8GQzf1gnF71p33fyT6%2B9MXy1WJzl21WfXMhBRBI7DbgnLzcyBC6vHdIUYAnOIW1b5qHfS09Pk1Irnzl1xfzas4IjSb0CwgD4HnhH4Ya68w0W6v9%2FkzJCcHR2sgPRBBe3pbjw7dffnB8YfCS2d5PSlEMPXDGCdnZ8yF6vKy0p%2FyZSgoZrzDETBCrSkUzDloKyoBjqxAZPLav4ZRorfps2SQ7%2FGbwCy7QsRKMZ9uy7d8MOEgU5Y5jE1hjVft8ihe4kSDcr3XrvCjBTTAyU2ha1NakueYTwakFCMT6xbAIx23HrH%2Bzu4Pgzw0SZK0roI2OCQXLr88fbpE4k1KN5b97FcF2d9oT8V3xEytYyyKGpdNHhRAKUH1N1aUcewewksNAe4wqX99P5WCkQU56usfisD9aabHwVOYItsbhIa7Br8ASGnGSOpHw%3D%3D&amp;X-Amz-Signature=30b954a772508d3f7bb9799c998723f42ec77725c67c8f983de5bc6c195f540a&amp;X-Amz-SignedHeaders=host&quot;,&#xd;
        &quot;idNumber&quot;: &quot;XXXXXXXX8553&quot;,&#xd;
        &quot;kycmodifiedpremium&quot;: &quot;2000&quot;&#xd;
    },&#xd;
    &quot;lifestylemedicaldetails&quot;: [&#xd;
        {&#xd;
            &quot;insuredMember&quot;: &quot;self&quot;,&#xd;
            &quot;name&quot;: &quot;john&quot;,&#xd;
            &quot;lifeStyleDetails&quot;: [&#xd;
                {&#xd;
                    &quot;habitName&quot;: &quot;smoking&quot;,&#xd;
                    &quot;habitCount&quot;: 3&#xd;
                }&#xd;
            ],&#xd;
            &quot;medicalDetails&quot;: [&#xd;
                {&#xd;
                    &quot;diseaseName&quot;: &quot;Hypertension&quot;,&#xd;
                    &quot;diagnosisStartDate&quot;: &quot;2023-09-15&quot;,&#xd;
                    &quot;lastConsultationDate&quot;: &quot;2023-09-30&quot;,&#xd;
                    &quot;surgeryName&quot;: &quot;None&quot;,&#xd;
                    &quot;treatmentGiven&quot;: &quot;Medication&quot;,&#xd;
                    &quot;otherComments&quot;: &quot;Patient is responding well to treatment.&quot;,&#xd;
                    &quot;disability&quot;: &quot;None&quot;,&#xd;
                    &quot;hospitalizationStartDate&quot;: &quot;2023-09-20&quot;,&#xd;
                    &quot;hospitalizationEndDate&quot;: &quot;2023-09-25&quot;,&#xd;
                    &quot;isPregnancy&quot;: false,&#xd;
                    &quot;expectedDelivery&quot;: null,&#xd;
                    &quot;previousPolicyNumber&quot;: &quot;POL123456&quot;,&#xd;
                    &quot;benefitType&quot;: &quot;Health&quot;,&#xd;
                    &quot;previousSumInsured&quot;: &quot;50000&quot;,&#xd;
                    &quot;isPreviousClaimed&quot;: true,&#xd;
                    &quot;isPrevProposalDeclined&quot;: false,&#xd;
                    &quot;proposalDeclComments&quot;: &quot;No previous proposal was declined.&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ],&#xd;
    &quot;reviewDeclDetails&quot;: {&#xd;
        &quot;isstpFlag&quot;: true,&#xd;
        &quot;policyTenure&quot;: 10,&#xd;
        &quot;iseiaAccount&quot;: true,&#xd;
        &quot;isregisterPolicyInEia&quot;: false,&#xd;
        &quot;eiaNumber&quot;: 9876,&#xd;
        &quot;registerPolicyInEiaValue&quot;: &quot;No&quot;,&#xd;
        &quot;esignStatus&quot;: true,&#xd;
        &quot;isGHDApplicable&quot;: &quot;Y&quot;,&#xd;
        &quot;ghdDetails&quot;: [&#xd;
            {&#xd;
                &quot;ghdInsuredMember&quot;: &quot;John Doe&quot;,&#xd;
                &quot;isghdFlag&quot;: true,&#xd;
                &quot;ghddiscount&quot;: &quot;20&quot;,&#xd;
                &quot;ghdqstns&quot;: [&#xd;
                    {&#xd;
                        &quot;ghdQstn&quot;: &quot;ascdas&quot;,&#xd;
                        &quot;ghdAns&quot;: &quot;DCac&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;ghdQstn&quot;: &quot;ascdas&quot;,&#xd;
                        &quot;ghdAns&quot;: &quot;DCac&quot;&#xd;
                    }&#xd;
                ]&#xd;
            },&#xd;
            {&#xd;
                &quot;ghdInsuredMember&quot;: &quot;John&quot;,&#xd;
                &quot;isghdFlag&quot;: true,&#xd;
                &quot;ghddiscount&quot;: &quot;20&quot;,&#xd;
                &quot;ghdqstns&quot;: [&#xd;
                    {&#xd;
                        &quot;ghdQstn&quot;: &quot;ascdas&quot;,&#xd;
                        &quot;ghdAns&quot;: &quot;DCac&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;ghdQstn&quot;: &quot;ascdas&quot;,&#xd;
                        &quot;ghdAns&quot;: &quot;DCac&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;currentstep&quot;: 6,&#xd;
    &quot;finalstep&quot;: 7&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${reviewanddeclaration}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/postData</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00q_POST_buydetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 25,&#xd;
    &quot;super5&quot;: false,&#xd;
    &quot;super10&quot;: false,&#xd;
    &quot;super15&quot;: false,&#xd;
    &quot;sumInsured&quot;: 500000,&#xd;
    &quot;createdBy&quot;: &quot;user&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;user&quot;,&#xd;
    &quot;active&quot;: true,&#xd;
    &quot;selectedPlanId&quot;: 1,&#xd;
    &quot;selectedQuoteId&quot;: &quot;Q06cd9134-a87d-47d9-9d07-225028ac59a3&quot;,&#xd;
    &quot;proposalId&quot;: &quot;P-9d77508a-4848-40f5-aacd-5dde072657e6&quot;,&#xd;
    &quot;selfAge&quot;: 25,&#xd;
    &quot;spouseAge&quot;: 0,&#xd;
    &quot;son1age&quot;: 0,&#xd;
    &quot;son2age&quot;: 12,&#xd;
    &quot;son3age&quot;: 0,&#xd;
    &quot;son4age&quot;: 0,&#xd;
    &quot;daughter1age&quot;: 13,&#xd;
    &quot;daughter2age&quot;: 0,&#xd;
    &quot;daughter3age&quot;: 0,&#xd;
    &quot;daughter4age&quot;: 0,&#xd;
    &quot;fatherAge&quot;: 0,&#xd;
    &quot;motherAge&quot;: 0,&#xd;
    &quot;fatherinlawage&quot;: 0,&#xd;
    &quot;motherinlawage&quot;: 0,&#xd;
    &quot;gender&quot;: &quot;Male&quot;,&#xd;
    &quot;locationPin&quot;: 400025,&#xd;
    &quot;existingInsurance&quot;: false,&#xd;
    &quot;existingpolicyType&quot;: null,&#xd;
    &quot;existingCoverage&quot;: 0,&#xd;
    &quot;kycmodifiedpremium&quot;: &quot;&quot;,&#xd;
    &quot;ghddiscount&quot;: &quot;&quot;,&#xd;
    &quot;addonDetails&quot;: [&#xd;
        {&#xd;
            &quot;addoninsured&quot;: &quot;self&quot;,&#xd;
            &quot;addonname&quot;: &quot;Future Secure&quot;,&#xd;
            &quot;addoninput&quot;: &quot;12&quot;,&#xd;
            &quot;premium&quot;: 8.7&#xd;
        }&#xd;
    ],&#xd;
    &quot;planDetails&quot;: [&#xd;
        {&#xd;
            &quot;planId&quot;: 1,&#xd;
            &quot;planCode&quot;: &quot;7100100002&quot;,&#xd;
            &quot;planName&quot;: &quot;ABHI Activ Fit Plus&quot;,&#xd;
            &quot;sumInsured&quot;: 500000,&#xd;
            &quot;this_plan_is_for&quot;: &quot;For Health conscious people who stay active&quot;,&#xd;
            &quot;premiumAmount&quot;: 11327.0,&#xd;
            &quot;policyType&quot;: &quot;Family Floater&quot;,&#xd;
            &quot;deductible&quot;: &quot;0.0&quot;,&#xd;
            &quot;quoteId&quot;: &quot;Q-a091c9a0-c1d3-4d4a-9e7e-067320076e8d&quot;,&#xd;
            &quot;usp&quot;: [&#xd;
                &quot;Unlimited Refill&quot;,&#xd;
                &quot;Policy Premium Return&quot;,&#xd;
                &quot;Good Health Discount&quot;,&#xd;
                &quot;Pre &amp; Post Hospitalisation&quot;,&#xd;
                &quot;Early Bird Discount&quot;&#xd;
            ]&#xd;
        },&#xd;
        {&#xd;
            &quot;planId&quot;: 4,&#xd;
            &quot;planCode&quot;: &quot;6212100004&quot;,&#xd;
            &quot;planName&quot;: &quot;ABHI Activ Health Platinum Essential&quot;,&#xd;
            &quot;sumInsured&quot;: 500000,&#xd;
            &quot;this_plan_is_for&quot;: &quot;People looking for a wide range of health and wellness benefits&quot;,&#xd;
            &quot;premiumAmount&quot;: 8698.0,&#xd;
            &quot;policyType&quot;: &quot;Family Floater&quot;,&#xd;
            &quot;deductible&quot;: &quot;0.0&quot;,&#xd;
            &quot;quoteId&quot;: &quot;Q-81affd2d-c227-42ca-9278-6f53351c7460&quot;,&#xd;
            &quot;usp&quot;: [&#xd;
                &quot;Day 1 cover for chronic diseases&quot;,&#xd;
                &quot;No Claim Bonus&quot;,&#xd;
                &quot;Policy Premium Return&quot;,&#xd;
                &quot;Expert Health Assistance&quot;,&#xd;
                &quot;Cashless Home Treatment&quot;&#xd;
            ]&#xd;
        }&#xd;
    ],&#xd;
    &quot;proposerInsuredDetails&quot;: {&#xd;
        &quot;nominee&quot;: {&#xd;
            &quot;nomineename&quot;: &quot;Jane Doe&quot;,&#xd;
            &quot;nomineemno&quot;: &quot;9876543210&quot;,&#xd;
            &quot;nomineerelationcode&quot;: 1&#xd;
        },&#xd;
        &quot;proposerInsured&quot;: [&#xd;
            { &#xd;
                &quot;insuredmember&quot;: &quot;self&quot;,&#xd;
                &quot;name&quot;: &quot;John&quot;,&#xd;
                &quot;dob&quot;: &quot;1985-10-15&quot;,&#xd;
                &quot;mno&quot;: &quot;1234567890&quot;,&#xd;
                &quot;panno&quot;: &quot;AWAPR91955F&quot;,&#xd;
                &quot;mailid&quot;: &quot;john@example.com&quot;,&#xd;
                &quot;maritalstatus&quot;: &quot;Single&quot;,&#xd;
                &quot;nationality&quot;: &quot;Indian&quot;,&#xd;
                &quot;height&quot;: 175,&#xd;
                &quot;weight&quot;: 75,&#xd;
                &quot;educationid&quot;: 2,&#xd;
                &quot;occupationid&quot;: 3,&#xd;
                &quot;incomerangeid&quot;: 4,&#xd;
                &quot;proposer&quot;: true&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;kycDetails&quot;: {&#xd;
        &quot;kyctype&quot;: &quot;&quot;,&#xd;
        &quot;gmaplocation&quot;: &quot;&quot;,&#xd;
        &quot;apartment&quot;: &quot;&quot;,&#xd;
        &quot;landmark&quot;: &quot;&quot;,&#xd;
        &quot;pincode&quot;: 1234,&#xd;
        &quot;city&quot;: &quot;&quot;,&#xd;
        &quot;state&quot;: &quot;&quot;,&#xd;
        &quot;addresstype&quot;: &quot;&quot;,&#xd;
        &quot;ckycflag&quot;: false,&#xd;
        &quot;ckycno&quot;: null,&#xd;
        &quot;digilocker&quot;: false,&#xd;
        &quot;maskedaadharnumber&quot;: null,&#xd;
        &quot;hypervergeovdstatus&quot;: true,&#xd;
        &quot;kycstatus&quot;: null,&#xd;
        &quot;photo&quot;: null,&#xd;
        &quot;errorMessage&quot;: null,&#xd;
        &quot;imageurl&quot;: &quot;https://prod-audit-portal-ind.s3.ap-south-1.amazonaws.com/gkyc-ap-south-1/readId/2023-09-20/qw9rjg/1695219582576-add2986b-966c-4bb5-a7e6-a1d28f495869/image.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAZRKK5ZMRVZOEGSPG%2F20230920%2Fap-south-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20230920T180233Z&amp;X-Amz-Expires=900&amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEPD%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCmFwLXNvdXRoLTEiRzBFAiEAh49nqNTJ2VDMmYYOjormlQvgN6vOtp8aK8NEWAOK9BwCIChzJ%2FNlZ46lFfN8HtF7KTROWgfLZeErKFDmG%2FsyDYoLKsgFCNn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQARoMNjU1Njc2NTI1MzQ3IgxRU6QftYHNOnhdWGEqnAU2HFKca1JHv%2F%2FAnb%2BhxQLp71VrSLQoWAQE2NFqZu3WMagHgEOZbWGfMGjnSkOx%2FharzGS6AKoUmE%2F0TY8KT1TBtfPlYP%2Bn1ux7XyW7Bx3qSLqhYbQfh3vVJWbfAfDutM7%2FBmQYLe%2FiGiUCfUjWMG6T0rXDtONhKQVXJm4wvnjxBB13yXvAQVwZWM1nObuEMvhQill8MJaCuoKR98nbx5hhkSOkaCTAMo%2BZH6B2CBR2zdOgPbdOpL%2BayrDNKJeOEkhnwE4lgBz6qxk5nT2LBMHdZZuciTMU9rSDnTlfLCrc13T%2B%2Bpcaw7Vu4OzR2wkNwOnaX75Cj1TJoKqKfnZsEhq0IXKZibAl%2BqJESZ72EtHrdX%2FXgNjPWRNKDCinMNQrfd61%2BSyA8iocsVEFrONUTB1mxWgjAz67aPhPJqlO96JfZbXH91UKDJiJd4fiXPJ4n4DABuSRuAXqMYaODi3RvI2aXSUTIPAYHMY0pO9LJZ1%2F16OLGDBAi7m9HK8XW7zVL7waBlZOKNduywuSz1ZlIpWAoCC5bX3LQa8zQY6sG4DFwaHDyFwNAIqc2iO0cAXzWb2jCo%2BALbcLEIIanzcOBQ7CG4f5WHmrgsO19W1y7uWcWBCYX2edcDS41fOBd9Qrqc2RwcIoiPJMeGcBM8eH0iez23x2pS%2BjDRpHC8cU6r8joQFJcJjSyahz%2BRXq4XKf5ZO8GQzf1gnF71p33fyT6%2B9MXy1WJzl21WfXMhBRBI7DbgnLzcyBC6vHdIUYAnOIW1b5qHfS09Pk1Irnzl1xfzas4IjSb0CwgD4HnhH4Ya68w0W6v9%2FkzJCcHR2sgPRBBe3pbjw7dffnB8YfCS2d5PSlEMPXDGCdnZ8yF6vKy0p%2FyZSgoZrzDETBCrSkUzDloKyoBjqxAZPLav4ZRorfps2SQ7%2FGbwCy7QsRKMZ9uy7d8MOEgU5Y5jE1hjVft8ihe4kSDcr3XrvCjBTTAyU2ha1NakueYTwakFCMT6xbAIx23HrH%2Bzu4Pgzw0SZK0roI2OCQXLr88fbpE4k1KN5b97FcF2d9oT8V3xEytYyyKGpdNHhRAKUH1N1aUcewewksNAe4wqX99P5WCkQU56usfisD9aabHwVOYItsbhIa7Br8ASGnGSOpHw%3D%3D&amp;X-Amz-Signature=30b954a772508d3f7bb9799c998723f42ec77725c67c8f983de5bc6c195f540a&amp;X-Amz-SignedHeaders=host&quot;,&#xd;
        &quot;idNumber&quot;: &quot;XXXXXXXX8553&quot;,&#xd;
        &quot;kycmodifiedpremium&quot;: &quot;2000&quot;&#xd;
    },&#xd;
    &quot;lifestylemedicaldetails&quot;: [&#xd;
        {&#xd;
            &quot;insuredMember&quot;: &quot;self&quot;,&#xd;
            &quot;name&quot;: &quot;john&quot;,&#xd;
            &quot;lifeStyleDetails&quot;: [&#xd;
                {&#xd;
                    &quot;habitName&quot;: &quot;smoking&quot;,&#xd;
                    &quot;habitCount&quot;: 3&#xd;
                }&#xd;
            ],&#xd;
            &quot;medicalDetails&quot;: [&#xd;
                {&#xd;
                    &quot;diseaseName&quot;: &quot;Hypertension&quot;,&#xd;
                    &quot;diagnosisStartDate&quot;: &quot;2023-09-15&quot;,&#xd;
                    &quot;lastConsultationDate&quot;: &quot;2023-09-30&quot;,&#xd;
                    &quot;surgeryName&quot;: &quot;None&quot;,&#xd;
                    &quot;treatmentGiven&quot;: &quot;Medication&quot;,&#xd;
                    &quot;otherComments&quot;: &quot;Patient is responding well to treatment.&quot;,&#xd;
                    &quot;disability&quot;: &quot;None&quot;,&#xd;
                    &quot;hospitalizationStartDate&quot;: &quot;2023-09-20&quot;,&#xd;
                    &quot;hospitalizationEndDate&quot;: &quot;2023-09-25&quot;,&#xd;
                    &quot;isPregnancy&quot;: false,&#xd;
                    &quot;expectedDelivery&quot;: null,&#xd;
                    &quot;previousPolicyNumber&quot;: &quot;POL123456&quot;,&#xd;
                    &quot;benefitType&quot;: &quot;Health&quot;,&#xd;
                    &quot;previousSumInsured&quot;: &quot;50000&quot;,&#xd;
                    &quot;isPreviousClaimed&quot;: true,&#xd;
                    &quot;isPrevProposalDeclined&quot;: false,&#xd;
                    &quot;proposalDeclComments&quot;: &quot;No previous proposal was declined.&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ],&#xd;
    &quot;reviewDeclDetails&quot;: {&#xd;
        &quot;isstpFlag&quot;: true,&#xd;
        &quot;policyTenure&quot;: 10,&#xd;
        &quot;iseiaAccount&quot;: true,&#xd;
        &quot;isregisterPolicyInEia&quot;: false,&#xd;
        &quot;eiaNumber&quot;: 9876,&#xd;
        &quot;registerPolicyInEiaValue&quot;: &quot;No&quot;,&#xd;
        &quot;esignStatus&quot;: true,&#xd;
        &quot;isGHDApplicable&quot;: &quot;Y&quot;,&#xd;
        &quot;ghdDetails&quot;: [&#xd;
            {&#xd;
                &quot;ghdInsuredMember&quot;: &quot;John Doe&quot;,&#xd;
                &quot;isghdFlag&quot;: true,&#xd;
                &quot;ghddiscount&quot;: &quot;20&quot;,&#xd;
                &quot;ghdqstns&quot;: [&#xd;
                    {&#xd;
                        &quot;ghdQstn&quot;: &quot;ascdas&quot;,&#xd;
                        &quot;ghdAns&quot;: &quot;DCac&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;ghdQstn&quot;: &quot;ascdas&quot;,&#xd;
                        &quot;ghdAns&quot;: &quot;DCac&quot;&#xd;
                    }&#xd;
                ]&#xd;
            },&#xd;
            {&#xd;
                &quot;ghdInsuredMember&quot;: &quot;John&quot;,&#xd;
                &quot;isghdFlag&quot;: true,&#xd;
                &quot;ghddiscount&quot;: &quot;20&quot;,&#xd;
                &quot;ghdqstns&quot;: [&#xd;
                    {&#xd;
                        &quot;ghdQstn&quot;: &quot;ascdas&quot;,&#xd;
                        &quot;ghdAns&quot;: &quot;DCac&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;ghdQstn&quot;: &quot;ascdas&quot;,&#xd;
                        &quot;ghdAns&quot;: &quot;DCac&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;buydetails&quot;: {&#xd;
        &quot;paymentType&quot;: &quot;Credit Card&quot;,&#xd;
        &quot;paymentStatus&quot;: true,&#xd;
        &quot;isStp&quot;: false,&#xd;
        &quot;transactionNumber&quot;: &quot;1234567890&quot;,&#xd;
        &quot;policyNumber&quot;: &quot;POL-12345&quot;,&#xd;
        &quot;receiptNumber&quot;: &quot;RCT-98765&quot;&#xd;
    },&#xd;
    &quot;currentstep&quot;: 7,&#xd;
    &quot;finalstep&quot;: 7&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${buydetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/buydetails</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00r_POST_resultkyc" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${resultkyc}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsuranc/kyc/result/ABCD12345678/25</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="VasCredit" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VasCredit_11_00a_POST_GetScore" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: ${customerId},&#xd;
    &quot;name&quot;: &quot;${name}&quot;,&#xd;
    &quot;mobileNumber&quot;: &quot;${mobileNumber}&quot;,&#xd;
    &quot;verifiedWithId&quot;: ${verifiedWithId},&#xd;
    &quot;refresh&quot;: false&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GetScore}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-credit-vas/oneappabc/adityabirla/api/v1/vascredit/score</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VasCredit_11_00b_POST_UserConcent" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: ${customerId},&#xd;
    &quot;name&quot;: &quot;${name}&quot;,&#xd;
    &quot;mobileNumber&quot;: &quot;${mobileNumber}&quot;,&#xd;
    &quot;refresh&quot;: false&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${UserConcent}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-credit-vas/oneappabc/adityabirla/api/v1/vascredit/userconsent</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VasCredit_11_00c_POST_Refresh" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:${customerId},&#xd;
    &quot;name&quot;: &quot;${name}&quot;,&#xd;
    &quot;mobileNumber&quot;: &quot;${mobileNumber}&quot;,&#xd;
    &quot;refresh&quot;:false&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${Refresh}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-credit-vas/oneappabc/adityabirla/api/v1/vascredit/refresh</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VasCredit_11_00d_POST_CreditAccounts" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: ${customerId},&#xd;
    &quot;name&quot;: &quot;${name}&quot;,&#xd;
    &quot;mobileNumber&quot;: &quot;${mobileNumber}&quot;,&#xd;
    &quot;refresh&quot;: false&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${CreditAccounts}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-credit-vas/oneappabc/adityabirla/api/v1/vascredit/creditaccounts</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VasCredit_11_00e_POST_History" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: ${customerId},&#xd;
    &quot;name&quot;: &quot;${name}&quot;,&#xd;
    &quot;mobileNumber&quot;: &quot;${mobileNumber}&quot;,&#xd;
    &quot;refresh&quot;: false,&#xd;
    &quot;accountId&quot;: &quot;${accountId}&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${History}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-credit-vas/oneappabc/adityabirla/api/v1/vascredit/creditaccounts/history</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VasCredit_11_00f_GET_CreditTooltips" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${CreditTooltips}${__Random(300,900,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-credit-vas/oneappabc/adityabirla/api/v1/vascredit/tips?creditScore=330</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VasCredit_11_00g_POST_PDFGeneration" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:${customerId},&#xd;
    &quot;name&quot;: &quot;${name}&quot;,&#xd;
    &quot;verifiedWithId&quot;: ${verifiedWithId},&#xd;
    &quot;mobileNumber&quot;: &quot;${mobileNumber}&quot;,&#xd;
    &quot;refresh&quot;:false&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${PDFGeneration}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-credit-vas/oneappabc/adityabirla/api/v1/vascredit/creditreport</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.refname">customerId</stringProp>
            </RegexExtractor>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VasCredit_11_00h_POST_ReportDetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:${customerId},&#xd;
    &quot;name&quot;: &quot;${name}&quot;,&#xd;
    &quot;mobileNumber&quot;: &quot;${mobileNumber}&quot;,&#xd;
    &quot;refresh&quot;:false&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${ReportDetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-credit-vas/oneappabc/adityabirla/api/v1/vascredit/reportdetails</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VasCredit_11_00i_POST_Simulator" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&#xd;
    &quot;customerId&quot;: ${customerId},&#xd;
    &quot;name&quot;: &quot;${name}&quot;,&#xd;
    &quot;mobileNumber&quot;: &quot;${mobileNumber}&quot;,&#xd;
    &quot;verifiedWithId&quot;: ${verifiedWithId},&#xd;
    &quot;refresh&quot;: false,&#xd;
    &quot;dob&quot;: ${dob},&#xd;
    &quot;gender&quot;: &quot;&quot;,&#xd;
    &quot;inquiryAddresses&quot;: [&#xd;
        {&#xd;
            &quot;seq&quot;: &quot;1&quot;,&#xd;
            &quot;AddressType&quot;: [&#xd;
                &quot;H&quot;,&#xd;
                &quot;P&quot;&#xd;
            ],&#xd;
            &quot;AddressLine1&quot;: ${AddressLine1},&#xd;
            &quot;AddressLine2&quot;: &quot;&quot;,&#xd;
            &quot;Locality&quot;: &quot;&quot;,&#xd;
            &quot;City&quot;: &quot;&quot;,&#xd;
            &quot;State&quot;: ${State},&#xd;
            &quot;Postal&quot;: ${Postal}&#xd;
        }&#xd;
    ],&#xd;
&#xd;
    &quot;customFields&quot;: [&#xd;
        {&#xd;
            &quot;key&quot;: &quot;EventName&quot;,&#xd;
            &quot;value&quot;: ${EventValue}&#xd;
        },&#xd;
        {&#xd;
            &quot;key&quot;: &quot;CurrentBalance&quot;,&#xd;
            &quot;value&quot;: ${CurrentBalanceValue}&#xd;
        },&#xd;
        {&#xd;
            &quot;key&quot;: &quot;OverdueAmount&quot;,&#xd;
            &quot;value&quot;: ${value3OverdueAmountValue}&#xd;
        },&#xd;
        {&#xd;
            &quot;key&quot;: &quot;ProductType&quot;,&#xd;
            &quot;value&quot;: ${ProductValue}&#xd;
        }&#xd;
&#xd;
    ]&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${Simulator}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-credit-vas/oneappabc/adityabirla/api/v1/vascredit/simulator</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VasCredit_11_00j_GET_LoanType" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${LoanType}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-credit-vas/oneappabc/adityabirla/api/v1/vascredit/getloantypelist</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="VasCreditPathURI" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">C:/Endurance/VAS Credit/VasCreditPath.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="TestPlan.comments">PathURI</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
            <collectionProp name="CookieManager.cookies"/>
            <boolProp name="CookieManager.clearEachIteration">true</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
          <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="false">
            <boolProp name="clearEachIteration">true</boolProp>
            <boolProp name="useExpires">true</boolProp>
            <boolProp name="CacheManager.controlledByThread">false</boolProp>
          </CacheManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">CounterValue</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="VasCreditRequest" enabled="true">
            <stringProp name="filename">C:/Endurance/VAS Credit/VasCreditRequest.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <stringProp name="TestPlan.comments">Header</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Mutual Fund" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00a_POST_sip-calculator" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;monthlyInvestAmt&quot;: ${__Random(100000,500000)},&#xd;
  &quot;expectedAnnualReturns&quot;: ${__Random(100000,500000)},&#xd;
  &quot;investedPeriod&quot;: ${__Random(10,30)}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${sip-calculator}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/sip-calculator</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00b_POST_riskprofile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customerId&quot;: ${__Random(4,8,)},&#xd;
  &quot;score&quot;: 10,&#xd;
  &quot;createdBy&quot;: &quot;MANI&quot;,&#xd;
  &quot;modifiedBy&quot;: &quot;Eva&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${RiskProfile}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/riskprofile</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00c_GET_pro-investment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GETProInvestment}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/pro-investment</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00d_POST_pro-investment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customerId&quot;: 1,&#xd;
  &quot;totalInvestment&quot;: ${__Random(1000,2000,)},&#xd;
  &quot;schemeCode1&quot;: &quot;121Y&quot;,&#xd;
  &quot;investmentAmount1&quot;: ${__Random(1000,2000,)},&#xd;
  &quot;schemeCode2&quot;: &quot;121Y&quot;,&#xd;
  &quot;investmentAmount2&quot;: ${__Random(1000,2000,)},&#xd;
  &quot;schemeCode3&quot;: &quot;121Y&quot;,&#xd;
  &quot;investmentAmount3&quot;: ${__Random(1000,2000,)},&#xd;
  &quot;createdBy&quot;: &quot;Eva&quot;,&#xd;
  &quot;modifiedBy&quot;: &quot;Eva&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${POSTProInvestment}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/pro-investment</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00e_POST_lumpsum-calculator" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;lumpsumAmt&quot;: ${__Random(200000,500000,)},&#xd;
  &quot;investmentPeriod&quot;: ${__Random(10,30,)},&#xd;
  &quot;expectedReturn&quot;: ${__Random(5,15,)}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${lumpsum-calculator}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/lumpsum-calculator</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00f_POST_goal-calculator" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;goalAmount&quot;: ${__Random(1000000,3000000,)},&#xd;
  &quot;timeHorizon&quot;: ${__Random(2,30,)},&#xd;
  &quot;expectedRor&quot;: ${__Random(2,30,)}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${goal-calculator}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/goal-calculator</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00g_POST_fund-investment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;fundId&quot;: ${__Random(1,8,)},&#xd;
  &quot;schemeCode&quot;: &quot;string&quot;,&#xd;
  &quot;customerId&quot;: 1,&#xd;
  &quot;investAmount&quot;: ${__Random(1000000,8000000,)},&#xd;
  &quot;investType&quot;: &quot;string&quot;,&#xd;
  &quot;createdDate&quot;: &quot;2023-08-06T13:50:12.058Z&quot;,&#xd;
  &quot;createdBy&quot;: &quot;string&quot;,&#xd;
  &quot;modifiedBy&quot;: &quot;string&quot;,&#xd;
  &quot;modifiedDate&quot;: &quot;2023-08-06T13:50:12.058Z&quot;,&#xd;
  &quot;status&quot;: 0&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${fund-investment}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/fund-investment</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00h_POST_filter-and-sort" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;isDebt&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isEquity&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isHybrid&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isSolutions&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isOthers&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isLowRisk&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isHighRisk&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isModerateRisk&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isModerateLowRisk&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isModerateHighRisk&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isVeryHighRisk&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;returns&quot;: &quot;string&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${filter-and-sort}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/all-funds/filter-and-sort</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">String[] query = new String[]{&quot;true&quot;, &quot;false&quot;,};
    Random random = new Random();
    int i = random.nextInt(query.length);
    vars.put(&quot;randomOption&quot;,query[i]);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00i_GET_scheduler/manual" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${SchedularManual}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/scheduler/manual</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00j_GET_riskprofile?score" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="score" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">score</stringProp>
                  <stringProp name="Argument.value">${RiskProfileScore}</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${riskprofile?scor}${RiskProfileScore}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/funds/riskprofile?score=10</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00k_GET_fund-details?schemeCode" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${FundDetailsschemeCode}${schemeCode}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/fund-details?schemeCode=117y</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET_FundDetails" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/mutualfund/api/v1/fund-details?schemeCode=02Z</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">Duplicate</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00l_GET_all-funds" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${AllFunds}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/all-funds</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00m_GET_all-funds_Category" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${AllFundsCategory_Equity}${ProductCategory}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/all-funds/category?category=Equity</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="TestPlan.comments">C:\Users\harishraj.s\Desktop\JMeter_Script\MutualFund\Reports\MutualFundviewTree.csv</stringProp>
          </ResultCollector>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">C:/Endurance/MutualFund/MutualFundPathURL.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
            <collectionProp name="CookieManager.cookies"/>
            <boolProp name="CookieManager.clearEachIteration">false</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">CounterValue</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">application/json</stringProp>
                <stringProp name="Header.name">Content-Type</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="RiskProfileScore" elementType="Argument">
                <stringProp name="Argument.name">RiskProfileScore</stringProp>
                <stringProp name="Argument.value">23</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="schemeCode" elementType="Argument">
                <stringProp name="Argument.name">schemeCode</stringProp>
                <stringProp name="Argument.value">117y</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ProductCategory" elementType="Argument">
                <stringProp name="Argument.name">ProductCategory</stringProp>
                <stringProp name="Argument.value">Equity</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TrueFalse_1" elementType="Argument">
                <stringProp name="Argument.name">TrueFalse_1</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TrueFalse_2" elementType="Argument">
                <stringProp name="Argument.name">TrueFalse_2</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV MF_20_100_00a_POST_sip-calculato" enabled="false">
            <stringProp name="filename">C:/Users/harishraj.s/Desktop/JMeter_Script/MutualFund/MutualFundParams.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="false">
            <boolProp name="clearEachIteration">false</boolProp>
            <boolProp name="useExpires">true</boolProp>
            <boolProp name="CacheManager.controlledByThread">false</boolProp>
          </CacheManager>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Life Insurance" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">CounterValue</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
            <boolProp name="clearEachIteration">true</boolProp>
            <boolProp name="useExpires">false</boolProp>
            <boolProp name="CacheManager.controlledByThread">false</boolProp>
          </CacheManager>
          <hashTree/>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
            <collectionProp name="CookieManager.cookies"/>
            <boolProp name="CookieManager.clearEachIteration">true</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="LifeInsurance-Child" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_02_00a_GET_GetChildPlan" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-life-insurance-child-plan/oneappabc/adityabirla/api/v1/lifeinsurance/childplan/1</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-life-insurance-child-plan/oneappabc/adityabirla/api/v1/lifeinsurance/childplan/1</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_02_00b_GET_GetInflationRate" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-life-insurance-child-plan/oneappabc/adityabirla/api/v1/inflationrate</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-life-insurance-child-plan/oneappabc/adityabirla/api/v1/inflationrate</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_02_00c_POST_AddInflationRate" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"> {&#xd;
     &quot;inflationRate&quot;:${__Random(6,10,)},&#xd;
    &quot;createdBy&quot;: &quot;Sagar${__Random(1,24,)}&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;Sagar${__Random(1,25,)}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-life-insurance-child-plan/oneappabc/adityabirla/api/v1/inflationrate</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-life-insurance-child-plan/oneappabc/adityabirla/api/v1/inflationrate</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_02_00d_POST_AddChildPlanDetails" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 1,&#xd;
    &quot;childName&quot;: &quot;Monu&quot;,&#xd;
    &quot;childAge&quot;: ${__Random(1,3,)},&#xd;
    &quot;goalType&quot;: &quot;Education&quot;,&#xd;
    &quot;goalAmt&quot;: ${__Random(1500000,2100000,)},&#xd;
    &quot;goalTenure&quot;: ${__Random(18,25,)},&#xd;
    &quot;tenure&quot;: ${__Random(8,15,)},&#xd;
    &quot;roi&quot;: 4,&#xd;
    &quot;createdBy&quot;: &quot;Sagar${__Random(1,24,)}&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;Sagar${__Random(1,24,)}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-life-insurance-child-plan/oneappabc/adityabirla/api/v1/lifeinsurance/childplan</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-life-insurance-child-plan/oneappabc/adityabirla/api/v1/lifeinsurance/childplan</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="liChildId" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">liChildId</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;,&quot;liChildId&quot;:</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number"></stringProp>
                <stringProp name="TestPlan.comments">&quot;,&quot;liChildId&quot;:742,&quot; </stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_02_00e_PATCH_termplan" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;childPlanId&quot;:${liChildId},&#xd;
    &quot;isInterestedInPlan&quot;:true,&#xd;
    &quot;modifiedBy&quot;: &quot;Sagar${__Random(1,24,)}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-life-insurance-child-plan/oneappabc/adityabirla/api/v1/lifeinsurance/childplan</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-life-insurance-child-plan/oneappabc/adityabirla/api/v1/lifeinsurance/childplan</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="LifeInsurance-Quiz" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_03_00a_POST_SaveQuizResult" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:  301,&#xd;
    &quot;score&quot;:  ${__Random(1,10,)},&#xd;
    &quot;createdBy&quot;: &quot;Sagar${__Random(1,25,)}&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;Sagar${__Random(1,33,)}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">/abc-life-insurance-quiz/oneappabc/adityabirla/api/v1/lifeinsurance/quiz/result</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-life-insurance-quiz/oneappabc/adityabirla/api/v1/lifeinsurance/quiz/result</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_03_00b_GET_GetQuizResult" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-life-insurance-quiz/oneappabc/adityabirla/api/v1/lifeinsurance/quiz/result/1</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-life-insurance-quiz/oneappabc/adityabirla/api/v1/lifeinsurance/quiz/result/1</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_03_00c_GET_GetQuiz" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-life-insurance-quiz/oneappabc/adityabirla/api/v1/lifeinsurance/quiz?numberOfQuestion=10</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-life-insurance-quiz/oneappabc/adityabirla/api/v1/lifeinsurance/quiz?numberOfQuestion=10</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="LifeInsurance-TermPlan" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_04_00a_POST_TermPlan" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;customer&quot;: {&#xd;
        &quot;id&quot;: ${__Random(303,308,)}&#xd;
    },&#xd;
    &quot;eduQualId&quot;: {&#xd;
        &quot;id&quot;: ${__Random(1,4)}&#xd;
&#xd;
    },&#xd;
    &quot;occupationId&quot;: {&#xd;
        &quot;id&quot;: ${__Random(6,10)}&#xd;
&#xd;
    },&#xd;
    &quot;age&quot;: ${__Random(30,50)}&#xd;
,&#xd;
    &quot;annualIncome&quot;: ${__Random(1000000,2500000)}&#xd;
,&#xd;
    &quot;liabilities&quot;: 1,&#xd;
    &quot;liabilityAmount&quot;: ${__Random(500000,1000000)}&#xd;
,&#xd;
    &quot;existingCover&quot;: 1,&#xd;
    &quot;existingCoverAmt&quot;: ${__Random(50000,500000)}&#xd;
,&#xd;
    &quot;active&quot;:&quot;Y&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan

http://34.93.88.9:8080/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="custTermInsID" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">custTermInsID</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">custTermInsID&quot;:</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number"></stringProp>
                <stringProp name="TestPlan.comments">{&quot;custTermInsID&quot;:839,&quot;    ,</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="minEligCover" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">minEligCover</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">minEligCover&quot;:</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number"></stringProp>
                <stringProp name="TestPlan.comments"> ,&quot;minEligCover&quot;:1.6099998E7,&quot;</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_04_00b_GET_termplanOccupations" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/occupations</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/occupations</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_04_00c_GET_termplanQualifications" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/qualifications</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/qualifications</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_04_00d_PATCH_termplan" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;selectedCover&quot;:${minEligCover}&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/${termplanid}</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/{termplanid}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="LifeInsurance-Ulip-Retirement-SavingPlan" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <stringProp name="TestPlan.comments">${__Random(37,64,)}</stringProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00a_POST_CreateRetirementPlan" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;savingTenureYrs&quot;: 20,&#xd;
    &quot;savingAmt&quot;: 16000,&#xd;
    &quot;roi&quot;: 4,&#xd;
    &quot;active&quot;: &quot;Y&quot;,&#xd;
    &quot;createdBy&quot;: &quot;Aman&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;Aman&quot;,&#xd;
    &quot;tcustomer&quot;: {&#xd;
        &quot;id&quot;: ${__Random(37,64,)}&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">saveRetirementUlip-plan/oneabc/adityabirla/api/v1/lifeinsurance/plan/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/saveRetirementUlip-plan/oneabc/adityabirla/api/v1/lifeinsurance/plan/3</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="planid" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">planid</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;planid&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number"></stringProp>
                <stringProp name="TestPlan.comments">{&quot;planid&quot;:2640,&quot;</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="customerId" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">customerId</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;,&quot;customerId&quot;:</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number"></stringProp>
                <stringProp name="TestPlan.comments">&quot;,&quot;customerId&quot;:62,&quot;</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00b_POST_CreateUlipPlan" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;savingAmt&quot;: 20000,&#xd;
    &quot;savingTenureYrs&quot;: 20,&#xd;
    &quot;savingMaturityYrs&quot;: 10,&#xd;
    &quot;roi&quot;: 4,&#xd;
    &quot;active&quot;: &quot;Y&quot;,&#xd;
    &quot;createdBy&quot;: &quot;Aman&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;Aman&quot;,&#xd;
    &quot;tcustomer&quot;: {&#xd;
        &quot;id&quot;: ${customerId}&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">saveRetirementUlip-plan/oneabc/adityabirla/api/v1/lifeinsurance/plan/2</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/saveRetirementUlip-plan/oneabc/adityabirla/api/v1/lifeinsurance/plan/2</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00c_POST_CreateSavingPlan" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
    &quot;savingTenureYrs&quot;: 20,&#xd;
    &quot;savingAmt&quot;: 4800000,&#xd;
    &quot;savingMaturityYrs&quot;: 10,&#xd;
    &quot;active&quot;:&quot;Y&quot;,&#xd;
    &quot;createdBy&quot;: &quot;Aman&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;Aman&quot;,&#xd;
    &quot;tcustomer&quot;: {&#xd;
        &quot;id&quot;: ${customerId}&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">saveRetirementUlip-plan/oneabc/adityabirla/api/v1/lifeinsurance/plan/1</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/saveRetirementUlip-plan/oneabc/adityabirla/api/v1/lifeinsurance/plan/1</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00d_GET_FetchPlanType" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">saveRetirementUlip-plan/oneabc/adityabirla/api/v1/lifeinsurance/plantype/${__Random(1,3)}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/saveRetirementUlip-plan/oneabc/adityabirla/api/v1/lifeinsurance/plantype/3</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00e_GET_FetchPlanByCustomerId" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">saveRetirementUlip-plan/oneabc/adityabirla/api/v1/lifeinsurance/plandetails/1</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/saveRetirementUlip-plan/oneabc/adityabirla/api/v1/lifeinsurance/plandetails/${customerId}1</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00f_PATCH_UpdateIsInterestedInPlan" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;planid&quot;${planid},&#xd;
    &quot;isInterestedInPlan&quot;:true,&#xd;
    &quot;modifiedBy&quot;: &quot;Amank&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">saveRetirementUlip-plan/oneabc/adityabirla/api/v1/lifeinsurance/plandetails</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/saveRetirementUlip-plan/oneabc/adityabirla/api/v1/lifeinsurance/plandetails   ${planid}    2661</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="LifeInsurance-CompoundCalculator" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_06_00a_GET_CCYearly" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-compound-calculator/api/v1/compoundcalculator?investmentFrequency=Monthly&amp;amountToInvest=12500&amp;planOnInvesting=5&amp;stayInvested=20&amp;expectedROR=8</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-compound-calculator/api/v1/compoundcalculator?investmentFrequency=Monthly&amp;amountToInvest=12500&amp;planOnInvesting=5&amp;stayInvested=20&amp;expectedROR=8</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_06_00b_GET_CCMonthly" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-compound-calculator/api/v1/compoundcalculator?investmentFrequency=Monthly&amp;amountToInvest=14500&amp;planOnInvesting=5&amp;stayInvested=20&amp;expectedROR=8</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-compound-calculator/api/v1/compoundcalculator?investmentFrequency=Monthly&amp;amountToInvest=12500&amp;planOnInvesting=5&amp;stayInvested=20&amp;expectedROR=8</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_06_00c_GET_CCOneTime" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-compound-calculator/api/v1/compoundcalculator?investmentFrequency=Monthly&amp;amountToInvest=15500&amp;planOnInvesting=5&amp;stayInvested=20&amp;expectedROR=8</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-compound-calculator/api/v1/compoundcalculator?investmentFrequency=Monthly&amp;amountToInvest=12500&amp;planOnInvesting=5&amp;stayInvested=20&amp;expectedROR=8</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="DHA" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">C:\OneApp\DHA\DHAPath.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames"></stringProp>
          </CSVDataSet>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
            <boolProp name="clearEachIteration">true</boolProp>
            <boolProp name="useExpires">false</boolProp>
            <boolProp name="CacheManager.controlledByThread">false</boolProp>
          </CacheManager>
          <hashTree/>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
            <collectionProp name="CookieManager.cookies"/>
            <boolProp name="CookieManager.clearEachIteration">true</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHA_400_10_10a_pushDhaData" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&#xd;
    &quot;customer_id&quot;: &quot;2&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;questionnaire&quot;: [&#xd;
            {&#xd;
                &quot;code&quot;: &quot;1&quot;,&#xd;
                &quot;question&quot;: &quot;Enter your Date of Birth&quot;,&#xd;
                &quot;answer&quot;: &quot;1998-11-25&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;2&quot;,&#xd;
                &quot;question&quot;: &quot;Enter your gender&quot;,&#xd;
                &quot;answer&quot;: &quot;male&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;3&quot;,&#xd;
                &quot;question&quot;: &quot;Enter your height&quot;,&#xd;
                &quot;answer&quot;: &quot;187&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;4&quot;,&#xd;
                &quot;question&quot;: &quot;Enter your weight&quot;,&#xd;
                &quot;answer&quot;: &quot;69&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;5&quot;,&#xd;
                &quot;question&quot;: &quot;Enter your current posture&quot;,&#xd;
                &quot;answer&quot;: &quot;standing&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;6&quot;,&#xd;
                &quot;question&quot;: &quot;Any pre-existing disease?&quot;,&#xd;
                &quot;answer&quot;: &quot;&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;7&quot;,&#xd;
                &quot;question&quot;: &quot;Any known family history of illnesses?&quot;,&#xd;
                &quot;answer&quot;: &quot;&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;face_scan&quot;: {&#xd;
            &quot;statusCode&quot;: 200,&#xd;
            &quot;scan_id&quot;: &quot;df42cf84-a640-4a02-8cdd-fdec074529c8&quot;,&#xd;
            &quot;wellness_score&quot;: 86,&#xd;
            &quot;vitals&quot;: {&#xd;
                &quot;heart_rate&quot;: {&#xd;
                    &quot;code&quot;: &quot;8867-4&quot;,&#xd;
                    &quot;value&quot;: 84&#xd;
                },&#xd;
                &quot;oxy_sat_prcnt&quot;: {&#xd;
                    &quot;code&quot;: &quot;59408-5&quot;,&#xd;
                    &quot;value&quot;: 100&#xd;
                },&#xd;
                &quot;resp_rate&quot;: {&#xd;
                    &quot;code&quot;: &quot;9279-1&quot;,&#xd;
                    &quot;value&quot;: 14&#xd;
                },&#xd;
                &quot;bp_sys&quot;: {&#xd;
                    &quot;code&quot;: &quot;8480-6&quot;,&#xd;
                    &quot;value&quot;: 110&#xd;
                },&#xd;
                &quot;bp_dia&quot;: {&#xd;
                    &quot;code&quot;: &quot;8462-4&quot;,&#xd;
                    &quot;value&quot;: 71&#xd;
                }&#xd;
            },&#xd;
            &quot;metadata&quot;: {&#xd;
                &quot;device&quot;: &quot;rppg_careplix_finger_android&quot;,&#xd;
                &quot;physiological_scores&quot;: {&#xd;
                    &quot;height&quot;: {&#xd;
                        &quot;code&quot;: &quot;8302-2&quot;,&#xd;
                        &quot;value&quot;: &quot;154.5&quot;&#xd;
                    },&#xd;
                    &quot;weight&quot;: {&#xd;
                        &quot;code&quot;: &quot;29463-7&quot;,&#xd;
                        &quot;value&quot;: &quot;70.5&quot;&#xd;
                    },&#xd;
                    &quot;vo2max&quot;: {&#xd;
                        &quot;code&quot;: &quot;94122-9&quot;,&#xd;
                        &quot;value&quot;: &quot;50.3&quot;&#xd;
                    },&#xd;
                    &quot;intensity&quot;: &quot;Hard&quot;,&#xd;
                    &quot;bmi&quot;: {&#xd;
                        &quot;code&quot;: &quot;39156-5&quot;,&#xd;
                        &quot;value&quot;: &quot;29.53&quot;&#xd;
                    },&#xd;
                    &quot;tbw&quot;: {&#xd;
                        &quot;code&quot;: &quot;Dummy-TBW-01&quot;,&#xd;
                        &quot;value&quot;: &quot;31.8&quot;&#xd;
                    },&#xd;
                    &quot;tbwp&quot;: {&#xd;
                        &quot;code&quot;: &quot;Dummy-BWP-01&quot;,&#xd;
                        &quot;value&quot;: &quot;45.11&quot;&#xd;
                    },&#xd;
                    &quot;bodyfat&quot;: {&#xd;
                        &quot;code&quot;: &quot;41982-0&quot;,&#xd;
                        &quot;value&quot;: &quot;39.88&quot;&#xd;
                    },&#xd;
                    &quot;cal_fat&quot;: &quot;54.5&quot;,&#xd;
                    &quot;cal_carb&quot;: &quot;45.5&quot;,&#xd;
                    &quot;bloodvolume&quot;: {&#xd;
                        &quot;code&quot;: &quot;Dummy-BV-01&quot;,&#xd;
                        &quot;value&quot;: &quot;4183.68&quot;&#xd;
                    },&#xd;
                    &quot;gender&quot;: &quot;female&quot;,&#xd;
                    &quot;dob&quot;: &quot;1999-06-08&quot;&#xd;
                },&#xd;
                &quot;fps&quot;: 45,&#xd;
                &quot;heartrate_time&quot;: [&#xd;
                    84,&#xd;
                    72,&#xd;
                    110,&#xd;
                    77,&#xd;
                    87,&#xd;
                    97,&#xd;
                    58&#xd;
                ],&#xd;
                &quot;resp_rate_time&quot;: [&#xd;
                    15,&#xd;
                    12,&#xd;
                    14,&#xd;
                    14,&#xd;
                    15,&#xd;
                    16,&#xd;
                    14&#xd;
                ],&#xd;
                &quot;heart_scores&quot;: {&#xd;
                    &quot;HRMax&quot;: {&#xd;
                        &quot;code&quot;: &quot;Dummy-HRM-01&quot;,&#xd;
                        &quot;value&quot;: 192&#xd;
                    },&#xd;
                    &quot;zone_details&quot;: {&#xd;
                        &quot;zone&quot;: &quot;Rest&quot;,&#xd;
                        &quot;lowZoneRange&quot;: &quot;--&quot;,&#xd;
                        &quot;highZoneRange&quot;: 94&#xd;
                    },&#xd;
                    &quot;HRR&quot;: {&#xd;
                        &quot;code&quot;: &quot;Dummy-HRR-01&quot;,&#xd;
                        &quot;value&quot;: &quot;108&quot;&#xd;
                    },&#xd;
                    &quot;heart_utilized&quot;: {&#xd;
                        &quot;code&quot;: &quot;Dummy-HU-01&quot;,&#xd;
                        &quot;value&quot;: &quot;44&quot;&#xd;
                    },&#xd;
                    &quot;THRR&quot;: {&#xd;
                        &quot;code&quot;: &quot;Dummy-THR-01&quot;,&#xd;
                        &quot;value&quot;: &quot;149 - 192&quot;&#xd;
                    },&#xd;
                    &quot;rmssd&quot;: {&#xd;
                        &quot;code&quot;: &quot;Dummy-RMSSD-01&quot;,&#xd;
                        &quot;value&quot;: 36.03&#xd;
                    },&#xd;
                    &quot;sdnn&quot;: {&#xd;
                        &quot;code&quot;: &quot;Dummy-SDNN-01&quot;,&#xd;
                        &quot;value&quot;: 80.11&#xd;
                    },&#xd;
                    &quot;pNN50_per&quot;: {&#xd;
                        &quot;code&quot;: &quot;Dummy-Pnn50-01&quot;,&#xd;
                        &quot;value&quot;: 37.04&#xd;
                    },&#xd;
                    &quot;stress_index&quot;: {&#xd;
                        &quot;code&quot;: &quot;Dummy-SI-01&quot;,&#xd;
                        &quot;value&quot;: 0.08&#xd;
                    },&#xd;
                    &quot;rr_hist&quot;: [&#xd;
                        0,&#xd;
                        0,&#xd;
                        0,&#xd;
                        0,&#xd;
                        0,&#xd;
                        0,&#xd;
                        0,&#xd;
                        0,&#xd;
                        0,&#xd;
                        0,&#xd;
                        1,&#xd;
                        4,&#xd;
                        2,&#xd;
                        2,&#xd;
                        3,&#xd;
                        1,&#xd;
                        0,&#xd;
                        3,&#xd;
                        0,&#xd;
                        0,&#xd;
                        1,&#xd;
                        2,&#xd;
                        0&#xd;
                    ]&#xd;
                },&#xd;
                &quot;cardiovascular&quot;: {&#xd;
                    &quot;cardiac_out&quot;: {&#xd;
                        &quot;code&quot;: &quot;LP19466-9&quot;,&#xd;
                        &quot;value&quot;: 3.95&#xd;
                    },&#xd;
                    &quot;map&quot;: {&#xd;
                        &quot;code&quot;: &quot;8478-0&quot;,&#xd;
                        &quot;value&quot;: 86.67&#xd;
                    },&#xd;
                    &quot;prq&quot;: 6&#xd;
                }&#xd;
            },&#xd;
            &quot;notes&quot;: {&#xd;
                &quot;report_webhook_config&quot;: {&#xd;
                    &quot;tags&quot;: [&#xd;
                        {&#xd;
                            &quot;name&quot;: &quot;client-code&quot;,&#xd;
                            &quot;value&quot;: &quot;abcd&quot;&#xd;
                        },&#xd;
                        {&#xd;
                            &quot;name&quot;: &quot;customer-id&quot;,&#xd;
                            &quot;value&quot;: &quot;customer1&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            },&#xd;
            &quot;overall_heart_score&quot;: 90,&#xd;
            &quot;entry_time&quot;: &quot;2023-04-04 06:13:58.038755+00:00&quot;,&#xd;
            &quot;scan_condition&quot;: null,&#xd;
            &quot;user_id&quot;: &quot;b82a2def-9e44-4d44-9613-6314c9e7bed4&quot;,&#xd;
            &quot;lat&quot;: null,&#xd;
            &quot;lon&quot;: null,&#xd;
            &quot;posture&quot;: &quot;exercising&quot;,&#xd;
            &quot;tz_offset&quot;: null&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${pushDhaData}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-dha/api/v1/pushDhaData</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">2000</stringProp>
              <stringProp name="RandomTimer.range">100.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHA_400_10_10b_dhaData/2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${dhaData2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-dha/api/v1/dhaData/2</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">2000</stringProp>
              <stringProp name="RandomTimer.range">100.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHA_400_10_10c_pushDhaPdfReport" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__FileToString(pushDhaPdfReport.json,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${pushDhaPdfReport}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-dha/api/v1/pushDhaPdfReport</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">2000</stringProp>
              <stringProp name="RandomTimer.range">100.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHA_400_10_10d_dhaPdfReport/2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${dhaPdfReport2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-dha/api/v1/dhaPdfReport/2</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">2000</stringProp>
              <stringProp name="RandomTimer.range">100.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHA_400_10_10e_dhaDataList/3" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${dhaDataList3}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-dha/api/v1/dhaDataList/3</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">2000</stringProp>
              <stringProp name="RandomTimer.range">100.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="DigiGold" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">D:/Performance Testing - ABC/Jmeter/DigiGold/DigiGold PathURI.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames"></stringProp>
          </CSVDataSet>
          <hashTree/>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
            <collectionProp name="CookieManager.cookies"/>
            <boolProp name="CookieManager.clearEachIteration">true</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">application/json</stringProp>
                <stringProp name="Header.name">Content-Type</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">keep-alive</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">34.100.198.4</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
            <boolProp name="clearEachIteration">true</boolProp>
            <boolProp name="useExpires">true</boolProp>
            <boolProp name="CacheManager.controlledByThread">true</boolProp>
          </CacheManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00a_POST_ParterLogin${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Username</stringProp>
                  <stringProp name="Argument.value">ABCD_GOLD</stringProp>
                </elementProp>
                <elementProp name="Password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Password</stringProp>
                  <stringProp name="Argument.value">ABCD_GOLD</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${partner login}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/login</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.refname">sessionId</stringProp>
              <stringProp name="RegexExtractor.regex">{&quot;authToken&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Session ID not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00b_POST_CreateProfile${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;mobileNumber&quot;: &quot;${__Random(9000000000,9999999999,)}&quot;,&#xd;
    &quot;fullName&quot;: &quot;Performance Tester ${__Random(1,1000,)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${To Create User Profile}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/createProfile</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
              <collectionProp name="CookieManager.cookies">
                <elementProp name="Cookie" elementType="Cookie" testname="Cookie">
                  <stringProp name="Cookie.value">sessionId = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXJ0bmVyX2lkIjoiQUJDRF9HT0xEIiwiaWF0IjoxNjkxNDc4NzY1fQ.LQq4WlP8b5xhCBcwDtFBTm8pLdQBujyv53eeofqZKus</stringProp>
                  <stringProp name="Cookie.domain"></stringProp>
                  <stringProp name="Cookie.path"></stringProp>
                  <boolProp name="Cookie.secure">false</boolProp>
                  <longProp name="Cookie.expires">0</longProp>
                  <boolProp name="Cookie.path_specified">true</boolProp>
                  <boolProp name="Cookie.domain_specified">true</boolProp>
                </elementProp>
              </collectionProp>
              <boolProp name="CookieManager.clearEachIteration">false</boolProp>
              <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
              <stringProp name="CookieManager.policy">default</stringProp>
            </CookieManager>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.refname">customerRefNo</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;customerRefNo&quot;: &quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">customerRefNo not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">customerRefNo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.customerRefNo</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00c_POST_NonExecutableQuote${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;currencyPair&quot;: &quot;XAU/INR&quot;,&#xd;
    &quot;type&quot;: &quot;BUY&quot;,&#xd;
    &quot;calculationType&quot;: &quot;Q&quot;,&#xd;
    &quot;value&quot;: &quot;23.57&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${To generate non executable quote}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/getNonExecutableQuote</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">totalAmount;tax1Amt;tax2Amt;tax3Amt;PreTaxAmount</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.totalAmount;$.tax1Amt;$.tax2Amt;$.tax3Amt;$.calcPreTaxAmount</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00d_POST_GenerateQuoteBuy${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;${customerRefNo}&quot;,&#xd;
    &quot;currencyPair&quot;: &quot;XAU/INR&quot;,&#xd;
    &quot;value&quot;:&quot;5000&quot;,&#xd;
    &quot;type&quot;:&quot;A&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${getQuoteBuy}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/getQuoteBuy</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">transactionRefNo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.transactionRefNo</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">quoteId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.quoteId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">preTaxAmount</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.preTaxAmount</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">tax1Amt</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.tax1Amt</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">tax2Amt</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.tax2Amt</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">tax3Amt</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.tax3Amt</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">totalAmount</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.totalAmount</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00e_POST_GetAddresses${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;${customerRefNo}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${To retrieve addresses}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/getAddresses</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">billingAddressId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">ID not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">2</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00f_POST_ValidateOrderAndExecute${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;${customerRefNo}&quot;&#xd;
    &quot;billingAddressId&quot;: &quot;${billingAddressId}&quot;,&#xd;
    &quot;calculationType&quot;: &quot;Q&quot;,&#xd;
    &quot;preTaxAmount&quot;: &quot;${preTaxAmount}&quot;,&#xd;
    &quot;quantity&quot;: &quot;1.0000&quot;,&#xd;
    &quot;quoteId&quot;: &quot;${quoteId}&quot;,&#xd;
    &quot;tax1Amt&quot;: &quot;${tax1Amt}&quot;,&#xd;
    &quot;tax2Amt&quot;: &quot;${tax2Amt}&quot;,&#xd;
    &quot;tax3Amt&quot;: &quot;${tax3Amt}&quot;, &#xd;
    &quot;transactionOrderID&quot;: &quot;${transactionRefNo}&quot;,&#xd;
    &quot;totalAmount&quot;: &quot;${totalAmount}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${validateOrderAndExecute}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/validateOrderAndExecute</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..id[1:]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.refname">customerRefNo</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;customerRefNo&quot;: &quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">customerRefNo not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00g_POST_ExecuteOrderWithPayIn${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;ABCD_533456489&quot;,&#xd;
    &quot;billingAddressId&quot;: &quot;bzi3fgJJnjJYmTdXWUpq4&quot;,&#xd;
    &quot;payIn&quot;: {&#xd;
        &quot;pgPaymentId&quot;: &quot;pay_LptnixtPzIcSxS&quot;,&#xd;
        &quot;pgOrderId&quot;: &quot;order_LptmxunRtgtn7n&quot;,&#xd;
        &quot;pgSignature&quot;: &quot;f2a53a7b081cf3c1a9818fce9a4e486a46e2e75776a6b0982f06870936c5a71d&quot;,&#xd;
        &quot;pgProvider&quot;: &quot;razorpay&quot;,&#xd;
        &quot;pgAmount&quot;: &quot;6511.02&quot;&#xd;
    },&#xd;
    &quot;calculationType&quot;: &quot;Q&quot;,&#xd;
    &quot;preTaxAmount&quot;: &quot;6159.20&quot;,&#xd;
    &quot;quantity&quot;: &quot;1.0000&quot;,&#xd;
    &quot;quoteId&quot;: &quot;ABDsWeVJooCme882aBMTU7Vpp&quot;,&#xd;
    &quot;tax1Amt&quot;: &quot;92.39&quot;,&#xd;
    &quot;tax2Amt&quot;: &quot;92.39&quot;,&#xd;
    &quot;tax3Amt&quot;: &quot;26.72&quot;,&#xd;
    &quot;transactionOrderID&quot;: &quot;aaaf4ce6-8020-4826-9d32-386f256c91bf&quot;,&#xd;
    &quot;totalAmount&quot;: &quot;6343.97&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${executeOrderWithPayIn}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/executeOrderWithPayIn</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00h_POST_GetPortfolio${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;${customerRefNo}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${getPortfolio}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/getPortfolio</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00i_POST_getOrderHistory${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;ABCD_90000109&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-digigold/api/v1/getOrderHistory</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/getOrderHistory</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">transactionId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..transactionId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00j_POST_getOrderDetails${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;&#xd;
    &quot;type&quot;: &quot;SELL&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${getOrderDetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/getOrderDetails</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00k_POST_getQuoteSell${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;${customerRefNo}&quot;,&#xd;
    &quot;currencyPair&quot;: &quot;XAU/INR&quot;,&#xd;
    &quot;value&quot;: &quot;1000&quot;,&#xd;
    &quot;type&quot;: &quot;A&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${getQuoteSell}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/getQuoteSell</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00l_POST_getIfscDetails${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;ifscCode&quot;: &quot;KARB0000001&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${getIfscDetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/getIfscDetails</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00m_POST_vpaVerification${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;vpaId&quot;: &quot;hithai95@okhdfcbank&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${vpaVerification}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/vpaVerification</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00n_POST_executeOrderWithPayOut${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;calculationType&quot;: &quot;Q&quot;,&#xd;
    &quot;customerRefNo&quot;: &quot;${customerRefNo}&quot;,&#xd;
    &quot;otp&quot;: &quot;&quot;,&#xd;
    &quot;payOut&quot;: {&#xd;
        &quot;customerAccountInfo&quot;: {&#xd;
            &quot;name&quot;: &quot;Prashant KUMAR&quot;,&#xd;
            &quot;accountNumber&quot;: &quot;&quot;,&#xd;
            &quot;ifsc&quot;: &quot;&quot;,&#xd;
            &quot;vpa&quot;: &quot;abhijeet@paytm&quot;&#xd;
        },&#xd;
        &quot;paymentChannel&quot;: &quot;UPI/RTGS/NEFT/IMPS&quot;&#xd;
    },&#xd;
    &quot;preTaxAmount&quot;: &quot;5927.30&quot;,&#xd;
    &quot;quantity&quot;: &quot;1.0000&quot;,&#xd;
    &quot;quoteId&quot;: &quot;ABD7FnhE80EtZfiIfYwVBLcQW&quot;,&#xd;
    &quot;tax1Amt&quot;: &quot;0.00&quot;,&#xd;
    &quot;tax2Amt&quot;: &quot;0.00&quot;,&#xd;
    &quot;tax3Amt&quot;: &quot;0.00&quot;,&#xd;
    &quot;transactionOrderID&quot;: &quot;408b1851-d9a4-4567-a473-a8768dea6b39&quot;,&#xd;
    &quot;totalAmount&quot;: &quot;5927.30&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-digigold/api/v1/executeOrderWithPayOut</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/executeOrderWithPayOut</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00o_POST_generateBuyPdfInvoice${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-digigold/api/v1/generateBuyPdfInvoice</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/generateBuyPdfInvoice</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00p_POST_generateRedeemPdfInvoice${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCEM}</stringProp>
            <stringProp name="HTTPSampler.path">${generateRedeemPdfInvoice}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">https://cem.mmtcpamp.com/pvt/generateRedeemPdfInvoice</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00q_POST_generateSellPdfInvoice${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${generateSellPdfInvoice}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/generateSellPdfInvoice</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00r_POST_createBankAccount${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;${customerRefNo}&quot;,&#xd;
    &quot;accountNumber&quot;: &quot;044321123457&quot;,&#xd;
    &quot;ifscCode&quot;: &quot;SBIN0002636&quot;,&#xd;
    &quot;accountHolderName&quot;: &quot;Peter Parker&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${createBankAccount}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/createBankAccount</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00s_POST_getBankAccounts${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;${customerRefNo}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${getBankAccounts}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/getBankAccounts</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00t_POST_createUpiAccount${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;${customerRefNo}&quot;,&#xd;
    &quot;upiId&quot;: &quot;919841133422@oneabc&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${createUpiAccount}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/createUpiAccount</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00u_POST_getUpiAccounts${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;${customerRefNo}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${getUpiAccounts}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/getUpiAccounts</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
            <collectionProp name="AuthManager.auth_list"/>
            <boolProp name="AuthManager.controlledByThreadGroup">true</boolProp>
          </AuthManager>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="DigiGold Sprint4" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">D:\Performance Testing - ABC\Jmeter\DigiGold\DigiGold PathURI Sprint4.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames"></stringProp>
          </CSVDataSet>
          <hashTree/>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
            <collectionProp name="CookieManager.cookies"/>
            <boolProp name="CookieManager.clearEachIteration">true</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">application/json</stringProp>
                <stringProp name="Header.name">Content-Type</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">keep-alive</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">34.100.198.4</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
            <boolProp name="clearEachIteration">true</boolProp>
            <boolProp name="useExpires">true</boolProp>
            <boolProp name="CacheManager.controlledByThread">true</boolProp>
          </CacheManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint4_00a_POST_DeleteAddress" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;EPKD2c4lUM9ybYsUF3Ukw&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${DeleteAddress}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.234.208/abc-digigold/api/v1/deleteAddress</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
              <collectionProp name="CookieManager.cookies">
                <elementProp name="Cookie" elementType="Cookie" testname="Cookie">
                  <stringProp name="Cookie.value">sessionId = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXJ0bmVyX2lkIjoiQUJDRF9HT0xEIiwiaWF0IjoxNjkxNDc4NzY1fQ.LQq4WlP8b5xhCBcwDtFBTm8pLdQBujyv53eeofqZKus</stringProp>
                  <stringProp name="Cookie.domain"></stringProp>
                  <stringProp name="Cookie.path"></stringProp>
                  <boolProp name="Cookie.secure">false</boolProp>
                  <longProp name="Cookie.expires">0</longProp>
                  <boolProp name="Cookie.path_specified">true</boolProp>
                  <boolProp name="Cookie.domain_specified">true</boolProp>
                </elementProp>
              </collectionProp>
              <boolProp name="CookieManager.clearEachIteration">false</boolProp>
              <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
              <stringProp name="CookieManager.policy">default</stringProp>
            </CookieManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint4_00b_GET_Pincode" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pinCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pinCode</stringProp>
                  <stringProp name="Argument.value">590011</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${Pincode}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.234.208/abc-digigold/api/v1/pinCode?pinCode=590011</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint4_00c_POST_getAddresses" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;ABCD_1579467727&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${postAddresses}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.234.208/abc-digigold/api/v1/getAddresses</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint4_00d_POST_AddUpdateAdd" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;&quot;,&#xd;
    &quot;name&quot;: &quot;Murali Gopal&quot;,&#xd;
    &quot;line1&quot;: &quot;delivery laxmi nagar West Delhi&quot;,&#xd;
    &quot;line2&quot;: &quot;West Delhi&quot;,&#xd;
    &quot;city&quot;: &quot;West Delhi&quot;,&#xd;
    &quot;state&quot;: &quot;DELHI&quot;,&#xd;
    &quot;zip&quot;: 110041,&#xd;
    &quot;country&quot;: &quot;India&quot;,&#xd;
    &quot;mobileNumber&quot;: &quot;9094655715&quot;,&#xd;
    &quot;statecode&quot;: &quot;07&quot;,&#xd;
    &quot;type&quot;: &quot;D&quot;,&#xd;
    &quot;customerRefNo&quot;: &quot;ABCD_1579467727&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${AddUpdateAdd}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.234.208/abc-digigold/api/v1/addUpdateAddress</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint4_00e_POST_executeRedeemOrder" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;quoteId&quot;: &quot;MPLJ2KG9K7DJ4X2&quot;,&#xd;
  &quot;transactionDate&quot;: &quot;2023-05-04T09:37:15.776Z&quot;,&#xd;
  &quot;transactionOrderID&quot;: &quot;ZAkzcva5PJCrDZA&quot;,&#xd;
  &quot;orderId&quot;: &quot;MPLS2QJNMX4J8CO&quot;,&#xd;
  &quot;payIn&quot;: {&#xd;
    &quot;pgPaymentId&quot;: &quot;pay_LlXT8aCQDvrsAz&quot;,&#xd;
    &quot;pgOrderId&quot;: &quot;order_LlXSXG5sxrlnWO&quot;,&#xd;
    &quot;pgSignature&quot;: &quot;08bc06872c7390099c7765545e9130cf7b5f0cc6d773858cc49d1dc0e82b5955&quot;,&#xd;
    &quot;pgProvider&quot;: &quot;Razorpay&quot;,&#xd;
    &quot;pgAmount&quot;: 670.9952&#xd;
  }&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${executeRedeemOrder}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.234.208/abc-digigold/api/v1/executeRedeemOrder</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint4_00f_POST_generateRedeemPdfInvoice" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;transactionId&quot;: &quot;STFWD4O9V581DR9&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${generateRedeemPdfInvoice}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.234.208/abc-digigold/api/v1/generateRedeemPdfInvoice</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint4_00g_POST_getRedemptionCatalog" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;${customerRefNo}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${getRedemptionCatalog}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.234.208/abc-digigold/api/v1/getRedemptionCatalog</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint4_00h_POST_getDeliveryStatus" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;orderId&quot;:&quot;MPL14LRSB7QUR4H&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${getDeliveryStatus}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.234.208/abc-digigold/api/v1/getDeliveryStatus</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">transactionId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..transactionId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint4_00i_POST_getRedeemHistory" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;ABCD_1579467727&quot;,&#xd;
    &quot;endDate&quot;: &quot;2023-10-25T12:57:51.521Z&quot;,&#xd;
    &quot;startDate&quot;: &quot;2022-09-13T11:20:00.084Z&quot;&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${getRedeemHistory}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.234.208/abc-digigold/api/v1/getRedeemHistory</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint4_00j_POST_validateAndCreateRedeemOrder" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;ABCD_1579467727&quot;,&#xd;
    &quot;transactionRefNo&quot;: &quot;ABCD_15794677271697173711791&quot;,&#xd;
    &quot;productList&quot;: [&#xd;
        {&#xd;
            &quot;productId&quot;: &quot;248405&quot;,&#xd;
            &quot;quantity&quot;: &quot;1&quot;,&#xd;
            &quot;makingCharge&quot;: &quot;1399.86&quot;,&#xd;
            &quot;skuId&quot;: &quot;AUYyCOG10.01014&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;billingAddressId&quot;: &quot;afBktWwiBUdcbbqUAsKX1&quot;,&#xd;
    &quot;shippingAddressId&quot;: &quot;afBktWwiBUdcbbqUAsKX1&quot;,&#xd;
    &quot;totalAmount&quot;: &quot;1399.86&quot;,&#xd;
    &quot;preTaxAmount&quot;: &quot;1186.32&quot;,&#xd;
    &quot;taxAmount&quot;: &quot;213.54&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${validateAndCreateRedeemOrder}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.234.208/abc-digigold/api/v1/validateAndCreateRedeemOrder</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint4_00k_POST_getRedeemOrderDetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;transactionId&quot;: &quot;STF1rFrQeKhG-vT&quot;,&#xd;
    &quot;type&quot;: &quot;SELL&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${getRedeemOrderDetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.234.208/abc-digigold/api/v1/getRedeemOrderDetails</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint4_00l_GET_getAddresses}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${getAddresses}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint4_00m_POST_getPortfolio" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;calculationType&quot;: &quot;Q&quot;,&#xd;
    &quot;customerRefNo&quot;: &quot;${customerRefNo}&quot;,&#xd;
    &quot;otp&quot;: &quot;&quot;,&#xd;
    &quot;payOut&quot;: {&#xd;
        &quot;customerAccountInfo&quot;: {&#xd;
            &quot;name&quot;: &quot;Prashant KUMAR&quot;,&#xd;
            &quot;accountNumber&quot;: &quot;&quot;,&#xd;
            &quot;ifsc&quot;: &quot;&quot;,&#xd;
            &quot;vpa&quot;: &quot;abhijeet@paytm&quot;&#xd;
        },&#xd;
        &quot;paymentChannel&quot;: &quot;UPI/RTGS/NEFT/IMPS&quot;&#xd;
    },&#xd;
    &quot;preTaxAmount&quot;: &quot;5927.30&quot;,&#xd;
    &quot;quantity&quot;: &quot;1.0000&quot;,&#xd;
    &quot;quoteId&quot;: &quot;ABD7FnhE80EtZfiIfYwVBLcQW&quot;,&#xd;
    &quot;tax1Amt&quot;: &quot;0.00&quot;,&#xd;
    &quot;tax2Amt&quot;: &quot;0.00&quot;,&#xd;
    &quot;tax3Amt&quot;: &quot;0.00&quot;,&#xd;
    &quot;transactionOrderID&quot;: &quot;408b1851-d9a4-4567-a473-a8768dea6b39&quot;,&#xd;
    &quot;totalAmount&quot;: &quot;5927.30&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${getPortfolio}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.234.208/abc-digigold/api/v1/getPortfolio</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
            <collectionProp name="AuthManager.auth_list"/>
            <boolProp name="AuthManager.controlledByThreadGroup">true</boolProp>
          </AuthManager>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Mutual Fund Sprint 3" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_01_POST_fetchinvestorstatus" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;50&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/fetchinvestorstatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/fetchinvestorstatus</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_02_POST_kyc-check" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: &quot;16531&quot;,&#xd;
    &quot;journeyId&quot;: &quot;MF&quot;,&#xd;
    &quot;profileId&quot;: &quot;8U6yT5&quot;,&#xd;
    &quot;pan&quot;: &quot;DAFPJ3781J&quot;,&#xd;
    &quot;date_of_birth&quot;: &quot;6.09.1998&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/kyc-check</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/kyc-check</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_03_POST_investor-profile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customerId&quot; : 7654,&#xd;
  &quot;journeyId&quot; : &quot;ABCMF&quot;,&#xd;
  &quot;type&quot;: &quot;individual&quot;,&#xd;
  &quot;tax_status&quot;: &quot;resident_individual&quot;,&#xd;
  &quot;name&quot;: &quot;Siv&quot;,&#xd;
  &quot;date_of_birth&quot;: &quot;1998-09-06&quot;,&#xd;
  &quot;gender&quot;: &quot;male&quot;,&#xd;
  &quot;occupation&quot;: &quot;business&quot;,&#xd;
  &quot;pan&quot;: &quot;DAFPJ3781J&quot;,&#xd;
  &quot;country_of_birth&quot;: &quot;IN&quot;,&#xd;
  &quot;place_of_birth&quot;: &quot;IN&quot;,&#xd;
  &quot;use_default_tax_residences&quot;: &quot;false&quot;,&#xd;
  &quot;first_tax_residency&quot;: {&#xd;
    &quot;country&quot;: &quot;IN&quot;,&#xd;
    &quot;taxid_type&quot;: &quot;pan&quot;,&#xd;
    &quot;taxid_number&quot;: &quot;DWEPS2837G&quot;&#xd;
  },&#xd;
  &quot;source_of_wealth&quot;: &quot;salary&quot;,&#xd;
  &quot;income_slab&quot;: &quot;upto_1lakh&quot;,&#xd;
  &quot;pep_details&quot;: &quot;not_applicable&quot;,&#xd;
  &quot;ip_address&quot;: &quot;192.92.12.39&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/investor-profile</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/investor-profile</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_04_POST_update-investor-profile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;customerId&quot;:16531,//Mandatory&#xd;
   &quot;journeyID&quot; : &quot;MF&quot;,//Mandatory&#xd;
   &quot;id&quot;: &quot;invp_779e3387d8184e2791e0135d66ca0a0a&quot;,//Mandatory&#xd;
   &quot;income_slab&quot;: &quot;above_1lakh_upto_5lakh&quot;//Optional - Request structure same as Create Investor Profile&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/update-investor-profile</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/update-investor-profile</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_05_POST_fetchinvestorprofile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;customerId&quot;:&quot;16531&quot;,&#xd;
&quot;journeyId&quot;:&quot;2324&quot;,&#xd;
&quot;id&quot;:&quot;invp_779e3387d8184e2791e0135d66ca0a0a&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/fetchinvestorprofiles/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/fetchinvestorprofiles/</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_06_POST_kyc-create" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: &quot;16531&quot;,&#xd;
    &quot;journeyId&quot;: &quot;MF&quot;,&#xd;
    &quot;profileId&quot;: &quot;invp_779e3387d8184e2791e0135d66ca0a0a&quot;,&#xd;
    &quot;panNumber&quot;: &quot;DAFPJ3781J&quot;,&#xd;
    &quot;dateOfBirth&quot;: &quot;1998-09-06&quot;,&#xd;
    &quot;mobileNumber&quot;: &quot;8903989019&quot;,&#xd;
    &quot;name&quot;: &quot;Siv&quot;,&#xd;
    &quot;email&quot;: &quot;siv111@gamil.com&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/kyc-create</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/kyc-create</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_07_POST_file-upload" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/file-upload</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/file-upload</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_08_POST_personalDetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
 &quot;customer_id&quot;:&quot;16531&quot;,&#xd;
 &quot;journeyId&quot;:&quot;mf&quot;,&#xd;
 &quot;pan&quot;:&quot;DAFPJ3781J&quot;,&#xd;
 &quot;dob&quot;:&quot;1998-09-06&quot;,&#xd;
 &quot;emailid&quot;:&quot;siv111@gamil.com&quot;,&#xd;
 &quot;belongsto&quot;:&quot;&quot;,&#xd;
 &quot;fullname&quot;:&quot;Siv&quot;,&#xd;
 &quot;gender&quot;:&quot;male&quot;,&#xd;
 &quot;countryofbirth&quot;:&quot;In&quot;,&#xd;
&quot;partner_profile_id&quot;:&quot;invp_779e3387d8184e2791e0135d66ca0a0a&quot;,&#xd;
&quot;residentialstatus&quot;:&quot;resident individual&quot;,&#xd;
&quot;maritalStatus&quot;:&quot;maried&quot;,&#xd;
&quot;fatherName&quot;:&quot;somasundharam&quot;,&#xd;
&quot;motherName&quot;:&quot;annalakshmi&quot;,&#xd;
&quot;spouseName&quot;:&quot;&quot;&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/personalDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/personalDetails</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_09_POST_professionalDetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: &quot;16531&quot;,&#xd;
    &quot;sourceOfFunds&quot;: &quot;1200000&quot;,&#xd;
    &quot;occupationtType&quot;: &quot;salaried&quot;,&#xd;
    &quot;annualIncome&quot;: &quot;1200000&quot;,&#xd;
    &quot;partnerProfessionalId&quot;: &quot;1&quot;,&#xd;
    &quot;partnerProfileId&quot;: &quot;invp_779e3387d8184e2791e0135d66ca0a0a&quot;,&#xd;
    &quot;experience&quot;: &quot;10&quot;,&#xd;
    &quot;employerId&quot;: &quot;10&quot;,&#xd;
    &quot;occupation&quot;:&quot;far&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/professionalDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/professionalDetails</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_10_POST_nomineeDetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;nomineeName&quot;: &quot;thanuj&quot;,&#xd;
    &quot;nomineeRelationship&quot;: &quot;son&quot;,&#xd;
    &quot;nomineePercentAllocation&quot;: &quot;55&quot;,&#xd;
    &quot;nomineeDob&quot;: &quot;2023-11-24&quot;,&#xd;
    &quot;nomineePan&quot;: &quot;&quot;,&#xd;
    &quot;partnerProfileId&quot;: &quot;invp_e290059f438448ec8cf3f880c1f84989&quot;,&#xd;
    &quot;partnerNomineeId&quot;: &quot;1&quot;,&#xd;
    &quot;guardianDob&quot;: &quot;1965-03-11&quot;,&#xd;
    &quot;guardianPan&quot;: &quot;ATPY56PU76&quot;,&#xd;
    &quot;guardianMobile&quot;: &quot;9876598734&quot;,&#xd;
    &quot;guardianRelation&quot;: &quot;grandfather&quot;,&#xd;
    &quot;guardianName&quot;: &quot;Ashok&quot;,&#xd;
    &quot;customerId&quot;: &quot;16531&quot;,&#xd;
    &quot;createdBy&quot;:&quot;Siv&quot;,&#xd;
    &quot;totalnomineePercentAllocation&quot;:55&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/nomineeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/nomineeDetails</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">String[] query = new String[]{&quot;true&quot;, &quot;false&quot;,};
    Random random = new Random();
    int i = random.nextInt(query.length);
    vars.put(&quot;randomOption&quot;,query[i]);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_11_POST_findnominee" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: &quot;0&quot;,&#xd;
    &quot;investorNomineeId&quot;: &quot;2&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/findnominee</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://localhost:8088/abc-securities/api/v1/mf/findnominee</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_12_GET_findnomineelist" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: &quot;0&quot;,&#xd;
    &quot;investorNomineeId&quot;: &quot;2&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/findnomineelist</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/findnomineelist</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_13_POST_deletenominee" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;investorNomineeId&quot;:&quot;3&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/deletenominee?investorNomineeId=135</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/deletenominee?investorNomineeId=135</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_14_POST_createphonenumber" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: &quot;16531&quot;,&#xd;
    &quot;profileId&quot;: &quot;invp_779e3387d8184e2791e0135d66ca0a0a&quot;,&#xd;
    &quot;isd&quot;: &quot;91&quot;,&#xd;
    &quot;mobileNumber&quot;: &quot;8571068898&quot;,&#xd;
    &quot;belongs_to&quot;: &quot;self&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/phonenumbers</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/phonenumbers</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_15_POST_emailaddress" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;16531&quot;,&#xd;
    &quot;journeyId&quot;:&quot;8iu76t&quot;,&#xd;
  &quot;profileId&quot;: &quot;invp_779e3387d8184e2791e0135d66ca0a0a&quot;,&#xd;
  &quot;email&quot;: &quot;siv111@gmail.com&quot;,&#xd;
  &quot;belongs_to&quot;:&quot;self&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/emailaddress</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/emailaddress</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_16_POST_address" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;profileId&quot;: &quot;invp_779e3387d8184e2791e0135d66ca0a0a&quot;,&#xd;
    &quot;customerId&quot;: &quot;16531&quot;,&#xd;
    &quot;journeyId&quot;: &quot;MF&quot;,&#xd;
    &quot;addressLine1&quot;: &quot;34, 2nd main, 1st crosss&quot;,&#xd;
    &quot;addressLine2&quot;: &quot;JP Nagar 2nd phase&quot;,&#xd;
    &quot;addressLine3&quot;: &quot;&quot;,&#xd;
    &quot;city&quot;: &quot;&quot;,&#xd;
    &quot;state&quot;: &quot;&quot;,&#xd;
    &quot;country&quot;: &quot;IN&quot;,&#xd;
    &quot;pincode&quot;: &quot;560071&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/address</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/address</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_17_POST_bank-account" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;profileId&quot;:&quot;invp_779e3387d8184e2791e0135d66ca0a0a&quot;, &#xd;
&quot;customerId&quot;:&quot;16531&quot;,&#xd;
&quot;journeyId&quot;:&quot;MF&quot;,&#xd;
&quot;accountType&quot;:&quot;savings&quot;,&#xd;
&quot;accountNumber&quot;:&quot;98123459208&quot;, &#xd;
&quot;bankName&quot;:&quot;SBI&quot;, &#xd;
&quot;branchName&quot;:&quot;TUTY&quot;, &#xd;
&quot;primaryAccountHolderName&quot;:&quot;Siv&quot;,	&#xd;
&quot;ifscCode&quot;:&quot;HDFC0001339&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/bank-account</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/bank-account</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_18_POST_bankaccount-verification" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;profileId&quot;: &quot;invp_779e3387d8184e2791e0135d66ca0a0a&quot;,&#xd;
    &quot;customerId&quot;: &quot;16531&quot;,&#xd;
    &quot;journeyId&quot;: &quot;MF&quot;,&#xd;
    &quot;accountNumber&quot;: &quot;98123459208&quot;,&#xd;
    &quot;ifscCode&quot;: &quot;HDFC0001339&quot;&#xd;
    &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/bankaccount-verification</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/bankaccount-verification</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_19_POST_fetchbankVerification" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;profileId&quot;: &quot;invp_779e3387d8184e2791e0135d66ca0a0a&quot;,&#xd;
    &quot;customerId&quot;: &quot;16531&quot;,&#xd;
    &quot;journeyId&quot;: &quot;MF&quot;,&#xd;
    &quot;accountNumber&quot;: &quot;98123459208&quot;,&#xd;
    &quot;ifscCode&quot;: &quot;HDFC0001339&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/fetch-bankaccount-verification</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/fetch-bankaccount-verification</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_POST_fetch bankaccount" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: &quot;68&quot;,&#xd;
    &quot;journeyId&quot;: &quot;MF&quot;&#xd;
   }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/fetchbankaccounts/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/fetchbankaccounts/</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_21_POST_kyc-update" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: &quot;99&quot;,&#xd;
    &quot;journeyId&quot;: &quot;MF&quot;,&#xd;
    &quot;profileId&quot;: &quot;invp_e1acc88936134e28a70105256704e5f0&quot;,&#xd;
    &quot;panNumber&quot;: &quot;BNBPP3754M&quot;,&#xd;
    &quot;dateOfBirth&quot;: &quot;1989-08-14&quot;,&#xd;
    &quot;mobileNumber&quot;: &quot;8000989019&quot;,&#xd;
    &quot;name&quot;: &quot;Ruthran&quot;,&#xd;
    &quot;email&quot;: &quot;ruth111@gamil.com&quot;,&#xd;
    &quot;latitude&quot;: 50.00,&#xd;
    &quot;longitude&quot;: 50.00&#xd;
   &#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/kyc-update</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/kyc-update</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_22_GET_kyc status" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${kyc status}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_23_POST_esign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customerId&quot; : 1,&#xd;
  &quot;journeyId&quot;: &quot;dsfsdfas&quot;,&#xd;
  &quot;kyc_request&quot;: &quot;kycr_1bd482f8ed134547b3ca195f6e1c9bd2&quot;,&#xd;
  &quot;postback_url&quot;: &quot;http://localhost:3000&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/esign</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/esign</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_24_GET_fetch-esign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customerId&quot; : 1,&#xd;
  &quot;journeyId&quot;: &quot;dsfsdfas&quot;,&#xd;
  &quot;esignId&quot;: &quot;esign_a243fbffcb344b3fa28c3c68c17c4915&quot;&#xd;
  }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/fetch-esign</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/fetch-esign</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_25_POST_investment-account" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customerId&quot; : 16541,&#xd;
  &quot;primary_investor&quot;: &quot;invp_b3ef4708c4014ba6b8353409f3423b74&quot;,&#xd;
  &quot;holding_pattern&quot;: &quot;Tony Soprano&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/investment-account</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/investment-account</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_26_POST_updatemfinvestmentaccounts" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 10432&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/updatemfinvestmentaccounts</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://localhost:8080/abc-securities/api/v1/mf/updatemfinvestmentaccounts</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_27_POST_fetchIdentitydocuments" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:16531,&#xd;
    &quot;journeyId&quot;:&quot;EWREWE&quot;,&#xd;
    &quot;identityDocId&quot;:&quot;iddoc_40055024a04f48c6a3b78c3cb5b45a74&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/fetchIdentitydocuments</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://localhost:8080/abc-securities/api/v1/mf/fetchIdentitydocuments</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_28_POST_identitydocuments" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot; : 16531,&#xd;
    &quot;journeyId&quot;:&quot;MF&quot;,&#xd;
    &quot;kyc_request&quot;: &quot;kycr_99485866928945c4a5cb3e458e9161b6&quot;,&#xd;
    &quot;type&quot;: &quot;aadhaar&quot;,&#xd;
    &quot;postback_url&quot;: &quot;https://fintechprimitives.com&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/identitydocuments</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/identitydocuments</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_29_POST_getPincode" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;16531&quot;,&#xd;
    &quot;journeyId&quot;:&quot;8iu76t&quot;,&#xd;
    &quot;pincode&quot;:&quot;621111&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/pincode</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/pincode</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_30_GET_getAmcs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;67543&quot;,&#xd;
    &quot;journeyId&quot;:&quot;8iu76t&quot;&#xd;
   &#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/amcs</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/amcs</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_31_POST_getfundschemes" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: &quot;1234&quot;,&#xd;
    &quot;journeyId&quot;: &quot;MF12344222&quot;,&#xd;
    &quot;isin&quot;:&quot;INF846K01412&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/fund-schemes</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/fund-schemes</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_32_GET_MasterData countries" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/countries</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/countries</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_33_POST_getBankDetailswithifsc" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&#xd;
    &quot;customerId&quot;:&quot;16531&quot;,&#xd;
    &quot;profileId&quot;:&quot;hhg2&quot;,&#xd;
    &quot;ifscCode&quot;:&quot;HDFC0001339&quot;&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/bank-details</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/bank-details</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_34_GET_MasterData states" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: &quot;1234&quot;,&#xd;
    &quot;journeyId&quot;: &quot;MF12344222&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/states</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/states</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_35_POST_Fetchaddresses" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;16531&quot;,&#xd;
	&quot;journeyId&quot;:&quot;mf&quot;,&#xd;
	&quot;id&quot;:&quot;addr_cae9554062984e868cd1ba2bb34bc8bb&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/fetchaddresses/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/fetchaddresses/</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_36_GET_listbankaccounts" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/listbankaccounts/invp_35db9edff12943818c9c433f35a553ff</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/listbankaccounts/invp_35db9edff12943818c9c433f35a553ff</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_37_POST_mfpurchases" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;customer_id&quot;: &quot;1&quot;,&#xd;
        &quot;journey_id&quot;: &quot;&quot;,&#xd;
        &quot;mf_investment_account&quot;: &quot;mfia_0d54f39215bf440e83156f8686b7ee96&quot;,&#xd;
        &quot;folio_number&quot;: &quot;&quot;,&#xd;
        &quot;amount&quot;: 1000,&#xd;
        &quot;scheme&quot;: &quot;INF846K01412&quot;,&#xd;
        &quot;user_ip&quot;: &quot;10.0.128.12&quot;,&#xd;
        &quot;server_ip&quot;: &quot;126.1.10.1&quot;,&#xd;
        &quot;source_ref_id&quot;: &quot;70319fdc-b2da-46ca-90a3-c3d9b99bfc21&quot;,&#xd;
        &quot;euin&quot;: null,&#xd;
        &quot;scheduled_on&quot;: &quot;&quot;,&#xd;
        &quot;order_gateway&quot;: &quot;&quot;,&#xd;
        &quot;partner&quot;: &quot;&quot;&#xd;
    }&#xd;
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/mfpurchases</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/mfpurchases</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_38_POST_Update MF purchase" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:16531,&#xd;
    &quot;journeyId&quot;:&quot;EWREWE&quot;,&#xd;
    &quot;identityDocId&quot;:&quot;iddoc_40055024a04f48c6a3b78c3cb5b45a74&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/mfpurchases/update</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/mfpurchases/update</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_39_POST_mfpurchasepayments" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;customerId&quot;:16531,&#xd;
   &quot;journeyID&quot; : &quot;MF&quot;,&#xd;
   &quot;id&quot;: &quot;invp_779e3387d8184e2791e0135d66ca0a0a&quot;,&#xd;
   &quot;income_slab&quot;: &quot;above_1lakh_upto_5lakh&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/mfpurchasepayments</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100,198.4/abc-securities/api/v1/mf/mfpurchasepayments</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_40_GET_Get all MF purchase" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/listallmfpurchases?mfInvestmentAccount=mfia_ace809c6cc3d43dd8d6ea5e6cc473f6b&amp;customerId=1</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/listallmfpurchases?mfInvestmentAccount=mfia_ace809c6cc3d43dd8d6ea5e6cc473f6b&amp;customerId=1</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_41_GET_Fetch MF purchase" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/getmfpurchase?customerId=1&amp;mfPurchaseId=mfp_6ecd63783ef44b12a4f01d28ce41e694</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/getmfpurchase?customerId=1&amp;mfPurchaseId=mfp_6ecd63783ef44b12a4f01d28ce41e694</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_42_POST_mfpurchaseplans" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;customerId&quot;: 1,&#xd;
        &quot;mf_investment_account&quot;: &quot;mfia_d1b83638028b4c88992a6a4308035a97&quot;,&#xd;
        &quot;scheme&quot;: &quot;INF179KA1I87&quot;,&#xd;
        &quot;folio_number&quot;: null,&#xd;
        &quot;amount&quot;: 10000,&#xd;
        &quot;user_ip&quot;: &quot;10.0.128.12&quot;,&#xd;
        &quot;server_ip&quot;: &quot;126.1.10.1&quot;,&#xd;
        &quot;source_ref_id&quot;: &quot;71312fdc-b2da-46ca-90a3-c3d9b99bfca21&quot;,&#xd;
        &quot;systematic&quot;: true,&#xd;
        &quot;frequency&quot;: &quot;monthly&quot;,&#xd;
        &quot;installment_day&quot;: 1,&#xd;
        &quot;number_of_installments&quot;: 38,&#xd;
        &quot;euin&quot;: null&#xd;
    }&#xd;
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/mfpurchaseplans</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/mfpurchaseplans</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_43_POST_create Mandate" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;partnerPurchasePlanId&quot;: [&#xd;
        &quot;mfpp_d82d8e89b09441fa8c5808e65c6e8bc4&quot;&#xd;
    &#xd;
    ],&#xd;
    &quot;customerId&quot;: &quot;55315&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/mandate</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/mandate</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_44_POST_authorizemandate" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: &quot;16531&quot;,&#xd;
    &quot;mandateId&quot;: 65,&#xd;
    &quot;paymentPostbackUrl&quot;: &quot;https://example.com/&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/authorizemandate</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/authorizemandate</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_45_POST_Update MF purchase plans" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;id&quot;: &quot;mfpp_9fe04232f39543d38b179daaab015297&quot;,&#xd;
        &quot;amount&quot;: 175000&#xd;
    }&#xd;
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/mfpurchaseplans/update</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/mfpurchaseplans/update</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_46_GET_Cancel MF purchase plans" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/cancelmfpurchaseplans?mfPurchasePlanId=mfpp_84bd5dbea1d847a1ab61a9928f5da03a</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/cancelmfpurchaseplans?mfPurchasePlanId=mfpp_84bd5dbea1d847a1ab61a9928f5da03a</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_47_POST_List All MF Purchase Plans" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;1&quot;,&#xd;
    &quot;mfInvestmentAccount&quot;:&quot;mfia_d1b83638028b4c88992a6a4308035a97&quot;,&#xd;
    &quot;states&quot;:&quot;created&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mfpurchaselist</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://localhost:8080/abc-securities/api/v1/mfpurchaselist</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_48_POST_Fetch MF Purchase Plans" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: &quot;55315&quot;,&#xd;
    &quot;id&quot;: &quot;mfpp_d82d8e89b09441fa8c5808e65c6e8bc4&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/fetchmfpurchaseplans/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/fetchmfpurchaseplans/</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_49_GET_Get OTP" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;18543&quot;,&#xd;
    &quot;id&quot;:&quot;mfr_c4e2095d41c24357b32ae2f57df312c0&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-login/adityabirla/api/v1/login/otp?email=pratiksha.patil@gslab.com</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-login/adityabirla/api/v1/login/otp?email=pratiksha.patil@gslab.com</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_50_POST_Verify OTP" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;otp&quot;: &quot;123456&quot;,&#xd;
    &quot;email&quot;: &quot;pratiksha.patil@gslab.com&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-login/adityabirla/api/v1/login/otp/verification</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-login/adityabirla/api/v1/login/otp/verification</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_51_POST_Create MF Redemptions" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: &quot;18534&quot;,&#xd;
    &quot;mfInvestmentAccount&quot;: &quot;mfia_ace809c6cc3d43dd8d6ea5e6cc473f6b&quot;,&#xd;
    &quot;folioNumber&quot;: &quot;PG8ESTC85JZFO&quot;,&#xd;
    &quot;amount&quot;: 1000,&#xd;
    &quot;scheme&quot;: &quot;INF846K01412&quot;,&#xd;
    &quot;units&quot;: null,&#xd;
    &quot;userIp&quot;: &quot;10.0.128.12&quot;,&#xd;
    &quot;serverIp&quot;: &quot;126.1.10.1&quot;,&#xd;
    &quot;sourceRefId&quot;: &quot;71105fdh-b2ga-45ga-98a3-c3d9b99bfca0&quot;,&#xd;
    &quot;euin&quot;: &quot;E298290&quot;,&#xd;
    &quot;createdBy&quot;: &quot;abcd&quot;,&#xd;
    &quot;redeemAll&quot;: &quot;y&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/mfredemptions</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://localhost:8085/abc-securities/api/v1/mf/mfredemptions</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_52_POST_Update MF Redemptions" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: &quot;1&quot;,&#xd;
    &quot;id&quot;: &quot;mfr_7594fd5e40a2482b8f607675797afb55&quot;,&#xd;
    &quot;state&quot;: &quot;confirmed&quot;,&#xd;
    &quot;consent&quot;: {&#xd;
        &quot;email&quot;: &quot;siv111.soprano@gmail.com&quot;,&#xd;
        &quot;isd_code&quot;: &quot;91&quot;,&#xd;
        &quot;mobile&quot;: &quot;9940575844&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/updatemfredemptions</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/updatemfredemptions</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_53_POST_Fetch MF Redemtions" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;18543&quot;,&#xd;
    &quot;id&quot;:&quot;mfr_c4e2095d41c24357b32ae2f57df312c0&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${fetchRedemptions}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://localhost:8085/abc-securities/api/v1/mf/fetchmfredemptions</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_54_POST_List MF Redemptions" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;1&quot;&#xd;
    &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/listmfredemptions</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/listmfredemptions</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_55_POST_List All MF Redemtions MFIA" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;1&quot;,&#xd;
    &quot;mf_investment_account&quot;:&quot;mfia_0d54f39215bf440e83156f8686b7ee96&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/listallmfredemtions</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/listallmfredemtions</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_56_POST_Get Transactions" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:1,&#xd;
    &quot;folios&quot;:&quot;8ROD3YPFXCUE2,3WE7F4WREF3FQ&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/report/mf/transactions</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/report/mf/transactions</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_57_POST_Investment Schemewise Returns" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: &quot;1145&quot;,&#xd;
    &quot;journeyId&quot;: &quot;MF&quot;,&#xd;
    &quot;profileId&quot;: &quot;8U6yT5&quot;,&#xd;
    &quot;mfInvestmentAccount&quot;: &quot;mfia_1af02c4c572146329241d6e6727b226f&quot;,&#xd;
    &quot;tradedOnTo&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/report/mf/schemewisereturns</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/report/mf/schemewisereturns</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_58_POST_Investment Accountwise Returns" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: &quot;7654&quot;,&#xd;
    &quot;journeyId&quot;: &quot;MF&quot;,&#xd;
    &quot;profileId&quot;: &quot;8U6yT5&quot;,&#xd;
    &quot;mfInvestmentAccount&quot;: &quot;mfia_0d54f39215bf440e83156f8686b7ee96&quot;,&#xd;
    &quot;tradedOnTo&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/report/mf/accountwisereturns</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://localhost:8080/abc-securities/api/v1/report/mf/accountwisereturns</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_59_POST_Get MF Folios" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;profileId&quot;:&quot;invp_66750503426a4e0db928e6613cdb20d8&quot;&#xd;
    }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/mffolios</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://localhost:8080/abc-securities/api/v1/mf/mffolios</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_60_POST_Holdings Report" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;9099&quot;,&#xd;
   &quot;investment_account_id&quot;:&quot;31&quot; //createInvestmentAccount response oldId&#xd;
   // &quot;folios&quot;:&quot;0LQJ3TY1NHF1C&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/report/reportsholdings</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/report/reportsholdings</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_61_POST_Fetch MF Ffolios" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: &quot;30&quot;,&#xd;
    &quot;journeyId&quot;:&quot;&quot;,&#xd;
    &quot;mfInvestmentAccount&quot;: &quot;mfia_d1b83638028b4c88992a6a4308035a97&quot;,&#xd;
    &quot;folioNumber&quot;: &quot;3WE7F4WREF3FQ&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/fetchmffolios</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/fetchmffolios</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_62_POST_Fetch Mandate" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;1&quot;,&#xd;
    &quot;id&quot;:&quot;24&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/fetchmandates/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://localhost:8080/abc-securities/api/v1/mf/fetchmandates/</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_63_POST_Fetch Payments" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;:3&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/fetchpayments/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://localhost:8080/abc-securities/api/v1/mf/fetchpayments/</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_64_POST_occupationsType-Drop down API" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customer_id&quot;:1,&#xd;
    &quot;journeyType&quot;:&quot;MF&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/occupations</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://localhost:8080/abc-securities/api/v1/occupations</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_65_POST_Dropdown Annual Income" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:652,&#xd;
    &quot;lob&quot;:&quot;10&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mf/annualincome</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://localhost:8080/abc-securities/api/v1/mf/annualincome</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_66_GET_Fund details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-securities/api/v1/mutualfund/fund-details?schemeCode=60Y&amp;isin=INF209KB1N91</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://localhost:8080/abc-securities/api/v1/mutualfund/fund-details?schemeCode=60Y&amp;isin=INF209KB1N91</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="filename"></stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
            <collectionProp name="CookieManager.cookies"/>
            <boolProp name="CookieManager.clearEachIteration">false</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">CounterValue</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">application/json</stringProp>
                <stringProp name="Header.name">Content-Type</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="RiskProfileScore" elementType="Argument">
                <stringProp name="Argument.name">RiskProfileScore</stringProp>
                <stringProp name="Argument.value">23</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="schemeCode" elementType="Argument">
                <stringProp name="Argument.name">schemeCode</stringProp>
                <stringProp name="Argument.value">117y</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ProductCategory" elementType="Argument">
                <stringProp name="Argument.name">ProductCategory</stringProp>
                <stringProp name="Argument.value">Equity</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TrueFalse_1" elementType="Argument">
                <stringProp name="Argument.name">TrueFalse_1</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TrueFalse_2" elementType="Argument">
                <stringProp name="Argument.name">TrueFalse_2</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV MF_20_100_00a_POST_sip-calculato" enabled="false">
            <stringProp name="filename">C:/Users/harishraj.s/Desktop/JMeter_Script/MutualFund/MutualFundParams.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="false">
            <boolProp name="clearEachIteration">false</boolProp>
            <boolProp name="useExpires">true</boolProp>
            <boolProp name="CacheManager.controlledByThread">false</boolProp>
          </CacheManager>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Life Insurance Sprint3" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">D:\Performance Testing - ABC\Jmeter\Life Insurance\Life Insurance Sprint 3 PathURI.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames"></stringProp>
          </CSVDataSet>
          <hashTree/>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
            <collectionProp name="CookieManager.cookies"/>
            <boolProp name="CookieManager.clearEachIteration">true</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">application/json</stringProp>
                <stringProp name="Header.name">Content-Type</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">keep-alive</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">34.100.198.4</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
            <boolProp name="clearEachIteration">true</boolProp>
            <boolProp name="useExpires">true</boolProp>
            <boolProp name="CacheManager.controlledByThread">true</boolProp>
          </CacheManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00a_GET_gettransaction" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${gettransaction}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/buy/getTransitionDetails?customerId=18978</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00b_POST_posttransist" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;transitionId&quot;: 53,&#xd;
    &quot;customerId&quot;: 18978,&#xd;
    &quot;journeyData&quot;: {&#xd;
        &quot;customerDetails&quot;: {&#xd;
            &quot;firstName&quot;: &quot;Sivasuriyan S&quot;,&#xd;
            &quot;lastName&quot;: &quot;Subbiramani&quot;,&#xd;
            &quot;dateOfBirth&quot;: &quot;1990-05-15&quot;,&#xd;
            &quot;email&quot;: &quot;sivasuriyan01.com&quot;,&#xd;
            &quot;gender&quot;: &quot;Male&quot;,&#xd;
            &quot;eduQualId&quot;: &quot;2&quot;,&#xd;
            &quot;occupationId&quot;: &quot;3&quot;,&#xd;
            &quot;spouseExistCover&quot;: &quot;1&quot;,&#xd;
            &quot;smokeOrTobacco&quot;: &quot;N&quot;,&#xd;
            &quot;annualIncome&quot;: &quot;75000&quot;,&#xd;
            &quot;liabilities&quot;: &quot;1&quot;,&#xd;
            &quot;liabilityAmount&quot;: &quot;0&quot;,&#xd;
            &quot;existingCover&quot;: &quot;1&quot;,&#xd;
            &quot;existingCoverAmt&quot;: &quot;50000&quot;&#xd;
        },&#xd;
        &quot;quoteDetails&quot;: {&#xd;
            &quot;premiumCoverAmount&quot;: &quot;33000&quot;,&#xd;
            &quot;premiumAmount&quot;: &quot;35782&quot;,&#xd;
            &quot;premiumFrequency&quot;: &quot;1&quot;,&#xd;
            &quot;policyCoverupto&quot;: &quot;10&quot;,&#xd;
            &quot;policyTermInYear&quot;: &quot;11&quot;,&#xd;
            &quot;policyPlanOption&quot;: &quot;12&quot;,&#xd;
            &quot;paymentPlanOption&quot;: &quot;13&quot;,&#xd;
            &quot;paymentTermYears&quot;: &quot;14&quot;,&#xd;
            &quot;policyCoverage&quot;: &quot;15&quot;,&#xd;
            &quot;addon1coveramount&quot;: &quot;16&quot;,&#xd;
            &quot;addon1premiumamount&quot;: &quot;17&quot;,&#xd;
            &quot;addon2coveramount&quot;: &quot;18&quot;,&#xd;
            &quot;addon2premiumamount&quot;: &quot;19&quot;,&#xd;
            &quot;addon3coveramount&quot;: &quot;20&quot;,&#xd;
            &quot;addon3premiumamount&quot;: &quot;21&quot;,&#xd;
            &quot;addon4coveramount&quot;: &quot;22&quot;,&#xd;
            &quot;addon4premiumamount&quot;: &quot;23&quot;,&#xd;
            &quot;addon5coveramount&quot;: &quot;23&quot;,&#xd;
            &quot;addon5premiumamount&quot;: &quot;24&quot;,&#xd;
            &quot;addon6coveramount&quot;: &quot;25&quot;,&#xd;
            &quot;addon6premiumamount&quot;: &quot;26&quot;&#xd;
        },&#xd;
        &quot;basicNomineeDetails&quot;: {&#xd;
            &quot;prefLanguage&quot;: &quot;English&quot;,&#xd;
            &quot;altMobileNumber&quot;: &quot;+1234567890&quot;,&#xd;
            &quot;resTelephone&quot;: &quot;+9876543210&quot;,&#xd;
            &quot;active&quot;: &quot;Yes&quot;,&#xd;
            &quot;nom1FirstName&quot;: &quot;Alice&quot;,&#xd;
            &quot;nom1LastName&quot;: &quot;Johnson&quot;,&#xd;
            &quot;nom1Dob&quot;: &quot;1990-05-15&quot;,&#xd;
            &quot;nom1Gender&quot;: &quot;Female&quot;,&#xd;
            &quot;nom1Share&quot;: &quot;50&quot;,&#xd;
            &quot;nom1Relationship&quot;: &quot;Spouse&quot;,&#xd;
&#xd;
            &quot;nom2FirstName&quot;: &quot;James&quot;,&#xd;
            &quot;nom2LastName&quot;: &quot;Smith&quot;,&#xd;
            &quot;nom2Dob&quot;: &quot;1985-03-20&quot;,&#xd;
            &quot;nom2Gender&quot;: &quot;Male&quot;,&#xd;
            &quot;nom2Share&quot;: &quot;25&quot;,&#xd;
&#xd;
            &quot;nom2Relationship&quot;: &quot;Child&quot;,&#xd;
            &quot;nom3FirstName&quot;: &quot;Eva&quot;,&#xd;
            &quot;nom3LastName&quot;: &quot;Brown&quot;,&#xd;
            &quot;nom3Dob&quot;: &quot;1995-09-10&quot;,&#xd;
            &quot;nom3Gender&quot;: &quot;Female&quot;,&#xd;
            &quot;nom3Share&quot;: &quot;15&quot;,&#xd;
            &quot;nom3Relationship&quot;: &quot;Sibling&quot;,&#xd;
            &quot;nom4FirstName&quot;: &quot;David&quot;,&#xd;
            &quot;nom4LastName&quot;: &quot;Lee&quot;,&#xd;
            &quot;nom4Dob&quot;: &quot;1980-12-05&quot;,&#xd;
            &quot;nom4Gender&quot;: &quot;Male&quot;,&#xd;
            &quot;nom4Share&quot;: &quot;10&quot;,&#xd;
            &quot;nom4Relationship&quot;: &quot;Friend&quot;,&#xd;
&#xd;
               &quot;gdn1FirstName&quot;: &quot;Michael&quot;,&#xd;
            &quot;gdn1LastName&quot;: &quot;Wilson&quot;,&#xd;
            &quot;gdn1Dob&quot;: &quot;1970-01-25&quot;,&#xd;
            &quot;gdn1Gender&quot;: &quot;Male&quot;,&#xd;
            &quot;gdn1RelationToNominee&quot;: &quot;Guardian&quot;,&#xd;
            &quot;gdn2FirstName&quot;: &quot;Sarah&quot;,&#xd;
            &quot;gdn2LastName&quot;: &quot;Miller&quot;,&#xd;
            &quot;gdn2Dob&quot;: &quot;1965-08-12&quot;,&#xd;
            &quot;gdn2Gender&quot;: &quot;Female&quot;,&#xd;
            &quot;gdn2RelationToNominee&quot;: &quot;Guardian&quot;,&#xd;
            &quot;gdn3FirstName&quot;: &quot;Robert&quot;,&#xd;
            &quot;gdn3LastName&quot;: &quot;Davis&quot;,&#xd;
            &quot;gdn3Dob&quot;: &quot;1982-06-30&quot;,&#xd;
            &quot;gdn3Gender&quot;: &quot;Male&quot;,&#xd;
            &quot;gdn3RelationToNominee&quot;: &quot;Guardian&quot;,&#xd;
            &quot;gdn4FirstName&quot;: &quot;Emily&quot;,&#xd;
            &quot;gdn4LastName&quot;: &quot;White&quot;,&#xd;
            &quot;gdn4Dob&quot;: &quot;1992-11-18&quot;,&#xd;
            &quot;gdn4Gender&quot;: &quot;Female&quot;,&#xd;
            &quot;gdn4RelationToNominee&quot;: &quot;Guardian&quot;,&#xd;
            &quot;nationality&quot;: &quot;American&quot;,&#xd;
            &quot;maritalStatus&quot;: &quot;Married&quot;,&#xd;
            &quot;fatherSpouseName&quot;: &quot;John Johnson&quot;,&#xd;
            &quot;mothersName&quot;: &quot;Mary Johnson&quot;,&#xd;
            &quot;maidenName&quot;: &quot;Alice Brown&quot;,&#xd;
            &quot;birthplace&quot;: &quot;New York&quot;&#xd;
        },&#xd;
        &quot;covidDetails&quot;: {&#xd;
            &quot;cvdPositive&quot;: &quot;Y&quot;,&#xd;
            &quot;covidDate&quot;: &quot;2023-09-15&quot;,&#xd;
            &quot;covidTreatment&quot;: &quot;Y&quot;,&#xd;
            &quot;homeQuarantine&quot;: &quot;N&quot;,&#xd;
            &quot;cvdHospitalized&quot;: &quot;Hospital ABC&quot;,&#xd;
            &quot;cvdDocument1&quot;: &quot;document1.pdf&quot;,&#xd;
            &quot;covidOngoingComplications&quot;: &quot;N&quot;,&#xd;
            &quot;covidCompliDocument1&quot;: &quot;complication_doc1.pdf&quot;,&#xd;
            &quot;covidCompliDocument2&quot;: &quot;complication_doc2.pdf&quot;,&#xd;
            &quot;covidCompliDocument3&quot;: &quot;complication_doc3.pdf&quot;,&#xd;
            &quot;covidCompliDocument4&quot;: &quot;complication_doc4.pdf&quot;,&#xd;
            &quot;covidCompliDocument5&quot;: &quot;complication_doc5.pdf&quot;,&#xd;
            &quot;cvdDocument2&quot;: &quot;document2.pdf&quot;,&#xd;
            &quot;cvdDocument3&quot;: &quot;document3.pdf&quot;,&#xd;
            &quot;cvdDocument4&quot;: &quot;document4.pdf&quot;,&#xd;
            &quot;cvdDocument5&quot;: &quot;document5.pdf&quot;,&#xd;
            &quot;covidRecDate&quot;: &quot;2023-09-16&quot;,&#xd;
            &quot;covidDecln&quot;: &quot;N&quot;&#xd;
        },&#xd;
        &quot;medicalDetails&quot;: {&#xd;
            &quot;medicalNone&quot;: &quot;N&quot;,&#xd;
            &quot;medicalCondition&quot;: &quot;Y&quot;,&#xd;
            &quot;medicalChest&quot;: &quot;Y&quot;,&#xd;
            &quot;chestPainDetails&quot;: &quot;yes&quot;,&#xd;
            &quot;chestPainDr&quot;: &quot;Dr. Smith&quot;,&#xd;
            &quot;chestPainDiagnosisDate&quot;: &quot;2023-09-13&quot;,&#xd;
            &quot;chestPainLastConsulDate&quot;: &quot;2023-08-25&quot;,&#xd;
            &quot;chestPainDetailsHospital&quot;: &quot;City Hospital&quot;,&#xd;
            &quot;chestPainDetails2&quot;: &quot;Chest pain description 2&quot;,&#xd;
            &quot;chestPainDr2&quot;: &quot;Dr. Johnson&quot;,&#xd;
            &quot;chestPainDiagnosisDate2&quot;: &quot;2023-07-10&quot;,&#xd;
            &quot;chestPainLastConsultingDate2&quot;: &quot;2023-06-18&quot;,&#xd;
            &quot;chestPainDetailsHospital2&quot;: &quot;County Hospital&quot;,&#xd;
            &quot;chestPainDetails3&quot;: &quot;Chest pain description 3&quot;,&#xd;
            &quot;chestPainDr3&quot;: &quot;Dr. Brown&quot;,&#xd;
            &quot;chestPainDiagnosisDate3&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;chestPainLastConsultingDate3&quot;: &quot;2023-04-15&quot;,&#xd;
            &quot;chestPainDetailsHospital3&quot;: &quot;Regional Hospital&quot;,&#xd;
            &quot;medicalAsthma&quot;: &quot;N&quot;,&#xd;
            &quot;asthmaDetails&quot;: &quot;asthmaDetails&quot;,&#xd;
            &quot;asthmaDr&quot;: &quot;asthmaDr&quot;,&#xd;
            &quot;asthmaDiagnosisDate&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;asthmaLastConsultingDate&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;asthmaDetailsHospital&quot;: &quot;test&quot;,&#xd;
            &quot;asthmaDetails2&quot;: &quot;test&quot;,&#xd;
            &quot;asthma4Dr2&quot;: &quot;test asthma4Dr2&quot;,&#xd;
            &quot;asthmaDiagnosisDate2&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;asthmaLastConsultingDate2&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;asthmaDetailsHospital2&quot;: &quot;test&quot;,&#xd;
            &quot;asthmaDetails3&quot;: &quot;test&quot;,&#xd;
            &quot;asthma4Dr3&quot;: &quot;test asthma4Dr3&quot;,&#xd;
            &quot;asthmaDiagnosisDate3&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;asthmaLastConsultingDate3&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;asthmaDetailsHospital3&quot;: &quot;test&quot;,&#xd;
            &quot;medicalDiabetes&quot;: &quot;Y&quot;,&#xd;
            &quot;diabetesDetails&quot;: &quot;Type 2 diabetes&quot;,&#xd;
            &quot;diabetesDr&quot;: &quot;Dr. Martinez&quot;,&#xd;
            &quot;diabetesDiagnosisDate&quot;: &quot;2022-12-10&quot;,&#xd;
            &quot;diabetesLastConsultingDate&quot;: &quot;2022-11-20&quot;,&#xd;
            &quot;diabetesDetailsHospital&quot;: &quot;Central Clinic&quot;,&#xd;
            &quot;diabetesDetails2&quot;: &quot;test&quot;,&#xd;
            &quot;diabetesDr2&quot;: &quot;test&quot;,&#xd;
            &quot;diabetesDiagnosisDate2&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;diabetesLastConsultingDate2&quot;: &quot;2023-05-02t&quot;,&#xd;
            &quot;diabetesDetailsHospital2&quot;: &quot;test&quot;,&#xd;
            &quot;diabetesDetails3&quot;: &quot;test&quot;,&#xd;
            &quot;diabetesDr3&quot;: &quot;test&quot;,&#xd;
            &quot;diabetesDiagnosisDate3&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;diabetesLastConsultingDate3&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;diabetesDetailsHospital3&quot;: &quot;test&quot;,&#xd;
            &quot;medicalUlcer&quot;: &quot;No&quot;,&#xd;
            &quot;ulcerDetails&quot;: &quot;test&quot;,&#xd;
            &quot;ulcerDr&quot;: &quot;test&quot;,&#xd;
            &quot;ulcerDiagnosisDate&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;ulcerLastConsultingDate&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;ulcerDetailsHospital&quot;: &quot;test&quot;,&#xd;
            &quot;ulcerDetails2&quot;: &quot;test&quot;,&#xd;
            &quot;ulcerDr2&quot;: &quot;test&quot;,&#xd;
            &quot;ulcerDiagnosisDate2&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;ulcerLastConsultingDate2&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;ulcerDetailsHospital2&quot;: &quot;test&quot;,&#xd;
            &quot;ulcerDetails3&quot;: &quot;test&quot;,&#xd;
            &quot;ulcerDr3&quot;: &quot;test&quot;,&#xd;
            &quot;ulcerDiagnosisDate3&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;ulcerLastConsultingDate3&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;ulcerDetailsHospital3&quot;: &quot;test&quot;,&#xd;
            &quot;medicalCancer&quot;: &quot;No&quot;,&#xd;
            &quot;cancerDetails&quot;: &quot;test&quot;,&#xd;
            &quot;cancerDr&quot;: &quot;test&quot;,&#xd;
            &quot;cancerDiagnosisDate&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;cancerLastConsultingDate&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;cancerDetailsHospital&quot;: &quot;test&quot;,&#xd;
            &quot;cancerDetails2&quot;: &quot;test&quot;,&#xd;
            &quot;cancerDr2&quot;: &quot;test&quot;,&#xd;
            &quot;cancerDiagnosisDate2&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;cancerLastConsultingDate2&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;cancerDetailsHospital2&quot;: &quot;test&quot;,&#xd;
            &quot;cancerDetails3&quot;: &quot;test&quot;,&#xd;
            &quot;cancerDr3&quot;: &quot;test&quot;,&#xd;
            &quot;cancerDiagnosisDate3&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;cancerLastConsultingDate3&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;cancerDetailsHospital3&quot;: &quot;test&quot;,&#xd;
            &quot;medicalKidney&quot;: &quot;No&quot;,&#xd;
            &quot;kidneyDetails&quot;: &quot;test&quot;,&#xd;
            &quot;kidneyDr&quot;: &quot;test&quot;,&#xd;
            &quot;kidneyDiagnosisDate&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;kidneyLastConsultingDate&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;kidneyDetailsHospital&quot;: &quot;test&quot;,&#xd;
            &quot;kidneyDetails2&quot;: &quot;test&quot;,&#xd;
            &quot;kidneyDr2&quot;: &quot;test&quot;,&#xd;
            &quot;kidneyDiagnosisDate2&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;kidneyLastConsultingDate2&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;kidneyDetailsHospital2&quot;: &quot;test&quot;,&#xd;
            &quot;kidneyDetails3&quot;: &quot;test&quot;,&#xd;
            &quot;kidneyDr3&quot;: &quot;test&quot;,&#xd;
            &quot;kidneyDiagnosisDate3&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;kidneyLastConsultingDate3&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;kidneyDetailsHospital3&quot;: &quot;test&quot;,&#xd;
            &quot;medicalArthritis&quot;: &quot;No&quot;,&#xd;
            &quot;arthritisDetails&quot;: &quot;test&quot;,&#xd;
            &quot;arthritisDr&quot;: &quot;test&quot;,&#xd;
            &quot;arthritisDiagnosisDate&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;arthritisLastConsultingDate&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;arthritisDetailsHospital&quot;: &quot;test&quot;,&#xd;
            &quot;arthritisDetails2&quot;: &quot;test&quot;,&#xd;
            &quot;arthritisDr2&quot;: &quot;test&quot;,&#xd;
            &quot;arthritisDiagnosisDate2&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;arthritisLastConsultingDate2&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;arthritisDetailsHospital2&quot;: &quot;test&quot;,&#xd;
            &quot;arthritisDetails3&quot;: &quot;test&quot;,&#xd;
            &quot;arthritisDr3&quot;: &quot;test&quot;,&#xd;
            &quot;arthritisDiagnosisDate3&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;arthritisLastConsultingDate3&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;arthritisDetailsHospital3&quot;: &quot;test&quot;,&#xd;
            &quot;medicalDizziness&quot;: &quot;No&quot;,&#xd;
            &quot;dizzinessDetails&quot;: &quot;test&quot;,&#xd;
            &quot;dizzinessDr&quot;: &quot;test&quot;,&#xd;
            &quot;dizzinessDiagnosisDate&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;dizzinessLastConsultingDate&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;dizzinessDetailsHospital&quot;: &quot;test&quot;,&#xd;
            &quot;dizzinessDetails2&quot;: &quot;test&quot;,&#xd;
            &quot;dizzinessDr2&quot;: &quot;test&quot;,&#xd;
            &quot;dizzinessDiagnosisDate2&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;dizzinessLastConsultingDate2&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;dizzinessDetailsHospital2&quot;: &quot;test&quot;,&#xd;
            &quot;dizzinessDetails3&quot;: &quot;test&quot;,&#xd;
            &quot;dizzinessDr3&quot;: &quot;test&quot;,&#xd;
            &quot;dizzinessDiagnosisDate3&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;dizzinessLastConsultingDate3&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;dizzinessDetailsHospital3&quot;: &quot;test&quot;,&#xd;
            &quot;medicalEyes&quot;: &quot;No&quot;,&#xd;
            &quot;eyesDetails&quot;: &quot;test&quot;,&#xd;
            &quot;eyesDr&quot;: &quot;test&quot;,&#xd;
            &quot;eyesDiagnosisDate&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;eyesLastConsultingDate&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;eyesDetailsHospital&quot;: &quot;test&quot;,&#xd;
            &quot;eyesDetails2&quot;: &quot;test&quot;,&#xd;
            &quot;eyesDr2&quot;: &quot;test&quot;,&#xd;
            &quot;eyesDiagnosisDate2&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;eyesLastConsultingDate2&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;eyesDetailsHospital2&quot;: &quot;test&quot;,&#xd;
            &quot;eyesDetails3&quot;: &quot;test&quot;,&#xd;
            &quot;eyesDr3&quot;: &quot;test&quot;,&#xd;
            &quot;eyesDiagnosisDate3&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;eyesLastConsultingDate3&quot;: &quot;2023-05-02&quot;,&#xd;
            &quot;eyesDetailsHospital3&quot;: &quot;test&quot;,&#xd;
            &quot;anyOtherIllness&quot;: &quot;N&quot;,&#xd;
            &quot;illnessDetails&quot;: &quot;test&quot;,&#xd;
            &quot;tliMedicalDetailsCol&quot;: &quot;test&quot;&#xd;
        },&#xd;
        &quot;nomineeDetails&quot;: {&#xd;
            &quot;isPoliticallyExposed&quot;: &quot;Y&quot;,&#xd;
            &quot;anyOtherCitizenship&quot;: &quot;N&quot;,&#xd;
            &quot;taxResidentOtherCountry&quot;: &quot;N&quot;,&#xd;
            &quot;gstLaw&quot;: &quot;Y&quot;,&#xd;
            &quot;eiaAccountDetails&quot;: &quot;12345&quot;,&#xd;
            &quot;politicalExposureDetails&quot;: &quot;Political connections&quot;,&#xd;
            &quot;citizenshipDetails&quot;: &quot;Country XYZ&quot;,&#xd;
            &quot;otherResidencyDetails&quot;: &quot;Resident of ABC&quot;,&#xd;
            &quot;gstRegistration&quot;: &quot;GST123456&quot;,&#xd;
            &quot;eiaAccount&quot;: &quot;Y&quot;,&#xd;
            &quot;eiaPreferredRepo&quot;: &quot;preffered REPO&quot;&#xd;
        },&#xd;
        &quot;policyDetails&quot;: {&#xd;
            &quot;refusedAnyPolicy&quot;: &quot;Y&quot;,&#xd;
            &quot;anyExistingPolicy1&quot;: &quot;Y&quot;,&#xd;
            &quot;anyExistingPolicy2&quot;: &quot;Y&quot;,&#xd;
            &quot;anyExistingPolicy3&quot;: &quot;Test Insurance Name3&quot;,&#xd;
            &quot;refusePolicyInsurerName&quot;: &quot;Test&quot;,&#xd;
            &quot;typeOfPolicy&quot;: &quot;test&quot;,&#xd;
            &quot;refusedSumAssured&quot;: &quot;200000&quot;,&#xd;
            &quot;refusedReason&quot;: &quot;Reason&quot;,&#xd;
            &quot;existingInsurerName1&quot;: &quot;Test Insurance Name1&quot;,&#xd;
            &quot;existingInsurerName2&quot;: &quot;Test Insurance Name2&quot;,&#xd;
            &quot;existingInsurerName3&quot;: &quot;test&quot;,&#xd;
            &quot;existingSumAssured1&quot;: &quot;40000&quot;,&#xd;
            &quot;existingSumAssured2&quot;: &quot;200000&quot;,&#xd;
            &quot;existingSumAssured3&quot;: &quot;100000&quot;,&#xd;
            &quot;refuseExistingPolicy&quot;: &quot;Y&quot;&#xd;
        },&#xd;
        &quot;verificationDetails&quot;: {&#xd;
            &quot;nameOfBusiness&quot;: &quot;Business XYZ&quot;,&#xd;
            &quot;natureOfBusiness&quot;: &quot;Nature ABC&quot;,&#xd;
            &quot;typeOfOrganisation&quot;: &quot;Organization Type&quot;,&#xd;
            &quot;nameOfOrganisation&quot;: &quot;Organization XYZ&quot;,&#xd;
            &quot;designation&quot;: &quot;Designation ABC&quot;,&#xd;
            &quot;parentsAnnualIncome&quot;: &quot;50000.0&quot;,&#xd;
            &quot;parentsExistCover&quot;: &quot;100000.0&quot;,&#xd;
            &quot;spouseAnnualIncome&quot;: &quot;60000.0&quot;,&#xd;
            &quot;mon1&quot;: &quot;Mon1 Data&quot;,&#xd;
            &quot;mon2&quot;: &quot;Mon2 Data&quot;,&#xd;
            &quot;mon3&quot;: &quot;Mon3 Data&quot;,&#xd;
            &quot;mon4&quot;: &quot;Mon4 Data&quot;,&#xd;
            &quot;mon5&quot;: &quot;Mon5 Data&quot;,&#xd;
            &quot;mon6&quot;: &quot;Mon6 Data&quot;,&#xd;
            &quot;sal1&quot;: &quot;Sal1 Data&quot;,&#xd;
            &quot;sal2&quot;: &quot;Sal2 Data&quot;,&#xd;
            &quot;sal3&quot;: &quot;Sal3 Data&quot;,&#xd;
            &quot;sal4&quot;: &quot;Sal4 Data&quot;,&#xd;
            &quot;sal5&quot;: &quot;Sal5 Data&quot;,&#xd;
            &quot;sal6&quot;: &quot;Sal6 Data&quot;,&#xd;
            &quot;itr1&quot;: &quot;ITR1 Data&quot;,&#xd;
            &quot;itr2&quot;: &quot;ITR2 Data&quot;,&#xd;
            &quot;itr3&quot;: &quot;ITR3 Data&quot;,&#xd;
            &quot;f162&quot;: &quot;F162 Data&quot;,&#xd;
            &quot;f163&quot;: &quot;F163 Data&quot;,&#xd;
            &quot;f26as1&quot;: &quot;F26AS1 Data&quot;,&#xd;
            &quot;f26as2&quot;: &quot;F26AS2 Data&quot;,&#xd;
            &quot;f26as3&quot;: &quot;F26AS3 Data&quot;,&#xd;
            &quot;panNumber&quot;: &quot;ABC123123&quot;,&#xd;
            &quot;sourceOfFunds&quot;: &quot;Source of Funds ABC&quot;,&#xd;
            &quot;f161&quot;: &quot;F161 Data&quot;,&#xd;
            &quot;descSourceOfFunds&quot;: &quot;Description of Source ABC&quot;,&#xd;
            &quot;exemptRequirePan&quot;: &quot;N&quot;,&#xd;
            &quot;verificationUploadFilename&quot;: &quot;verification.pdf&quot;,&#xd;
            &quot;f60doc&quot;: &quot;F60 Document Data&quot;,&#xd;
            &quot;aadhaarCardNo&quot;: &quot;12345678901234&quot;,&#xd;
            &quot;identityProfType&quot;: &quot;Identity Type XYZ&quot;&#xd;
        },&#xd;
        &quot;verificationAddrDetails&quot;: {&#xd;
            &quot;active&quot;: &quot;t&quot;,&#xd;
            &quot;kycGmapAddress&quot;: &quot;123 Main Street&quot;,&#xd;
            &quot;kycAreaPlace&quot;: &quot;Downtown&quot;,&#xd;
            &quot;kycLandmark&quot;: &quot;City Park&quot;,&#xd;
            &quot;kycPincode&quot;: &quot;12345&quot;,&#xd;
            &quot;kycCity&quot;: &quot;Metropolis&quot;,&#xd;
            &quot;kycState&quot;: &quot;Stateville&quot;,&#xd;
            &quot;kyctypeOfAddress&quot;: &quot;Residential&quot;,&#xd;
            &quot;currentAddress&quot;: &quot;456 Elm Avenue&quot;,&#xd;
            &quot;curGmapAddress&quot;: &quot;Apt 789&quot;,&#xd;
            &quot;curAreaPlace&quot;: &quot;Suburbia&quot;,&#xd;
            &quot;curLandmark&quot;: &quot;Shopping Mall&quot;,&#xd;
            &quot;curPincode&quot;: &quot;54321&quot;,&#xd;
            &quot;curCity&quot;: &quot;Villageville&quot;,&#xd;
            &quot;curState&quot;: &quot;Countyland&quot;,&#xd;
            &quot;curTypeOfAddress&quot;: &quot;Business&quot;,&#xd;
            &quot;addrProofDocument&quot;: &quot;Address Proof Document&quot;,&#xd;
            &quot;idProof&quot;: &quot;ID Proof&quot;,&#xd;
            &quot;idDocUpload&quot;: &quot;ID Doc Upload&quot;,&#xd;
            &quot;tiAddressCol&quot;: &quot;Address Collection&quot;,&#xd;
            &quot;perGmapAddress&quot;: &quot;789 Oak Lane&quot;,&#xd;
            &quot;perAreaPlace&quot;: &quot;Countryside&quot;,&#xd;
            &quot;perLandmark&quot;: &quot;Nature Park&quot;,&#xd;
            &quot;perPincode&quot;: &quot;67890&quot;,&#xd;
            &quot;perCity&quot;: &quot;Ruralville&quot;,&#xd;
            &quot;perState&quot;: &quot;Countryland&quot;,&#xd;
            &quot;perTypeOfAddr&quot;: &quot;Residential&quot;,&#xd;
            &quot;perAddreproofDocument&quot;: &quot;Personal Address Proof&quot;&#xd;
        },&#xd;
        &quot;payoutDetails&quot;: {&#xd;
            &quot;accountType&quot;: &quot;Savings&quot;,&#xd;
            &quot;accountNumber&quot;: &quot;1234567890&quot;,&#xd;
            &quot;ifscCode&quot;: &quot;ABCD1234567&quot;,&#xd;
            &quot;bankName&quot;: &quot;Bank XYZ&quot;,&#xd;
            &quot;branch&quot;: &quot;Branch ABC&quot;,&#xd;
            &quot;prefDrawDate&quot;: &quot;2023-09-20&quot;,&#xd;
            &quot;cancelChqUpload&quot;: &quot;cancel_cheque.pdf&quot;,&#xd;
            &quot;mandateAutoPay&quot;: &quot;Y&quot;&#xd;
        },&#xd;
        &quot;healthDetails&quot;: {&#xd;
            &quot;heightFt&quot;: &quot;5&quot;,&#xd;
            &quot;heightCms&quot;: &quot;175&quot;,&#xd;
            &quot;weight&quot;: &quot;160&quot;,&#xd;
            &quot;weightChange&quot;: &quot;true&quot;,&#xd;
            &quot;weightAmount&quot;: &quot;5&quot;,&#xd;
            &quot;weightReason&quot;: &quot;Regular exercise and balanced diet&quot;,&#xd;
            &quot;womenHealthNone&quot;: &quot;true&quot;,&#xd;
            &quot;womenGynaecProb&quot;: &quot;true&quot;,&#xd;
            &quot;womenDiagDate&quot;: &quot;2022-12-10&quot;,&#xd;
            &quot;womenDiagDetails&quot;: &quot;Endometriosis&quot;,&#xd;
            &quot;womenLastConsultDate&quot;: &quot;2023-08-25&quot;,&#xd;
            &quot;drDetails&quot;: &quot;Dr. Emily Williams, Gynecologist&quot;,&#xd;
            &quot;hospDate&quot;: &quot;2023-03-05&quot;,&#xd;
            &quot;hospDetails&quot;: &quot;Appendicitis surgery&quot;,&#xd;
            &quot;isPregnant&quot;: &quot;true&quot;,&#xd;
            &quot;pregnantInWeeks&quot;: &quot;2&quot;,&#xd;
            &quot;addlHealthNone&quot;: &quot;true&quot;,&#xd;
            &quot;addlType&quot;: &quot;Allergy1&quot;,&#xd;
            &quot;add2Type&quot;: &quot;Allergy2&quot;,&#xd;
            &quot;add3Type&quot;: &quot;Allergy3&quot;,&#xd;
            &quot;add4Type&quot;: &quot;Allergy4&quot;,&#xd;
            &quot;add5Type&quot;: &quot;Allergy5&quot;,&#xd;
            &quot;diagDetails1&quot;: &quot;Seasonal allergies&quot;,&#xd;
            &quot;diagDetails2&quot;: &quot;Asthma&quot;,&#xd;
            &quot;diagDetails3&quot;: &quot;Hypertension&quot;,&#xd;
            &quot;diagDetails4&quot;: &quot;Type 2 Diabetes&quot;,&#xd;
            &quot;diagDetails5&quot;: &quot;test&quot;,&#xd;
            &quot;drDetails1&quot;: &quot;Dr. John Smith, Allergist&quot;,&#xd;
            &quot;drDetails2&quot;: &quot;Dr. Sarah Johnson, Pulmonologist&quot;,&#xd;
            &quot;drDetails3&quot;: &quot;Dr. Michael Davis, Cardiologist&quot;,&#xd;
            &quot;drDetails4&quot;: &quot;Dr. Lisa Miller, Endocrinologist&quot;,&#xd;
            &quot;drDetails5&quot;: &quot;test&quot;,&#xd;
            &quot;diagDate1&quot;: &quot;2022-05-20&quot;,&#xd;
            &quot;diagDate2&quot;: &quot;2019-08-10&quot;,&#xd;
            &quot;diagDate3&quot;: &quot;2021-02-15&quot;,&#xd;
            &quot;diagDate4&quot;: &quot;2018-11-30&quot;,&#xd;
            &quot;diagDate5&quot;: &quot;2018-11-30&quot;,&#xd;
            &quot;lastConsultingDate1&quot;: &quot;2023-08-30&quot;,&#xd;
            &quot;lastConsultingDate2&quot;: &quot;2023-07-15&quot;,&#xd;
            &quot;lastConsultingDate3&quot;: &quot;2023-08-05&quot;,&#xd;
            &quot;lastConsultingDate4&quot;: &quot;2023-07-20&quot;,&#xd;
            &quot;lastConsultingDate5&quot;: &quot;2023-07-20&quot;,&#xd;
            &quot;hospitalizationDetails1&quot;: &quot;None&quot;,&#xd;
            &quot;hospitalizationDetails2&quot;: &quot;Bronchitis treatment&quot;,&#xd;
            &quot;hospitalizationDetails3&quot;: &quot;Heart surgery&quot;,&#xd;
            &quot;hospitalizationDetails4&quot;: &quot;Insulin management&quot;,&#xd;
            &quot;hospitalizationDetails5&quot;: &quot;test&quot;&#xd;
        },&#xd;
        &quot;lifeStyleDetails&quot;: {&#xd;
            &quot;lifestyleNone&quot;: &quot;y&quot;,&#xd;
            &quot;alcohol&quot;: &quot;Y&quot;,&#xd;
            &quot;alcoholType&quot;: &quot;Beer&quot;,&#xd;
            &quot;alcoholQty&quot;: &quot;2 bottles&quot;,&#xd;
            &quot;alcoholFrequency&quot;: &quot;Weekly&quot;,&#xd;
            &quot;alcoholAdvPhysicianDetails&quot;: &quot;N&quot;,&#xd;
            &quot;alcoholStopDetails&quot;: &quot;alcohol stopped&quot;,&#xd;
            &quot;tobacco&quot;: &quot;Y&quot;,&#xd;
            &quot;tobQuantity&quot;: &quot;10&quot;,&#xd;
            &quot;tobYears&quot;: &quot;5&quot;,&#xd;
            &quot;tobConsumed&quot;: &quot;Smoking&quot;,&#xd;
            &quot;tobSubstance&quot;: &quot;Nicotine&quot;,&#xd;
            &quot;tobStop&quot;: &quot;N&quot;,&#xd;
            &quot;tobStopDetails&quot;: &quot;tob stop details&quot;,&#xd;
            &quot;hazardous&quot;: &quot;Y&quot;,&#xd;
            &quot;hazardousDetails&quot;: &quot;Chemical exposure at work&quot;,&#xd;
            &quot;narcotic&quot;: &quot;y&quot;,&#xd;
            &quot;narcoticDetails&quot;: &quot;test&quot;,&#xd;
            &quot;travelAbroad&quot;: &quot;Y&quot;,&#xd;
            &quot;travelAbroadCountry&quot;: &quot;United States&quot;,&#xd;
            &quot;travelDepartureDate&quot;: &quot;2023-10-01&quot;,&#xd;
            &quot;travelArrivalDate&quot;: &quot;2023-10-15&quot;,&#xd;
            &quot;travelVisaType&quot;: &quot;Tourist&quot;&#xd;
        },&#xd;
        &quot;familyHealthDetails&quot;: {&#xd;
            &quot;healthNone&quot;: &quot;Y&quot;,&#xd;
            &quot;highBloodSugar&quot;: &quot;N&quot;,&#xd;
            &quot;bloodSugarDetails&quot;: &quot;Normal fasting blood sugar levels&quot;,&#xd;
            &quot;hereditary&quot;: &quot;Y&quot;,&#xd;
            &quot;hereditaryDetails&quot;: &quot;Family history of heart disease&quot;,&#xd;
            &quot;chronic&quot;: &quot;N&quot;,&#xd;
            &quot;chronicDetails&quot;: &quot;chronicDetails&quot;,&#xd;
            &quot;heartAilment&quot;: &quot;Y&quot;,&#xd;
            &quot;heartAilmentDetails&quot;: &quot;Angina&quot;,&#xd;
            &quot;stroke&quot;: &quot;N&quot;,&#xd;
            &quot;strokeDetails&quot;: &quot;strokeDetails&quot;,&#xd;
            &quot;bloodPressure&quot;: &quot;Y&quot;,&#xd;
            &quot;bloodPressureDetails&quot;: &quot;Hypertension&quot;,&#xd;
            &quot;familyCancer&quot;: &quot;Y&quot;,&#xd;
            &quot;familyCancerDetails&quot;: &quot;Breast cancer&quot;,&#xd;
            &quot;familyDiabetes&quot;: &quot;N&quot;,&#xd;
            &quot;familyDiabetesDetails&quot;: &quot;familyDiabetesDetails&quot;,&#xd;
            &quot;familyKidney&quot;: &quot;N&quot;,&#xd;
            &quot;familyKidneyDetails&quot;: &quot;family kidneyDetails&quot;,&#xd;
            &quot;familyParalysis&quot;: &quot;Y&quot;,&#xd;
            &quot;familyParalysisDetails&quot;: &quot;Paraplegia&quot;,&#xd;
            &quot;notStatedAbove&quot;: &quot;n&quot;,&#xd;
            &quot;fatherDetails&quot;: &quot;John Smith&quot;,&#xd;
            &quot;fatherAge&quot;: &quot;65&quot;,&#xd;
            &quot;stateOfFatherHealth&quot;: &quot;Deceased&quot;,&#xd;
            &quot;fdeathAge&quot;: &quot;60&quot;,&#xd;
            &quot;fcauseOfDeath&quot;: &quot;a&quot;,&#xd;
            &quot;fcauseOfDeath2&quot;: &quot;a&quot;,&#xd;
            &quot;motherDetails&quot;: &quot;Mary Johnson&quot;,&#xd;
            &quot;motherAge&quot;: &quot;6&quot;,&#xd;
            &quot;stateOfMotherHealth&quot;: &quot;Living&quot;,&#xd;
            &quot;mdeathAge&quot;: &quot;2&quot;,&#xd;
            &quot;mcauseOfDeath&quot;: &quot;cause of death&quot;,&#xd;
            &quot;deceasedStateOfFatherHealthOther&quot;: &quot;Nill&quot;,&#xd;
            &quot;livingStateOfFatherHealthOther&quot;: &quot;Nill&quot;,&#xd;
            &quot;deceasedStateOfMotherHealthOther&quot;: &quot;Nill&quot;,&#xd;
            &quot;livingStateOfMotherHealthOther&quot;: &quot;Nill&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;currentStep&quot;: &quot;90&quot;,&#xd;
    &quot;finalStep&quot;: &quot;90&quot;,&#xd;
    &quot;fileList&quot;: []&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${posttransist}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/buy/addTransitionDetails</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00c_POST_GetQuoteInfoAPI" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 18978,&#xd;
    &quot;annualIncome&quot;: 2000000,&#xd;
    &quot;liabilityAmount&quot;: 1400,&#xd;
    &quot;existingCoverAmt&quot;: 2000,&#xd;
    &quot;age&quot;: 34,&#xd;
    &quot;premiumMode&quot;: &quot;Year&quot;,&#xd;
    &quot;coverUptoAge&quot;: 55,&#xd;
    &quot;gender&quot;: &quot;female&quot;,&#xd;
    &quot;smoker&quot;: &quot;Y&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GetQuoteInfoAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/quote/getLiTermQuoteInfo</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00d_GET_GetCoveruptoyears" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GetCoveruptoyears}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/quote/getcoveruptoyears?age=50</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00e_POST_GetQuoteForCoverAmountChange" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 18978,&#xd;
    &quot;coverAmount&quot;: 54000000,&#xd;
    &quot;age&quot;: 25,&#xd;
    &quot;premiumMode&quot;: &quot;Year&quot;,&#xd;
   &quot;planOption&quot; : 1,&#xd;
   &quot;coverUptoAge&quot;: 60,&#xd;
   &quot;gender&quot;: &quot;female&quot;,&#xd;
   &quot;smoker&quot;: &quot;N&quot;,&#xd;
    &quot;proposerAge&quot;: 25&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GetQuoteForCoverAmountChange}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/quote/getQuoteForCoverAmtChange</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="planid" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">planid</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;planid&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
              <stringProp name="TestPlan.comments">{&quot;planid&quot;:2640,&quot;</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="customerId" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">customerId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;,&quot;customerId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
              <stringProp name="TestPlan.comments">&quot;,&quot;customerId&quot;:62,&quot;</stringProp>
            </BoundaryExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00f_POST_GetPlandetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 18978,&#xd;
    &quot;coverAmount&quot;: 10000000,&#xd;
    &quot;age&quot;: 35,&#xd;
    &quot;premiumMode&quot;: &quot;year&quot;,&#xd;
    &quot;gender&quot;: &quot;Male&quot;,&#xd;
    &quot;smoker&quot;: &quot;Y&quot;&#xd;
   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GetPlandetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/quote/getLiTermPlanDetails</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00g_POST_coverAfterSixty" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 18978,&#xd;
    &quot;coverAmount&quot;: 10000000,&#xd;
    &quot;age&quot;: 50,&#xd;
    &quot;planOption&quot;: 9,&#xd;
    &quot;premiumMode&quot;: &quot;Month&quot;,&#xd;
    &quot;coverUptoAge&quot;: 76,&#xd;
    &quot;gender&quot;: &quot;Male&quot;,&#xd;
    &quot;smoker&quot;: &quot;Y&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${coverAfterSixty}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/quote/incomeAfter/coverUpto</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00h_GET_option9dropdown" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="age" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">age</stringProp>
                  <stringProp name="Argument.value">45</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${option9dropdown}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/quote/incomeafter/coveruptoyears?age=45</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00i_POST_GetRegularPayment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 18978,&#xd;
    &quot;coverAmount&quot;: 20000000,&#xd;
    &quot;age&quot;: 24,&#xd;
    &quot;premiumMode&quot;: &quot;Month&quot;,&#xd;
    &quot;planOption&quot;: 1,&#xd;
    &quot;paymentMode&quot;: &quot;Regular&quot;,&#xd;
    &quot;coverUptoAge&quot; : 45,&#xd;
    &quot;gender&quot;: &quot;Female&quot;,&#xd;
    &quot;smoker&quot;: &quot;Y&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GetRegularPayment}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/quote/getregularpayment</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00j_POST_GetTermYears" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;age&quot; : 60,&#xd;
    &quot;coverUptoAge&quot; : 75,&#xd;
    &quot;planOption&quot; : 1&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GetTermYears}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/quote/gettermyears</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="planid" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">planid</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;planid&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
              <stringProp name="TestPlan.comments">{&quot;planid&quot;:2640,&quot;</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="customerId" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">customerId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;,&quot;customerId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
              <stringProp name="TestPlan.comments">&quot;,&quot;customerId&quot;:62,&quot;</stringProp>
            </BoundaryExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00k_POST_GetLimitedPayment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 18978,&#xd;
    &quot;coverAmount&quot;: 20000000,&#xd;
    &quot;age&quot;: 24,&#xd;
    &quot;premiumMode&quot;: &quot;Month&quot;,&#xd;
    &quot;planOption&quot;: 1,&#xd;
    &quot;paymentMode&quot;: &quot;Limited&quot;,&#xd;
    &quot;coverUptoAge&quot;: 45,&#xd;
    &quot;limitedPayYears&quot;: 10,&#xd;
    &quot;gender&quot;: &quot;Male&quot;,&#xd;
    &quot;smoker&quot;: &quot;Y&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GetLimitedPayment}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://35.200.135.38/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/quote/getlimitedpayment</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00l_POST_Addon" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 18978,&#xd;
    &quot;coverAmount&quot;: 20000000,&#xd;
    &quot;age&quot;: 25,&#xd;
    &quot;premiumMode&quot;:&quot;Year&quot;,&#xd;
    &quot;planOption&quot;:1,&#xd;
    &quot;paymentMode&quot;:&quot;Regular&quot;,&#xd;
    &quot;coverUptoAge&quot;:40,&#xd;
    &quot;limitedPayYears&quot;: 7,&#xd;
    &quot;gender&quot;: &quot;Male&quot;,&#xd;
    &quot;smoker&quot;: &quot;Y&quot;&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${Addon}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/quote/getLITermAddOnInfo</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="planid" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">planid</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;planid&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
              <stringProp name="TestPlan.comments">{&quot;planid&quot;:2640,&quot;</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="customerId" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">customerId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;,&quot;customerId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
              <stringProp name="TestPlan.comments">&quot;,&quot;customerId&quot;:62,&quot;</stringProp>
            </BoundaryExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00m_POST_GetSingleAddonPremium" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 266,&#xd;
    &quot;coverAmount&quot;: 20000000,&#xd;
    &quot;age&quot;: 30,&#xd;
    &quot;premiumMode&quot;: &quot;Month&quot;,&#xd;
    &quot;planOption&quot;: 1,&#xd;
    &quot;paymentMode&quot;: &quot;Regular&quot;,&#xd;
    &quot;coverUptoAge&quot;: 40,&#xd;
    &quot;gender&quot;:&quot;M&quot;,&#xd;
    &quot;smoker&quot;:&quot;N&quot;,&#xd;
    &quot;addOns&quot;: {&#xd;
        &quot;addOnId&quot;: 4,&#xd;
        &quot;addOnCoverAmount&quot;: 1000000&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GetSingleAddonPremium}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/quote/getAddonPremium</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00n_POST_premiumsubaddon" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;premiumAmount&quot; : 5009.98,&#xd;
   &quot;addonAmount&quot; : 45&#xd;
 &#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${premiumsubaddon}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/buy/subRiderAmount</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00o_POST_DownloadIllustrationPDF" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 38,&#xd;
    &quot;coverAmount&quot;: 21000000,&#xd;
    &quot;age&quot;: 30,&#xd;
    &quot;premiumMode&quot;: &quot;Year&quot;,&#xd;
    &quot;planOption&quot;: 1,&#xd;
    &quot;paymentMode&quot;: &quot;Regular&quot;,&#xd;
    &quot;coverUptoAge&quot;: 40,&#xd;
    &quot;gender&quot;: &quot;M&quot;,&#xd;
    &quot;smoker&quot;: &quot;Y&quot;,&#xd;
    &quot;addOns&quot;: [&#xd;
        {&#xd;
            &quot;addOnId&quot;: 1,&#xd;
            &quot;addOnCoverAmount&quot;: 75000&#xd;
        },&#xd;
        {&#xd;
            &quot;addOnId&quot;: 2,&#xd;
            &quot;addOnCoverAmount&quot;: 150000&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${DownloadIllustrationPDF}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/quote/illustrationPdf</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00p_POST_Premiumforplanandaddons" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 18978,&#xd;
    &quot;coverAmount&quot;: 20000000,&#xd;
    &quot;age&quot;: 30,&#xd;
    &quot;premiumMode&quot;:&quot;Year&quot;,&#xd;
    &quot;planOption&quot;:1,&#xd;
    &quot;paymentMode&quot;:&quot;Regular&quot;,&#xd;
    &quot;coverUptoAge&quot;:40,&#xd;
     &quot;addOns&quot;: [&#xd;
        {&#xd;
            &quot;addOnId&quot;: 1,&#xd;
            &quot;addOnCoverAmount&quot;: 75000&#xd;
        },&#xd;
        {&#xd;
            &quot;addOnId&quot;: 6,&#xd;
            &quot;addOnCoverAmount&quot;: 2000000&#xd;
        }&#xd;
    ]&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${Premiumforplanandaddons}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/quote/getPremiumForSelectedAddons</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="planid" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">planid</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;planid&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
              <stringProp name="TestPlan.comments">{&quot;planid&quot;:2640,&quot;</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="customerId" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">customerId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;,&quot;customerId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
              <stringProp name="TestPlan.comments">&quot;,&quot;customerId&quot;:62,&quot;</stringProp>
            </BoundaryExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00q_POST_Payment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;payment_data&quot;: {&#xd;
        &quot;payment_type&quot;: &quot;INITIAL&quot;,&#xd;
        &quot;return_url&quot;: &quot;https://liuatpayments.adityabirlacapital.com/resultpage&quot;,&#xd;
        &quot;request_id&quot;: 1693908319001,&#xd;
        &quot;request_date&quot;: &quot;17/09/2023 15:09:19&quot;,&#xd;
        &quot;lob_id&quot;: &quot;ABSLI&quot;,&#xd;
        &quot;payment_source_id&quot;: &quot;ABCD_Initial_NB&quot;,&#xd;
        &quot;amount&quot;: 9235,&#xd;
        &quot;product_type&quot;: &quot;APPLICATION&quot;,&#xd;
        &quot;product_id&quot;: &quot;BAS123456&quot;,&#xd;
        &quot;customer_name&quot;: &quot;ABSLI TEST5811&quot;,&#xd;
        &quot;customer_email&quot;: &quot;debraj.das@techbulls.com&quot;,&#xd;
        &quot;customer_phone&quot;: &quot;8976379937&quot;,&#xd;
        &quot;customer_id&quot;: &quot;&quot;,&#xd;
        &quot;udf1&quot;: &quot;ABCD_Initial_NB&quot;,&#xd;
        &quot;udf2&quot;: &quot;002650&quot;,&#xd;
        &quot;udf3&quot;: &quot;&quot;,&#xd;
        &quot;udf4&quot;: &quot;&quot;,&#xd;
        &quot;udf5&quot;: &quot;&quot;,&#xd;
        &quot;udf6&quot;: &quot;&quot;,&#xd;
        &quot;udf7&quot;: &quot;&quot;,&#xd;
        &quot;udf8&quot;: &quot;&quot;,&#xd;
        &quot;udf9&quot;: &quot;&quot;,&#xd;
        &quot;udf10&quot;: &quot;&quot;&#xd;
    },&#xd;
    &quot;app_data&quot;: {&#xd;
        &quot;application&quot;: [&#xd;
            {&#xd;
                &quot;appl_rec_date&quot;: &quot;10-01-2010&quot;,&#xd;
                &quot;prm_amount&quot;: &quot;100&quot;,&#xd;
                &quot;pay_mode&quot;: &quot;MONTHLY&quot;,&#xd;
                &quot;appl_number&quot;: &quot;BAS123456&quot;,&#xd;
                &quot;product_code&quot;: &quot;BAS&quot;,&#xd;
                &quot;sum_assured&quot;: &quot;1000&quot;,&#xd;
                &quot;application&quot;: &quot;123456&quot;,&#xd;
                &quot;prm_pay_period&quot;: &quot;12&quot;,&#xd;
                &quot;benifit_term&quot;: &quot;12&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;insured&quot;: {&#xd;
            &quot;insured_name&quot;: &quot;Test ABC&quot;,&#xd;
            &quot;address_1&quot;: &quot;Add 1&quot;,&#xd;
            &quot;address_2&quot;: &quot;Add 2&quot;,&#xd;
            &quot;address_3&quot;: &quot;Add 3&quot;,&#xd;
            &quot;address_4&quot;: &quot;Add 4&quot;,&#xd;
            &quot;pin_code&quot;: &quot;7437341&quot;,&#xd;
            &quot;insured_age&quot;: &quot;30&quot;,&#xd;
            &quot;pan_no&quot;: &quot;u65857779&quot;,&#xd;
            &quot;date_of_birth&quot;: &quot;10-01-2000&quot;,&#xd;
            &quot;payer_name&quot;: &quot;Test ABCD&quot;&#xd;
        },&#xd;
        &quot;agent&quot;: {&#xd;
            &quot;agent_code&quot;: &quot;6473483&quot;,&#xd;
            &quot;branch_code&quot;: &quot;000&quot;,&#xd;
            &quot;ca_branch_code&quot;: &quot;000&quot;,&#xd;
            &quot;initiator_code&quot;: &quot;0&quot;,&#xd;
            &quot;ca_reference&quot;: &quot;0&quot;,&#xd;
            &quot;sales_person&quot;: &quot;6473483&quot;&#xd;
        },&#xd;
        &quot;other_info&quot;: {&#xd;
            &quot;dept_type&quot;: &quot;ALT&quot;,&#xd;
            &quot;is_form60_submit&quot;: &quot;Y&quot;,&#xd;
            &quot;coi&quot;: &quot;Y&quot;,&#xd;
            &quot;flag&quot;: &quot;1&quot;&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${Payment}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/payment</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00r_POST_PennyDropVerifyBankTrans" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&#xd;
    &quot;task&quot;: &quot;verifyAmount&quot;,&#xd;
&#xd;
    &quot;essentials&quot;: {&#xd;
&#xd;
        &quot;amount&quot;: &quot;1.01&quot;,&#xd;
&#xd;
        &quot;signzyId&quot;: &quot;kXdQPqPZr66vMa7Rc4HOXp5KaCT4dlvaq80numotNrSmZRFa2h59&quot;&#xd;
&#xd;
    }&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${PennyDropVerifyBankTrans}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/buy/pennyDropVerifyBankTrans</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00s_GET_PollingPaymentStatus" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="order_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">order_id</stringProp>
                  <stringProp name="Argument.value">ODR2e0e7c9e665</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${PollingPaymentStatus}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/buy/paymentStatusPolling?order_id=ODR2e0e7c9e665</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00t_POST_GetInitiatepayment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
    &quot;customerId&quot;: 18978,&#xd;
    &quot;finalCollectionDate&quot;: &quot;2023/12/31&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GetInitiatepayment}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/digishield/initiatepayment</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00u_POST_EnachStatusAPI" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;txnId&quot;: &quot;64f38e441beef800189eeb96&quot;,&#xd;
    &quot;amount&quot;: &quot;1.0&quot;,&#xd;
    &quot;email&quot;: &quot;kasukurthi545@gmail.com&quot;,&#xd;
    &quot;phone&quot;: &quot;8008331337&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${EnachStatusAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/digishield/enachstatus</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00v_POST_ckyc" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;SOURCE&quot;: &quot;4170703633&quot;,&#xd;
    &quot;ID_NO&quot;: &quot;BBOPG6601H&quot;,&#xd;
    &quot;ID_TYPE&quot;: &quot;C&quot;,&#xd;
    &quot;CKYC_NO&quot;: &quot;&quot;,&#xd;
    &quot;DOB&quot;: &quot;18-09-1993&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${ckyc}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/ckyc</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00w_POST_DeleteNomineeAPI" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 18978,&#xd;
    &quot;firstName&quot;: &quot;Alice&quot;,&#xd;
    &quot;lastName&quot; :&quot;Johnson&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${DeleteNomineeAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/deleteNominee</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00x_POST_PolicyBondAPI" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;productCode&quot;: &quot;&quot;,&#xd;
    &quot;channel_Type&quot;: &quot;WEBSITE&quot;,&#xd;
    &quot;polNo&quot;: &quot;003056713&quot;,&#xd;
    &quot;outputFormat&quot;: &quot;PDF&quot;,&#xd;
    &quot;source&quot;: &quot;4170703137&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${PolicyBondAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/digishield/policybonddoc</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00y_POST_GetAPPTrackerDetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;source&quot;: &quot;417070313337&quot;,&#xd;
    &quot;dob&quot;: &quot;01012014&quot;,&#xd;
    &quot;policy_id&quot;: &quot;&quot;,&#xd;
    &quot;mobile_no&quot;: &quot;&quot;,&#xd;
    &quot;email_id&quot;: &quot;&quot;,&#xd;
    &quot;application_id&quot;: &quot;BAS8456027&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GetAPPTrackerDetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/buy/getapptrackerdetails</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00z_GET_PDF" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${PDF}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/buy/proposalFormPdf/14160</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00aa_POST_pan" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;task&quot;: &quot;fetch&quot;,&#xd;
   &quot;essentials&quot;: {&#xd;
       &quot;number&quot;: &quot;BNZPM2501F&quot;&#xd;
     }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${pan}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/pan</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Life Insurance Sprint3 draft" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">D:\Performance Testing - ABC\Jmeter\Life Insurance\Life Insurance Sprint 3 PathURI_Draft.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames"></stringProp>
          </CSVDataSet>
          <hashTree/>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
            <collectionProp name="CookieManager.cookies"/>
            <boolProp name="CookieManager.clearEachIteration">true</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">application/json</stringProp>
                <stringProp name="Header.name">Content-Type</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">keep-alive</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">34.100.198.4</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
            <boolProp name="clearEachIteration">true</boolProp>
            <boolProp name="useExpires">true</boolProp>
            <boolProp name="CacheManager.controlledByThread">true</boolProp>
          </CacheManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00a_POST_UploadDocumentAPI" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${UploadDocumentAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/documents/upload</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="planid" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">planid</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;planid&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
              <stringProp name="TestPlan.comments">{&quot;planid&quot;:2640,&quot;</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="customerId" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">customerId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;,&quot;customerId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
              <stringProp name="TestPlan.comments">&quot;,&quot;customerId&quot;:62,&quot;</stringProp>
            </BoundaryExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00b_POST_PanIdentityAPI" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;email&quot;: &quot;kaustubh.pawar2-v@adityabirlacapital.com&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${PanIdentityAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/identity</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00c_POST_PanVerifyAPI" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
      &quot;service&quot;:&quot;Identity&quot;,&#xd;
      &quot;itemId&quot;:&quot;65127f1372703e0023589d3d&quot;,&#xd;
      &quot;task&quot;:&quot;verification&quot;,&#xd;
      &quot;accessToken&quot;:&quot;q0z4x6l665wmrpk67mf5s4oof71gq324&quot;,&#xd;
      &quot;essentials&quot;:{&#xd;
        &quot;name&quot;: &quot;D MANIKANDAN&quot;,&#xd;
        &quot;number&quot;: &quot;BNZPM2501F&quot;,&#xd;
        &quot;fuzzy&quot;: &quot;true&quot;,&#xd;
        &quot;panStatus&quot;: &quot;true&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${PanVerifyAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/pan</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00d_POST_DeleteDocumentAPI" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;guid&quot;: &quot;5451b777-312d-44c7-80a1-d09e3d54ca06&quot;,&#xd;
    &quot;transitionId&quot;: 23&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${DeleteDocumentAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/document/delete</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00e_GET_IFSCSearchAPI" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ifscCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">ifscCode</stringProp>
                  <stringProp name="Argument.value">HDFC0004215</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${IFSCSearchAPI}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/internal/getBankDetails?ifscCode=HDFC0004215</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00f_POST_FinalSubmitAPI" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="customerId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">customerId</stringProp>
                  <stringProp name="Argument.value">819</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${FinalSubmitAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/buy/addTransitionDetailsFinal?customerId=819</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="planid" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">planid</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;planid&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
              <stringProp name="TestPlan.comments">{&quot;planid&quot;:2640,&quot;</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="customerId" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">customerId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;,&quot;customerId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
              <stringProp name="TestPlan.comments">&quot;,&quot;customerId&quot;:62,&quot;</stringProp>
            </BoundaryExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00g_POST_Addon" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 266,&#xd;
    &quot;coverAmount&quot;: 20000000,&#xd;
    &quot;age&quot;: 30,&#xd;
    &quot;premiumMode&quot;:&quot;Month&quot;,&#xd;
    &quot;planOption&quot;:1,&#xd;
    &quot;paymentMode&quot;:&quot;Regular&quot;,&#xd;
    &quot;coverUptoAge&quot;:40&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${Addon}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/quote/getLITermAddOnInfo</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00h_POST_GetPlandetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 266,&#xd;
    &quot;coverAmount&quot;: 10000000,&#xd;
    &quot;age&quot;: 35,&#xd;
    &quot;premiumMode&quot;:&quot;year&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GetPlandetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/quote/getLiTermPlanDetails</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00i_POST_AddTransitionDetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 867,&#xd;
    &quot;journeyData&quot;: {&#xd;
        &quot;firstName&quot;: &quot;Sivasuriyan S&quot;,&#xd;
        &quot;lastName&quot;: &quot;Subbiramani&quot;,&#xd;
        &quot;dateOfBirth&quot;: &quot;1990-05-15&quot;,&#xd;
        &quot;email&quot;: &quot;sivasuriyan01.com&quot;,&#xd;
        &quot;gender&quot;: &quot;Male&quot;,&#xd;
        &quot;eduQualId&quot;: &quot;2&quot;,&#xd;
        &quot;occupationId&quot;: &quot;3&quot;,&#xd;
        &quot;spouseExistCover&quot;: &quot;1&quot;,&#xd;
        &quot;smokeOrTobacco&quot;: &quot;N&quot;,&#xd;
        &quot;annualIncome&quot;: &quot;75000&quot;,&#xd;
        &quot;liabilities&quot;: &quot;1&quot;,&#xd;
        &quot;liabilityAmount&quot;: &quot;0&quot;,&#xd;
        &quot;existingCover&quot;: &quot;1&quot;,&#xd;
        &quot;existingCoverAmt&quot;: &quot;50000&quot;&#xd;
    },&#xd;
    &quot;currentStep&quot;: 2,&#xd;
    &quot;finalStep&quot;: 90&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${AddTransitionDetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/buy/addTransistionDetails</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00j_GET_GetCoveruptoyears" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="customerId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">customerId</stringProp>
                  <stringProp name="Argument.value">266</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GetCoveruptoyears}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/quote/getcoveruptoyears?customerId=266</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00k_POST_GetRegularPayment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 266,&#xd;
    &quot;coverAmount&quot;: 20000000,&#xd;
    &quot;age&quot;: 24,&#xd;
    &quot;premiumMode&quot;:&quot;Month&quot;,&#xd;
    &quot;planOption&quot;:1,&#xd;
    &quot;paymentMode&quot;:&quot;Regular&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GetRegularPayment}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/quote/getregularpayment</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="planid" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">planid</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;planid&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
              <stringProp name="TestPlan.comments">{&quot;planid&quot;:2640,&quot;</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="customerId" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">customerId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;,&quot;customerId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
              <stringProp name="TestPlan.comments">&quot;,&quot;customerId&quot;:62,&quot;</stringProp>
            </BoundaryExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00l_GET_GetTermYears" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GetTermYears}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/quote/gettermyears</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00m_POST_GetQuoteForCoverAmountChange" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 18978,&#xd;
    &quot;coverAmount&quot;: 25000000,&#xd;
    &quot;age&quot;:25,&#xd;
    &quot;premiumMode&quot;:&quot;Year&quot;,&#xd;
    &quot;coverUptoAge&quot;:55&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GetQuoteForCoverAmountChange}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/quote/getQuoteForCoverAmtChange</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00n_POST_GetLimitedPayment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 266,&#xd;
    &quot;coverAmount&quot;: 20000000,&#xd;
    &quot;age&quot;: 24,&#xd;
    &quot;premiumMode&quot;:&quot;Month&quot;,&#xd;
    &quot;planOption&quot;:1,&#xd;
    &quot;paymentMode&quot;:&quot;Limited&quot;,&#xd;
    &quot;limitedPayYears&quot;:7&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GetLimitedPayment}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/quote/getlimitedpayment</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00o_GET_GETPlanSummary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GETPlanSummary}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/quote/plansummary?customerId=457</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00p_GET_GETTransitionDetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GETTransitionDetails}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/buy/getTransistionDetails?customerId=819</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00q_GET_GetByCustomeID" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GetByCustomeID}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/buy/getTransistionDetails?customerId=819</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00r_POST_DownloadIllustrationPDF" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 266,&#xd;
    &quot;coverAmount&quot;: 21000000,&#xd;
    &quot;age&quot;: 30,&#xd;
    &quot;premiumMode&quot;: &quot;Year&quot;,&#xd;
    &quot;planOption&quot;: 1,&#xd;
    &quot;paymentMode&quot;: &quot;Limited&quot;,&#xd;
    &quot;coverUptoAge&quot;: 40,&#xd;
    &quot;limitedPayYears&quot;: 5,&#xd;
    &quot;addOns&quot;: [&#xd;
        {&#xd;
            &quot;addOnId&quot;: 1,&#xd;
            &quot;addOnCoverAmount&quot;: 75000&#xd;
        },&#xd;
        {&#xd;
            &quot;addOnId&quot;: 2,&#xd;
            &quot;addOnCoverAmount&quot;: 150000&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${DownloadIllustrationPDF}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/quote/illustrationPdf</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00s_POST_DeleteNomineeAPI" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 720,&#xd;
    &quot;firstName&quot;: &quot;Alice&quot;,&#xd;
    &quot;lastName&quot; :&quot;Johnson&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${DeleteNomineeAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/deleteNominee</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="planid" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">planid</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;planid&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
              <stringProp name="TestPlan.comments">{&quot;planid&quot;:2640,&quot;</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="customerId" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">customerId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;,&quot;customerId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
              <stringProp name="TestPlan.comments">&quot;,&quot;customerId&quot;:62,&quot;</stringProp>
            </BoundaryExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00t_POST_GetQuoteInfoAPI" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 18978,&#xd;
    &quot;annualIncome&quot;: 2000000,&#xd;
    &quot;liabilityAmount&quot;: 1400,&#xd;
    &quot;existingCoverAmt&quot;: 2000,&#xd;
    &quot;age&quot;:25,&#xd;
    &quot;premiumMode&quot;:&quot;Year&quot;,&#xd;
    &quot;coverUptoAge&quot;:55&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GetQuoteInfoAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/quote/getLiTermQuoteInfo</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00u_POST_PennyDropVerifyBankTrans" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&#xd;
    &quot;task&quot;: &quot;verifyAmount&quot;,&#xd;
&#xd;
    &quot;essentials&quot;: {&#xd;
&#xd;
        &quot;amount&quot;: &quot;1.01&quot;,&#xd;
&#xd;
        &quot;signzyId&quot;: &quot;kXdQPqPZr66vMa7Rc4HOXp5KaCT4dlvaq80numotNrSmZRFa2h59&quot;&#xd;
&#xd;
    }&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${PennyDropVerifyBankTrans}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/buy/pennyDropVerifyBankTrans</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00v_POST_GetAPPTrackerDetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;source&quot;: &quot;417070313337&quot;,&#xd;
    &quot;dob&quot;: &quot;01012014&quot;,&#xd;
    &quot;policy_id&quot;: &quot;&quot;,&#xd;
    &quot;mobile_no&quot;: &quot;&quot;,&#xd;
    &quot;email_id&quot;: &quot;&quot;,&#xd;
    &quot;application_id&quot;: &quot;BAS8456027&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GetAPPTrackerDetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/getapptrackerdetails</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00w_POST_DigishieldQuoteDownloadPDF" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;firstName&quot;: &quot;Saravanan&quot;,&#xd;
    &quot;lastName&quot;: &quot;Ramesh&quot;,&#xd;
    &quot;sumAssured&quot;: &quot;20000000&quot;,&#xd;
    &quot;policyTerm&quot;: &quot;10&quot;,&#xd;
    &quot;age&quot;: &quot;26&quot;,&#xd;
    &quot;planOption&quot;: &quot;Option 10&quot;,&#xd;
    &quot;includeRiderAddons&quot;:true&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${DigishieldQuoteDownloadPDF}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/digishield/quotedownloadpdf</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="planid" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">planid</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;planid&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
              <stringProp name="TestPlan.comments">{&quot;planid&quot;:2640,&quot;</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="customerId" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">customerId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;,&quot;customerId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
              <stringProp name="TestPlan.comments">&quot;,&quot;customerId&quot;:62,&quot;</stringProp>
            </BoundaryExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00x_GET_GetAuthToken" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;firstName&quot;: &quot;Saravanan&quot;,&#xd;
    &quot;lastName&quot;: &quot;Ramesh&quot;,&#xd;
    &quot;sumAssured&quot;: &quot;20000000&quot;,&#xd;
    &quot;policyTerm&quot;: &quot;10&quot;,&#xd;
    &quot;age&quot;: &quot;26&quot;,&#xd;
    &quot;planOption&quot;: &quot;Option 10&quot;,&#xd;
    &quot;includeRiderAddons&quot;:true&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GetAuthToken}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/digishield/authtoken</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00y_POST_DigishieldRiderDetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;firstName&quot;: &quot;Saravanan&quot;,&#xd;
    &quot;lastName&quot;: &quot;Ramesh&quot;,&#xd;
    &quot;sumAssured&quot;: &quot;20000000&quot;,&#xd;
    &quot;policyTerm&quot;: &quot;10&quot;,&#xd;
    &quot;age&quot;: &quot;26&quot;,&#xd;
    &quot;planOption&quot;: &quot;Option 10&quot;,&#xd;
    &quot;premiumMode&quot;:&quot;month&quot;,&#xd;
	&quot;premiumPayingTermYears&quot;:&quot;7&quot;,&#xd;
	&quot;paymentMode&quot;:&quot;Regular&quot;,&#xd;
    &quot;includeRiderAddons&quot;:true&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${DigishieldRiderDetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/digishield/riderdetails</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00z_POST_DigishieldPlanQuote" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;firstName&quot;: &quot;Saravanan&quot;,&#xd;
    &quot;lastName&quot;: &quot;Ramesh&quot;,&#xd;
    &quot;sumAssured&quot;: &quot;20000000&quot;,&#xd;
    &quot;policyTerm&quot;: &quot;17&quot;,&#xd;
    &quot;age&quot;: &quot;26&quot;,&#xd;
    &quot;planOption&quot;: &quot;Option 1&quot;,&#xd;
    &quot;premiumMode&quot;:&quot;month&quot;,&#xd;
	&quot;premiumPayingTermYears&quot;:&quot;7&quot;,&#xd;
	&quot;paymentMode&quot;:&quot;Limited&quot;,&#xd;
    &quot;includeRiderAddons&quot;:false&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${DigishieldPlanQuote}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/digishield/planquote</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00aa_POST_GetInitiatepayment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
    &quot;customerId&quot;: 266,&#xd;
    &quot;finalCollectionDate&quot;: &quot;2023/12/31&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GetInitiatepayment}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/digishield/initiatepayment</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00ab_POST_EnachStatusAPI" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;txnId&quot;: &quot;64f38e441beef800189eeb96&quot;,&#xd;
    &quot;amount&quot;: &quot;1.0&quot;,&#xd;
    &quot;email&quot;: &quot;kasukurthi545@gmail.com&quot;,&#xd;
    &quot;phone&quot;: &quot;8008331337&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${EnachStatusAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/digishield/enachstatus</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00ac_GET_PollingPaymentStatus" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="order_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">order_id</stringProp>
                  <stringProp name="Argument.value">ODR2e0e7c9e665</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${PollingPaymentStatus}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/buy/paymentStatusPolling?order_id=ODR2e0e7c9e665</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00ad_POST_PolicyBondAPI" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;productCode&quot;: &quot;&quot;,&#xd;
    &quot;channel_Type&quot;: &quot;WEBSITE&quot;,&#xd;
    &quot;polNo&quot;: &quot;003056713&quot;,&#xd;
    &quot;outputFormat&quot;: &quot;PDF&quot;,&#xd;
    &quot;source&quot;: &quot;4170703137&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${PolicyBondAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/digishield/policybonddoc</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00ae_POST_TermPlanPayment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;payment_data&quot;: {&#xd;
        &quot;payment_type&quot;: &quot;INITIAL&quot;,&#xd;
        &quot;return_url&quot;: &quot;https://liuatpayments.adityabirlacapital.com/resultpage&quot;,&#xd;
        &quot;request_id&quot;: 1693908319001,&#xd;
        &quot;request_date&quot;: &quot;17/09/2023 15:09:19&quot;,&#xd;
        &quot;lob_id&quot;: &quot;ABSLI&quot;,&#xd;
        &quot;payment_source_id&quot;: &quot;ABCD_Initial_NB&quot;,&#xd;
        &quot;amount&quot;: 9235,&#xd;
        &quot;product_type&quot;: &quot;APPLICATION&quot;,&#xd;
        &quot;product_id&quot;: &quot;BAS123456&quot;,&#xd;
        &quot;customer_name&quot;: &quot;ABSLI TEST5811&quot;,&#xd;
        &quot;customer_email&quot;: &quot;debraj.das@techbulls.com&quot;,&#xd;
        &quot;customer_phone&quot;: &quot;8976379937&quot;,&#xd;
        &quot;customer_id&quot;: &quot;&quot;,&#xd;
        &quot;udf1&quot;: &quot;ABCD_Initial_NB&quot;,&#xd;
        &quot;udf2&quot;: &quot;002650&quot;,&#xd;
        &quot;udf3&quot;: &quot;&quot;,&#xd;
        &quot;udf4&quot;: &quot;&quot;,&#xd;
        &quot;udf5&quot;: &quot;&quot;,&#xd;
        &quot;udf6&quot;: &quot;&quot;,&#xd;
        &quot;udf7&quot;: &quot;&quot;,&#xd;
        &quot;udf8&quot;: &quot;&quot;,&#xd;
        &quot;udf9&quot;: &quot;&quot;,&#xd;
        &quot;udf10&quot;: &quot;&quot;&#xd;
    },&#xd;
    &quot;app_data&quot;: {&#xd;
        &quot;application&quot;: [&#xd;
            {&#xd;
                &quot;appl_rec_date&quot;: &quot;10-01-2010&quot;,&#xd;
                &quot;prm_amount&quot;: &quot;100&quot;,&#xd;
                &quot;pay_mode&quot;: &quot;MONTHLY&quot;,&#xd;
                &quot;appl_number&quot;: &quot;BAS123456&quot;,&#xd;
                &quot;product_code&quot;: &quot;BAS&quot;,&#xd;
                &quot;sum_assured&quot;: &quot;1000&quot;,&#xd;
                &quot;application&quot;: &quot;123456&quot;,&#xd;
                &quot;prm_pay_period&quot;: &quot;12&quot;,&#xd;
                &quot;benifit_term&quot;: &quot;12&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;insured&quot;: {&#xd;
            &quot;insured_name&quot;: &quot;Test ABC&quot;,&#xd;
            &quot;address_1&quot;: &quot;Add 1&quot;,&#xd;
            &quot;address_2&quot;: &quot;Add 2&quot;,&#xd;
            &quot;address_3&quot;: &quot;Add 3&quot;,&#xd;
            &quot;address_4&quot;: &quot;Add 4&quot;,&#xd;
            &quot;pin_code&quot;: &quot;7437341&quot;,&#xd;
            &quot;insured_age&quot;: &quot;30&quot;,&#xd;
            &quot;pan_no&quot;: &quot;u65857779&quot;,&#xd;
            &quot;date_of_birth&quot;: &quot;10-01-2000&quot;,&#xd;
            &quot;payer_name&quot;: &quot;Test ABCD&quot;&#xd;
        },&#xd;
        &quot;agent&quot;: {&#xd;
            &quot;agent_code&quot;: &quot;6473483&quot;,&#xd;
            &quot;branch_code&quot;: &quot;000&quot;,&#xd;
            &quot;ca_branch_code&quot;: &quot;000&quot;,&#xd;
            &quot;initiator_code&quot;: &quot;0&quot;,&#xd;
            &quot;ca_reference&quot;: &quot;0&quot;,&#xd;
            &quot;sales_person&quot;: &quot;6473483&quot;&#xd;
        },&#xd;
        &quot;other_info&quot;: {&#xd;
            &quot;dept_type&quot;: &quot;ALT&quot;,&#xd;
            &quot;is_form60_submit&quot;: &quot;Y&quot;,&#xd;
            &quot;coi&quot;: &quot;Y&quot;,&#xd;
            &quot;flag&quot;: &quot;1&quot;&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${TermPlanPayment}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/payment</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00af_GET_GetPaymentYears" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GetPaymentYears}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/quote/gettermyears</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\Endurance\SummaryReport\SteppingSummaryTestresult11102023.csv</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Error Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\Endurance\SummaryReport\ErrorSteppingSummaryTestresult11102023.csv</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.jmxmon.JMXMonCollector guiclass="kg.apc.jmeter.vizualizers.JMXMonGui" testclass="kg.apc.jmeter.jmxmon.JMXMonCollector" testname="jp@gc - JMXMon Samples Collector" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="samplers">
            <collectionProp name="-1929738760">
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="1237">false</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.jmxmon.JMXMonCollector>
        <hashTree/>
        <SmtpSampler guiclass="SmtpSamplerGui" testclass="SmtpSampler" testname="SMTP Sampler" enabled="false">
          <stringProp name="SMTPSampler.server"></stringProp>
          <stringProp name="SMTPSampler.serverPort"></stringProp>
          <stringProp name="SMTPSampler.serverConnectionTimeout">5000</stringProp>
          <stringProp name="SMTPSampler.mailFrom">vinothkumar.kamal@gavstech.com </stringProp>
          <stringProp name="SMTPSampler.replyTo"></stringProp>
          <stringProp name="SMTPSampler.receiverTo">vinothkumar.kamal@gavstech.com</stringProp>
          <stringProp name="SMTPSampler.receiverCC"></stringProp>
          <stringProp name="SMTPSampler.receiverBCC"></stringProp>
          <stringProp name="SMTPSampler.subject">Performance Test</stringProp>
          <stringProp name="SMTPSampler.suppressSubject">false</stringProp>
          <stringProp name="SMTPSampler.include_timestamp">false</stringProp>
          <stringProp name="SMTPSampler.message"></stringProp>
          <stringProp name="SMTPSampler.plainBody">false</stringProp>
          <stringProp name="SMTPSampler.attachFile"></stringProp>
          <stringProp name="SMTPSampler.useSSL">false</stringProp>
          <stringProp name="SMTPSampler.useStartTLS">true</stringProp>
          <stringProp name="SMTPSampler.trustAllCerts">false</stringProp>
          <stringProp name="SMTPSampler.enforceStartTLS">false</stringProp>
          <stringProp name="SMTPSampler.useLocalTrustStore">false</stringProp>
          <stringProp name="SMTPSampler.trustStoreToUse"></stringProp>
          <stringProp name="SMTPSampler.tlsProtocols"></stringProp>
          <boolProp name="SMTPSampler.use_eml">false</boolProp>
          <stringProp name="SMTPSampler.emlMessageToSend"></stringProp>
          <stringProp name="SMTPSampler.useAuth">true</stringProp>
          <stringProp name="SMTPSampler.password">Shadow@69</stringProp>
          <stringProp name="SMTPSampler.username">vinothkumar.kamal@gavstech.com</stringProp>
          <stringProp name="SMTPSampler.messageSizeStatistics">false</stringProp>
          <stringProp name="SMTPSampler.enableDebug">false</stringProp>
          <collectionProp name="SMTPSampler.headerFields"/>
        </SmtpSampler>
        <hashTree/>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="false">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery"></stringProp>
          <stringProp name="connectionAge">5000</stringProp>
          <stringProp name="connectionProperties"></stringProp>
          <stringProp name="dataSource"></stringProp>
          <stringProp name="dbUrl"></stringProp>
          <stringProp name="driver"></stringProp>
          <stringProp name="initQuery"></stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password"></stringProp>
          <stringProp name="poolMax">0</stringProp>
          <boolProp name="preinit">false</boolProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username"></stringProp>
        </JDBCDataSource>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="false">
          <stringProp name="dataSource"></stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query"></stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="false">
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script"></stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Sampler>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="jp@gc - Ultimate Thread Group" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-333485492">
            <stringProp name="49">1</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="49">1</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="1567">10</stringProp>
          </collectionProp>
          <collectionProp name="-970489183">
            <stringProp name="53430">600</stringProp>
            <stringProp name="1567005">3000</stringProp>
            <stringProp name="1598">20</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="1567">10</stringProp>
          </collectionProp>
          <collectionProp name="-1568951135">
            <stringProp name="49">1</stringProp>
            <stringProp name="1600640">4400</stringProp>
            <stringProp name="49">1</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="313507642">
            <stringProp name="51508">400</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="1598">20</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1035999886">
            <stringProp name="49">1</stringProp>
            <stringProp name="1630431">5400</stringProp>
            <stringProp name="49">1</stringProp>
            <stringProp name="48873">180</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-13775998">
            <stringProp name="48625">100</stringProp>
            <stringProp name="1745751">9000</stringProp>
            <stringProp name="1598">20</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1006345515">
            <stringProp name="49">1</stringProp>
            <stringProp name="46737849">10800</stringProp>
            <stringProp name="49">1</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="2034444892">
            <stringProp name="52469">500</stringProp>
            <stringProp name="46795509">12600</stringProp>
            <stringProp name="1598">20</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <intProp name="LoopController.loops">-1</intProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login_Activation ${CounterValue}" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
            <collectionProp name="CookieManager.cookies"/>
            <boolProp name="CookieManager.clearEachIteration">true</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
          <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
            <boolProp name="clearEachIteration">true</boolProp>
            <boolProp name="useExpires">false</boolProp>
            <boolProp name="CacheManager.controlledByThread">false</boolProp>
          </CacheManager>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">CounterNumber</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login_01_00b_Login_POST_Verify_OTP ${CounterNumber}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;mobileNumber&quot;: &quot;${randomNumber}&quot;,&#xd;
    &quot;otp&quot;: &quot;${otp}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-login/adityabirla/api/v1/login/otp/verification</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-login/adityabirla/api/v1/login/otp/verification     ${__Random(1111111111,9999999999,)}</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${DurationAssertion}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Responde code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login_01_00c_POST_Save_Customer_info ${CounterNumber}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&#xd;
    &quot;mobileNumber&quot;: &quot;${randomNumber}&quot;,&#xd;
&#xd;
    &quot;firstName&quot;: &quot;niteen&quot;,&#xd;
&#xd;
    &quot;lastName&quot;: &quot;singh&quot;,&#xd;
&#xd;
    &quot;dateOfBirth&quot;: &quot;2023-06-24T08:58:39.619&quot;,&#xd;
&#xd;
    &quot;kycCoustomer&quot;: [&#xd;
&#xd;
        {&#xd;
&#xd;
            &quot;permanentAddress&quot;: &quot;pune&quot;,&#xd;
&#xd;
            &quot;digilockerStatus&quot;: &quot;no&quot;,&#xd;
&#xd;
            &quot;digilockerCreatedDate&quot;: &quot;&quot;,&#xd;
&#xd;
            &quot;videoKYC&quot;: &quot;yes&quot;,&#xd;
&#xd;
            &quot;lastFetchedDT&quot;: &quot;&quot;&#xd;
&#xd;
        }&#xd;
&#xd;
    ],&#xd;
&#xd;
    &quot;address&quot;: [&#xd;
&#xd;
        {&#xd;
&#xd;
            &quot;addressLineOne&quot;: &quot;banglore&quot;,&#xd;
&#xd;
            &quot;addressLineTwo&quot;: &quot;chadnichowk&quot;,&#xd;
&#xd;
            &quot;pin&quot;: &quot;1234&quot;,&#xd;
&#xd;
            &quot;city&quot;: &quot;banglore&quot;,&#xd;
&#xd;
            &quot;state&quot;: &quot;karnatka&quot;,&#xd;
&#xd;
            &quot;typeofaddress&quot;: &quot;Home&quot;,&#xd;
&#xd;
            &quot;landmark&quot;:&quot;abc&quot;&#xd;
&#xd;
        }&#xd;
&#xd;
    ],&#xd;
&#xd;
    &quot;professionalDetails&quot;: {&#xd;
&#xd;
        &quot;employmentType&quot;: &quot;salary&quot;,&#xd;
&#xd;
        &quot;companyName&quot;: &quot;pune&quot;,&#xd;
&#xd;
        &quot;annualIncome&quot;: 3,&#xd;
&#xd;
        &quot;totalWorkExperience&quot;: 4,&#xd;
&#xd;
        &quot;createdBy&quot;: &quot;Niteen&quot;,&#xd;
&#xd;
        &quot;createdDate&quot;: &quot;&quot;,&#xd;
&#xd;
        &quot;modifiedBy&quot;: &quot;&quot;,&#xd;
&#xd;
        &quot;modifiedDate&quot;: &quot;&quot;&#xd;
&#xd;
    },&#xd;
&#xd;
    &quot;loanType&quot;: &quot;PL&quot;,&#xd;
&#xd;
    &quot;panNumber&quot;: &quot;sadadad&quot;,&#xd;
&#xd;
    &quot;adharNumber&quot;: &quot;876537373&quot;,&#xd;
&#xd;
    &quot;email&quot;: &quot;niteensingh@gmail.com&quot;,&#xd;
&#xd;
    &quot;gender&quot;: &quot;Male&quot;,&#xd;
&#xd;
    &quot;nriCustomer&quot;: &quot;&quot;,&#xd;
&#xd;
    &quot;createdby&quot;: &quot;&quot;,&#xd;
&#xd;
    &quot;createddate&quot;: &quot;2023-06-24T08:58:39.619&quot;,&#xd;
&#xd;
    &quot;modifiedBy&quot;: &quot;&quot;,&#xd;
&#xd;
    &quot;modifieddate&quot;: &quot;2023-06-24T08:58:39.619&quot;,&#xd;
&#xd;
    &quot;active&quot;: &quot;&quot;,&#xd;
&#xd;
    &quot;enableDHA&quot;: &quot;y&quot;&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-customer/oneabc/adityabirla/api/v1/customer/info/customer</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-customer/oneabc/adityabirla/api/v1/customer/info/customer</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="id" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">id</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;id&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="TestPlan.comments">&quot;id&quot;:7208,&quot;      &quot;id&quot;:7230,&quot;</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${DurationAssertion}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1186383599">${ResponseCode201}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Responde code is not matching with expected 201</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login_01_00a_GET_OTP ${CounterNumber}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">abc-login/adityabirla/api/v1/login/otp?mobileNumber=${randomNumber}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-login/adityabirla/api/v1/login/otp?mobileNumber=1234567890
${__Random(5,var)}   /search?q=${__chooseRandom(1111,2222,iter)}  ${__Random(000000100,999999999,)}</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.text.SimpleDateFormat
import java.util.Date

def now = new Date()
def sdf = new SimpleDateFormat(&quot;HHmmss&quot;)
def rand = Math.abs(new Random().nextInt() % 10000L)
def result = sdf.format(now) + rand.toString().padLeft(10 - sdf.format(now).length(), &apos;0&apos;)
vars.put(&quot;randomNumber&quot;, result)

//vars.put(&quot;randomNumber&quot;, String.format(&quot;%010d&quot;, Math.abs(new Random().nextLong() % 10000000000L)));



</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="otp" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">otp</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;,&quot;otp&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
              <stringProp name="TestPlan.comments">&quot;,&quot;otp&quot;:&quot;123456&quot;</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${DurationAssertion}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Responde code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login_01_00d_POST_Set_MPIN ${CounterNumber} " enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: &quot;${id}&quot;,&#xd;
	&quot;mpin&quot;: &quot;${__Random(1001,9999,)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-login/adityabirla/api/v1/login/mpin</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-login/adityabirla/api/v1/login/mpin     ${__Random(0001,9999,)}</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${DurationAssertion}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1186383599">${ResponseCode201}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Responde code is not matching with expected 201</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login_01_00e_PATCH_Forgot_MPIN ${CounterNumber}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;mobileNumber&quot;: &quot;${randomNumber}&quot;,&#xd;
    &quot;mpin&quot;: &quot;5676&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-login/adityabirla/api/v1/login/mpin/update</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-login/adityabirla/api/v1/login/mpin/update</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${DurationAssertion}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1186383599">${ResponseCode201}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Responde code is not matching with expected 201</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login_01_00f_GET_Get_Customer_info ${CounterNumber}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;customerId&quot;:&quot;${id}&quot;,&#xd;
&quot;mobileNo&quot;:&quot;${randomNumber}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-customer/oneabc/adityabirla/api/v1/customer/info/customer?mobileNumber=${randomNumber}&amp;customerId= ${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-customer/oneabc/adityabirla/api/v1/customer/info/customer?mobileNumber=8888888881&amp;customerId=
http://34.93.88.9:8080/abc-customer/oneabc/adityabirla/api/v1/customer/info/customer </stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">C:\Users\harishraj.s\Desktop\UAT_JMeter\Login\LoginResult.csv</stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Cmots ${CounterValue}" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="VasCmotsPathURI" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">C:/Endurance/Cmots/CmotsPathURI.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="TestPlan.comments">PathURI</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">CounterValue</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="stockReturns" elementType="Argument">
                <stringProp name="Argument.value">20558</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.name">stockReturns</stringProp>
              </elementProp>
              <elementProp name="Pickright_Investpack_servername" elementType="Argument">
                <stringProp name="Argument.name">Pickright_Investpack_servername</stringProp>
                <stringProp name="Argument.value">stage-web.pickright.co.in</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ServerNameCMOT" elementType="Argument">
                <stringProp name="Argument.name">ServerNameCMOT</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">abmportfolioapi.uat.cmots.com</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00a_GET_Market_Indices_BSE ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${Market_Indices_BSE}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/indices/bse</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00b_GET_Market_Indices_NSE ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${Market_Indices_NSE}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/indices/nse</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00c_GET_PortfoiloPerfomers ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${PortfoiloPerfomers}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/portfolioperformance/1009275/1/equity/-</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00d_GET_ForthComingIPOs ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${ForthComingIPOs}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00e_GET_OpenIPOs ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${OpenIPOs}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/openissues/nse/-/100</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00f_GET_ClosedIPOs ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${ClosedIPOs}${__Random(1,100,)}/-/-</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00g_GET_52_WeekHighNSE ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${WeekHighNSE}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/indices/bse</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00h_GET_52_WeekHighBSE ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${WeekHighBSE}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/FiftyTwoWeekHigh/bse/-/1</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00i_GET_52_WeekLowNSE ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${WeekLowNSE}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/FiftyTwoWeeklow/nse/-/20</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00j_GET_52_WeekLowBSE ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${WeekLowBSE}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/FiftyTwoWeeklow/bse/-/20</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00k_GET_TrendingStocksNSE ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${TrendingStocksNSE}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/trendingstocks/nse/u/20</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00l_GET_TrendingStocksBSE ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${TrendingStocksBSE}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/trendingstocks/bse/u</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00m_GET_MostActiveBSE ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${MostActiveBSE}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/MostActiveToppers/bse/-/10</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00n_GET_MostActiveNSE ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${MostActiveNSE}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/MostActiveToppers/nse/-/10</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00o_GET_NiftyGainers ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${NiftyGainers}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/Gainers/NSE/NIFTY/Week/5</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00p_GET_NiftyLosers ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${NiftyLosers}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/losers/nse/NIFTY/Week/10</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00q_GET_StockReturnsBSE ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${StockReturnsBSE}/1y/${stockReturns}/bse</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/stockreturns/5400/1y/20558/bse</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00r_GET_StockReturnsNSE ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${StockReturnsNSE}/1y/${stockReturns}/nse</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/stockreturns/5400/1y/20558/nse</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00s_GET_Pickright_Investpack ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${Pickright_Investpack_servername}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${Pickright_Investpack}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">https://stage-web.pickright.co.in/business_service/investpacks</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer QUJNTDpBQk1M</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00t_GET_TopLosersBSE ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${TopLosersBSE}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/losers/BSE/BSE_sensex/day/5</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cmots_11_00u_GET_GainersBSE ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCMOT}</stringProp>
            <stringProp name="HTTPSampler.path">${GainersBSE}${__Random(1,100,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://abmportfolioapi.uat.cmots.com/api/Gainers/BSE/BSE_sensex/day/5</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="HomeLoan ${CounterValue}" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <stringProp name="TestPlan.comments">${__Random(111,999,)}</stringProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="TF_1" elementType="Argument">
                <stringProp name="Argument.name">TF_1</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TF_2" elementType="Argument">
                <stringProp name="Argument.name">TF_2</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ResponseCode" elementType="Argument">
                <stringProp name="Argument.name">ResponseCode</stringProp>
                <stringProp name="Argument.value">201</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="HomeLoanePathURI" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">C:/Endurance/HomeLoan/HomeLoanPathURI.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="TestPlan.comments">PathURI</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
            <collectionProp name="CookieManager.cookies"/>
            <boolProp name="CookieManager.clearEachIteration">true</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
          <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
            <boolProp name="clearEachIteration">true</boolProp>
            <boolProp name="useExpires">true</boolProp>
            <boolProp name="CacheManager.controlledByThread">false</boolProp>
          </CacheManager>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">CounterValue</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomeLoan_09_00a_POST_HomeLoan${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">	{       &quot;customerId&quot;:1685${__Random(1,3,)},&#xd;
	        &quot;firstName&quot;: &quot;Perumal&quot;,&#xd;
	        &quot;lastName&quot;: &quot;&quot;,&#xd;
	        &quot;dateOfBirth&quot;: &quot;&quot;,&#xd;
	        &quot;gender&quot;: &quot;M&quot;,&#xd;
	        &quot;mobileNumber&quot;: &quot;${__Random(65000,99999,)}86390&quot;,&#xd;
	        &quot;emailAddress&quot;: &quot;perumal.p@gavstech.com&quot;,&#xd;
	        &quot;panNumber&quot;: &quot;ABCDE1111H&quot;,&#xd;
	        &quot;aadhaarNumber&quot;: &quot;1234123412341234&quot;,&#xd;
	        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
	        &quot;createdDate&quot;: null,&#xd;
	        &quot;modifiedBy&quot;: &quot;Perumal&quot;,&#xd;
	        &quot;modifiedDate&quot;: null,&#xd;
	        &quot;enableDha&quot;:&quot;Y&quot;,&#xd;
	        &quot;nriCustomer&quot;:${__V(TF_${__Random(1,2,)})},&#xd;
	        &quot;status&quot;: ${__V(TF_${__Random(1,2,)})},    &#xd;
	    &quot;professionalDetails&quot;: [{    &#xd;
	        &quot;employmentType&quot;: &quot;Salaried&quot;,&#xd;
	        &quot;employerId&quot;: &quot;GAVS&quot;,&#xd;
	        &quot;annualIncome&quot;: &quot;1&quot;,&#xd;
	        &quot;totalWorkExperience&quot;: 1,&#xd;
	        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
	        &quot;createdDate&quot;: null,&#xd;
	        &quot;modifiedBy&quot;: null,&#xd;
	        &quot;modifiedDate&quot;: null,&#xd;
	        &quot;status&quot;: ${__V(TF_${__Random(1,2,)})}&#xd;
	    }],&#xd;
	    &quot;propertyDetails&quot;:[ {&#xd;
	        &quot;propertyLocation&quot;: &quot;600059&quot;,&#xd;
	        &quot;propertyValue&quot;: &quot;2&quot;,&#xd;
	        &quot;loanAmount&quot;: &quot;{       &quot;customerId&quot;:1685${__Random(1,3,)},&#xd;
        &quot;firstName&quot;: &quot;Perumal&quot;,&#xd;
        &quot;lastName&quot;: &quot;&quot;,&#xd;
        &quot;dateOfBirth&quot;: &quot;&quot;,&#xd;
        &quot;gender&quot;: &quot;M&quot;,&#xd;
        &quot;mobileNumber&quot;: &quot;${__Random(65000,99999,)}86390&quot;,&#xd;
        &quot;emailAddress&quot;: &quot;perumal.p@gavstech.com&quot;,&#xd;
        &quot;panNumber&quot;: &quot;ABCDE1111H&quot;,&#xd;
        &quot;aadhaarNumber&quot;: &quot;1234123412341234&quot;,&#xd;
        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;createdDate&quot;: null,&#xd;
        &quot;modifiedBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;modifiedDate&quot;: null,&#xd;
        &quot;enableDha&quot;:&quot;Y&quot;,&#xd;
        &quot;nriCustomer&quot;:${__V(TF_${__Random(1,2,)})},&#xd;
        &quot;status&quot;: ${__V(TF_${__Random(1,2,)})},    &#xd;
    &quot;professionalDetails&quot;: [{    &#xd;
        &quot;employmentType&quot;: &quot;Salaried&quot;,&#xd;
        &quot;employerId&quot;: &quot;GAVS&quot;,&#xd;
        &quot;annualIncome&quot;: &quot;1&quot;,&#xd;
        &quot;totalWorkExperience&quot;: 1,&#xd;
        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;createdDate&quot;: null,&#xd;
        &quot;modifiedBy&quot;: null,&#xd;
        &quot;modifiedDate&quot;: null,&#xd;
        &quot;status&quot;: ${__V(TF_${__Random(1,2,)})}&#xd;
    }],&#xd;
    &quot;propertyDetails&quot;:[ {&#xd;
        &quot;propertyLocation&quot;: &quot;600059&quot;,&#xd;
        &quot;propertyValue&quot;: &quot;2&quot;,&#xd;
        &quot;loanAmount&quot;: &quot;1000&quot;, &#xd;
        &quot;loanType&quot;:&quot;&quot;,       &#xd;
        &quot;foreclosureAmount&quot;:&quot;1.00&quot;,&#xd;
        &quot;foundHome&quot;: ${__V(TF_${__Random(1,2,)})},&#xd;
        &quot;financialCoApplicant&quot;: ${__V(TF_${__Random(1,2,)})},&#xd;
        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;createdDate&quot;: &quot;2023-07-14T22:58:39.619&quot;,&#xd;
        &quot;modifiedBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;modifiedDate&quot;: &quot;2023-07-14T22:58:39.619&quot;,&#xd;
        &quot;status&quot;: ${__V(TF_${__Random(1,2,)})}&#xd;
    }]&#xd;
}&#xd;
1000&quot;, &#xd;
	        &quot;loanType&quot;:&quot;&quot;,       &#xd;
	        &quot;foreclosureAmount&quot;:&quot;1.00&quot;,&#xd;
	        &quot;foundHome&quot;: ${__V(TF_${__Random(1,2,)})},&#xd;
	        &quot;financialCoApplicant&quot;: ${__V(TF_${__Random(1,2,)})},&#xd;
	        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
	        &quot;createdDate&quot;: &quot;2023-07-14T22:58:39.619&quot;,&#xd;
	        &quot;modifiedBy&quot;: &quot;Perumal&quot;,&#xd;
	        &quot;modifiedDate&quot;: &quot;2023-07-14T22:58:39.619&quot;,&#xd;
	        &quot;status&quot;: ${__V(TF_${__Random(1,2,)})}&#xd;
	    }]&#xd;
	}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${HomeLoan}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/homeloan/api/v1/home-loan   2023-07-14T22:58:39.619  ${__time(dd/MM/yyyy&apos;T&apos;HH:mm:ss.SSSZ)}
</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomeLoan_09_00b_POST_top-up${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{       &quot;customerId&quot;:1685${__Random(1,3,)},&#xd;
        &quot;firstName&quot;: &quot;Perumal&quot;,&#xd;
        &quot;lastName&quot;: &quot;&quot;,&#xd;
        &quot;dateOfBirth&quot;: &quot;&quot;,&#xd;
        &quot;gender&quot;: &quot;M&quot;,&#xd;
        &quot;mobileNumber&quot;: &quot;${__Random(65000,99999,)}86390&quot;,&#xd;
        &quot;emailAddress&quot;: &quot;perumal.p@gavstech.com&quot;,&#xd;
        &quot;panNumber&quot;: &quot;ABCDE1111L&quot;,&#xd;
        &quot;aadhaarNumber&quot;: &quot;1234123412341234&quot;,&#xd;
        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;createdDate&quot;: null,&#xd;
        &quot;modifiedBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;modifiedDate&quot;: null,&#xd;
        &quot;enableDha&quot;:&quot;Y&quot;,&#xd;
        &quot;nriCustomer&quot;:${__V(TF_${__Random(1,2,)})},&#xd;
        &quot;status&quot;: ${__V(TF_${__Random(1,2,)})},    &#xd;
    &quot;professionalDetails&quot;: [{    &#xd;
        &quot;employmentType&quot;: &quot;Salaried&quot;,&#xd;
        &quot;employerId&quot;: &quot;GAVS&quot;,&#xd;
        &quot;annualIncome&quot;: &quot;1&quot;,&#xd;
        &quot;totalWorkExperience&quot;: 1,&#xd;
        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;createdDate&quot;: null,&#xd;
        &quot;modifiedBy&quot;: null,&#xd;
        &quot;modifiedDate&quot;: null,&#xd;
        &quot;status&quot;: &quot;true&quot;&#xd;
    }],&#xd;
    &quot;propertyDetails&quot;:[ {&#xd;
        &quot;propertyLocation&quot;: &quot;${__Random(600001,6000100,)}&quot;,&#xd;
        &quot;propertyValue&quot;: &quot;2&quot;,&#xd;
        &quot;loanAmount&quot;: &quot;${__Random(1000000,30000000,)}&quot;, &#xd;
        &quot;loanType&quot;:&quot;&quot;,       &#xd;
        &quot;foreclosureAmount&quot;:&quot;1.00&quot;,&#xd;
        &quot;foundHome&quot;: true,&#xd;
        &quot;financialCoApplicant&quot;: false,&#xd;
        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;createdDate&quot;: &quot;2023-07-14T22:58:39.619&quot;,&#xd;
        &quot;modifiedBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;modifiedDate&quot;: &quot;2023-07-14T22:58:39.619&quot;,&#xd;
        &quot;status&quot;: ${__V(TF_${__Random(1,2,)})}&#xd;
    }]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${top-up}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/homeloan/api/v1/home-loan/top-up    http://34.93.88.9:8080/api/v1/home-loan/top-up</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomeLoan_09_00c_POST_balance-transfer${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{       &quot;customerId&quot;:1685${__Random(1,3,)},&#xd;
        &quot;firstName&quot;: &quot;Perumal&quot;,&#xd;
        &quot;lastName&quot;: &quot;&quot;,&#xd;
        &quot;dateOfBirth&quot;: &quot;&quot;,&#xd;
        &quot;gender&quot;: &quot;M&quot;,&#xd;
        &quot;mobileNumber&quot;: &quot;${__Random(65000,99999,)}86390&quot;,&#xd;
        &quot;emailAddress&quot;: &quot;perumal.p@gavstech.com&quot;,&#xd;
        &quot;panNumber&quot;: &quot;ABCDE1111L&quot;,&#xd;
        &quot;aadhaarNumber&quot;: &quot;1234123412341234&quot;,&#xd;
        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;createdDate&quot;: null,&#xd;
        &quot;modifiedBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;modifiedDate&quot;: null,&#xd;
        &quot;enableDha&quot;:&quot;Y&quot;,&#xd;
        &quot;nriCustomer&quot;:${__V(TF_${__Random(1,2,)})},&#xd;
        &quot;status&quot;: &quot;true&quot;,    &#xd;
    &quot;professionalDetails&quot;: [{    &#xd;
        &quot;employmentType&quot;: &quot;Salaried&quot;,&#xd;
        &quot;employerId&quot;: &quot;GAVS&quot;,&#xd;
        &quot;annualIncome&quot;: &quot;1&quot;,&#xd;
        &quot;totalWorkExperience&quot;: 1,&#xd;
        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;createdDate&quot;: null,&#xd;
        &quot;modifiedBy&quot;: null,&#xd;
        &quot;modifiedDate&quot;: null,&#xd;
        &quot;status&quot;: ${__V(TF_${__Random(1,2,)})}&#xd;
    }],&#xd;
    &quot;propertyDetails&quot;:[ {&#xd;
        &quot;propertyLocation&quot;: &quot;${__Random(600001,6000100,)}&quot;,&#xd;
        &quot;propertyValue&quot;: &quot;2&quot;,&#xd;
        &quot;loanAmount&quot;: &quot;${__Random(1000000,30000000,)}&quot;, &#xd;
        &quot;loanType&quot;:&quot;&quot;,       &#xd;
        &quot;foreclosureAmount&quot;:&quot;1.00&quot;,&#xd;
        &quot;foundHome&quot;: true,&#xd;
        &quot;financialCoApplicant&quot;: false,&#xd;
        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;createdDate&quot;: &quot;2023-07-14T22:58:39.619&quot;,&#xd;
        &quot;modifiedBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;modifiedDate&quot;: &quot;2023-07-14T22:58:39.619&quot;,&#xd;
        &quot;status&quot;: ${__V(TF_${__Random(1,2,)})}&#xd;
    }]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${balance-transfer}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/homeloan/api/v1/home-loan/balance-transfer</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomeLoan_09_00d_POST_Loan-against-property${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{       &quot;customerId&quot;:1685${__Random(1,3,)},&#xd;
        &quot;firstName&quot;: &quot;Perumal&quot;,&#xd;
        &quot;lastName&quot;: &quot;&quot;,&#xd;
        &quot;dateOfBirth&quot;: &quot;&quot;,&#xd;
        &quot;gender&quot;: &quot;M&quot;,&#xd;
        &quot;mobileNumber&quot;: &quot;${__Random(65000,99999,)}86390&quot;,&#xd;
        &quot;emailAddress&quot;: &quot;perumal.p@gavstech.com&quot;,&#xd;
        &quot;panNumber&quot;: &quot;ABCDE1111L&quot;,&#xd;
        &quot;aadhaarNumber&quot;: &quot;1234123412341234&quot;,&#xd;
        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;createdDate&quot;: null,&#xd;
        &quot;modifiedBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;modifiedDate&quot;: null,&#xd;
        &quot;enableDha&quot;:&quot;Y&quot;,&#xd;
        &quot;nriCustomer&quot;:${__V(TF_${__Random(1,2,)})},&#xd;
        &quot;status&quot;: &quot;true&quot;,    &#xd;
    &quot;professionalDetails&quot;: [{    &#xd;
        &quot;employmentType&quot;: &quot;Salaried&quot;,&#xd;
        &quot;employerId&quot;: &quot;GAVS&quot;,&#xd;
        &quot;annualIncome&quot;: &quot;1&quot;,&#xd;
        &quot;totalWorkExperience&quot;: 1,&#xd;
        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;createdDate&quot;: null,&#xd;
        &quot;modifiedBy&quot;: null,&#xd;
        &quot;modifiedDate&quot;: null,&#xd;
        &quot;status&quot;: ${__V(TF_${__Random(1,2,)})}&#xd;
    }],&#xd;
    &quot;propertyDetails&quot;:[ {&#xd;
        &quot;propertyLocation&quot;: &quot;${__Random(600001,6000100,)}&quot;,&#xd;
        &quot;propertyValue&quot;: &quot;2&quot;,&#xd;
        &quot;loanAmount&quot;: &quot;${__Random(1000000,30000000,)}&quot;, &#xd;
        &quot;loanType&quot;:&quot;&quot;,       &#xd;
        &quot;foreclosureAmount&quot;:&quot;1.00&quot;,&#xd;
        &quot;foundHome&quot;: true,&#xd;
        &quot;financialCoApplicant&quot;: false,&#xd;
        &quot;createdBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;createdDate&quot;: &quot;2023-07-14T22:58:39.619&quot;,&#xd;
        &quot;modifiedBy&quot;: &quot;Perumal&quot;,&#xd;
        &quot;modifiedDate&quot;: &quot;2023-07-14T22:58:39.619&quot;,&#xd;
        &quot;status&quot;: ${__V(TF_${__Random(1,2,)})}&#xd;
    }]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${Loan-against-property}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/homeloan/api/v1/home-loan/loan-against-property</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="false">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters">${__BeanShell(import org.apache.jmeter.services.FileServer;FileServer.gerfileServer().getBaseDir();)}</stringProp>
              <stringProp name="script">BeanShell(import org.apache.jmeter.services.FileServer;FileServer.gerfileServer().getBaseDir();)
new File(arg[0]+</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HomeLoan_09_00e_GET_EmployerDetails${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${EmployerDetails}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/homeloan/api/v1/home-loan/employers?employerName=A</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="BusinessLoan${CounterValue}" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BL_50_100_00a_GET_FetchState&amp;City${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${FetchState&amp;City}0106</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/businessloan/api/v1/pincode?pincode=654546</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Rosponse code is not matching expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BL_50_100_00b_GET_OccupationList${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${Occupations}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/businessloan/api/v1/occupations</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Rosponse code is not matching expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BL_50_100_00c_GET_ResidenceTypes${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${residence-types}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/businessloan/api/v1/residence-types</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Rosponse code is not matching expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BL_50_100_00d_GET_BusinessTypes${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${BusinessTypes}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/businessloan/api/v1/type-of-businesses</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Rosponse code is not matching expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BL_50_100_00e_GET_CustomerDetails${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${customer}16851</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/businessloan/api/v1/customer/4</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Rosponse code is not matching expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BL_50_100_00f_POST_CreateBusinessLoan${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:16851,&#xd;
	&quot;tandc &quot;:true,&#xd;
	&quot;consent&quot; :true,&#xd;
	&quot;panNumber&quot; :&quot;&quot;,&#xd;
	&quot;email&quot; :&quot;&quot;,&#xd;
	&quot;loanAmount&quot; :${LoanAmount},&#xd;
	&quot;residenceTypeId&quot;:${ResidentType},&#xd;
	&quot;occupationId&quot;:${OccupationID},&#xd;
	&quot;typeOfBusinessId&quot;:${typeofBusinessID},&#xd;
	&quot;pincode&quot;:620002,&#xd;
	&quot;city&quot;:&quot;&quot;,&#xd;
	&quot;state&quot;:&quot;&quot;,&#xd;
	&quot;companyName&quot;:&quot;&quot;,&#xd;
	&quot;createdBy&quot;:&quot;&quot;,&#xd;
	&quot;createdDate&quot;:&quot;&quot;,&#xd;
	&quot;modifiedDate&quot;:&quot;&quot;,&#xd;
	&quot;modifiedBy&quot;:&quot;&quot;,&#xd;
	&quot;status&quot;:&quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${businessloans}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/businessloan/api/v1/businessloans</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1411309059">&quot;Business Loan has been created successfully.&quot;,</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Rosponse code is not matching expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">C:\Users\harishraj.s\Downloads\OneApp\OneApp\Business Loan\BusinessloanResult.csv</stringProp>
          </ResultCollector>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="BusinessLoan Path_URL" enabled="true">
            <stringProp name="filename">C:/Endurance/Business Loan/BusinessLoanPath.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Businessloan Params" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">C:/Endurance/Business Loan/BusinessloanParams.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames"></stringProp>
          </CSVDataSet>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">CounterValue</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
            <collectionProp name="CookieManager.cookies"/>
            <boolProp name="CookieManager.clearEachIteration">true</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
          <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
            <boolProp name="clearEachIteration">true</boolProp>
            <boolProp name="useExpires">true</boolProp>
            <boolProp name="CacheManager.controlledByThread">false</boolProp>
          </CacheManager>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="HealthInsurance ${CounterValue}" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="coveramt_1" elementType="Argument">
                <stringProp name="Argument.name">coveramt_1</stringProp>
                <stringProp name="Argument.value">300000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="coveramt_2" elementType="Argument">
                <stringProp name="Argument.name">coveramt_2</stringProp>
                <stringProp name="Argument.value">500000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="coveramt_3" elementType="Argument">
                <stringProp name="Argument.name">coveramt_3</stringProp>
                <stringProp name="Argument.value">700000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="coveramt_4" elementType="Argument">
                <stringProp name="Argument.name">coveramt_4</stringProp>
                <stringProp name="Argument.value">1000000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="policyType_1" elementType="Argument">
                <stringProp name="Argument.name">policyType_1</stringProp>
                <stringProp name="Argument.value">Personal</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="policyType_2" elementType="Argument">
                <stringProp name="Argument.name">policyType_2</stringProp>
                <stringProp name="Argument.value">Corporate</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TF_1" elementType="Argument">
                <stringProp name="Argument.name">TF_1</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TF_2" elementType="Argument">
                <stringProp name="Argument.name">TF_2</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="customerId" elementType="Argument">
                <stringProp name="Argument.name">customerId</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.value">${__Random(18,22,)}</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="HealthInsuracetPathURI" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">C:\Endurance\HealthInsurance\HealthInsurancePathURI.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="TestPlan.comments">PathURI</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">CounterValue</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00a_GET_customersbyid ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${customersbyid}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/customers/191</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="custTermInsID" enabled="false">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">custTermInsID</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">custTermInsID&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number"></stringProp>
              <stringProp name="TestPlan.comments">{&quot;custTermInsID&quot;:839,&quot;       fetching  custTermInsID</stringProp>
            </BoundaryExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00b_GET_topupcoverage ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customerId&quot;: ${__Random(15000,20000,)},&#xd;
  &quot;gender&quot;: &quot;M&quot;,&#xd;
  &quot;locationPin&quot;: 12345,&#xd;
  &quot;planName&quot;: &quot;abc&quot;,&#xd;
  &quot;finalCoverage&quot;: 23.0,&#xd;
  &quot;finalMonthlyPremium&quot;: 12,&#xd;
  &quot;existingInsurance&quot;: ${__V(TF_${__Random(1,2,)})},&#xd;
  &quot;existingpolicyType&quot;: null,&#xd;
  &quot;existingCoverage&quot;: ${__V(coveramt_${__Random(1,4,)})},&#xd;
  &quot;createdBy&quot;: &quot;user&quot;,&#xd;
  &quot;modifiedBy&quot;: &quot;user&quot;,&#xd;
  &quot;active&quot;: &quot;Y&quot;,&#xd;
  &quot;healthInsuranceDetailsDTO&quot;: {&#xd;
    &quot;selfAge&quot;: ${__Random(30,40,)},&#xd;
    &quot;spouseAge&quot;: ${__Random(30,35,)},&#xd;
    &quot;child1age&quot;: ${__Random(22,29,)},&#xd;
    &quot;child2age&quot;: ${__Random(19,21,)},&#xd;
    &quot;child3age&quot;: ${__Random(14,18,)},&#xd;
    &quot;child4age&quot;: ${__Random(10,14,)},&#xd;
    &quot;fatherAge&quot;: ${__Random(51,60,)},&#xd;
    &quot;motherAge&quot;: ${__Random(41,47,)},&#xd;
    &quot;createdBy&quot;: &quot;user&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;user&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${topupcoverage}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/topupcoverage</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00c_GET_occupations ${CounterValue} " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customerId&quot;: ${__Random(15000,20000,)},&#xd;
  &quot;gender&quot;: &quot;M&quot;,&#xd;
  &quot;locationPin&quot;: 12345,&#xd;
  &quot;planName&quot;: &quot;abc&quot;,&#xd;
  &quot;finalCoverage&quot;: 23.0,&#xd;
  &quot;finalMonthlyPremium&quot;: 12,&#xd;
  &quot;existingInsurance&quot;: ${__V(TF_${__Random(1,2,)})},&#xd;
  &quot;existingpolicyType&quot;: null,&#xd;
  &quot;existingCoverage&quot;: ${__V(coveramt_${__Random(1,4,)})},&#xd;
  &quot;createdBy&quot;: &quot;user&quot;,&#xd;
  &quot;modifiedBy&quot;: &quot;user&quot;,&#xd;
  &quot;active&quot;: &quot;Y&quot;,&#xd;
  &quot;healthInsuranceDetailsDTO&quot;: {&#xd;
    &quot;selfAge&quot;: ${__Random(30,40,)},&#xd;
    &quot;spouseAge&quot;: 0,&#xd;
    &quot;child1age&quot;: ${__Random(22,29,)},&#xd;
    &quot;child2age&quot;: ${__Random(19,21,)},&#xd;
    &quot;child3age&quot;: ${__Random(14,18,)},&#xd;
    &quot;child4age&quot;: ${__Random(10,14,)},&#xd;
    &quot;fatherAge&quot;: ${__Random(51,60,)},&#xd;
    &quot;motherAge&quot;: 0,&#xd;
    &quot;createdBy&quot;: &quot;user&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;user&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${occupation}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/occupation</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00d_GET_Addons ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${addons}sumInsured=200000&amp;travel_si=10000&amp;planName=ABHI Super Health Plus Top up&amp;opd_si=0&amp;vaccineCover_si=750&amp;personalAccidentCover_si=700000&amp;criticalillness_si=300000&amp;age=35&amp;icmi_si=30000000&amp;roomType=any&amp;hospitalCash_si=500&amp;gender=1&amp;adultCount=1&amp;childCount=0&amp;maternity_si=0&amp;teleOpd_si=5000 </stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/addons?sumInsured=200000&amp;travel_si=10000&amp;planName=ABHI Super Health Plus Top up&amp;opd_si=0&amp;vaccineCover_si=750&amp;personalAccidentCover_si=700000&amp;criticalillness_si=300000&amp;age=35&amp;icmi_si=30000000&amp;roomType=any&amp;hospitalCash_si=500&amp;gender=1&amp;adultCount=1&amp;childCount=0&amp;maternity_si=0&amp;teleOpd_si=5000</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00e_GET_incomerange ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${incomerange}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/incomerange</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00f_GET_education ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${education}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/education</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00g_GET_resume ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${resume}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/resume/25</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00h_GET_relation ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${relation}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/education</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00i_GET_kycstart ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${kycstart}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/kyc/start/12345678/25</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00j_POST_preQuote ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 25,&#xd;
    &quot;super5&quot;: false,&#xd;
    &quot;super10&quot;: false,&#xd;
    &quot;super15&quot;: false,&#xd;
    &quot;sumInsured&quot;: 500000,&#xd;
    &quot;createdBy&quot;: &quot;user&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;user&quot;,&#xd;
    &quot;active&quot;: true,&#xd;
    &quot;selfAge&quot;: 25,&#xd;
    &quot;spouseAge&quot;: 0,&#xd;
    &quot;son1age&quot;: 0,&#xd;
    &quot;son2age&quot;: 12,&#xd;
    &quot;son3age&quot;: 0,&#xd;
    &quot;son4age&quot;: 0,&#xd;
    &quot;daughter1age&quot;: 13,&#xd;
    &quot;daughter2age&quot;: 0,&#xd;
    &quot;daughter3age&quot;: 0,&#xd;
    &quot;daughter4age&quot;: 0,&#xd;
    &quot;fatherAge&quot;: 0,&#xd;
    &quot;motherAge&quot;: 0,&#xd;
    &quot;fatherinlawage&quot;: 0,&#xd;
    &quot;motherinlawage&quot;: 0,&#xd;
    &quot;gender&quot;: &quot;Male&quot;,&#xd;
    &quot;locationPin&quot;: 400025,&#xd;
    &quot;existingInsurance&quot;: false,&#xd;
    &quot;existingpolicyType&quot;: null,&#xd;
    &quot;existingCoverage&quot;: 0,    &#xd;
    &quot;currentstep&quot;: 1,&#xd;
    &quot;finalstep&quot;: 7&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${preQuote}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/preQuote</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00k_POST_quoteDetails ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 25,&#xd;
    &quot;super5&quot;: false,&#xd;
    &quot;super10&quot;: false,&#xd;
    &quot;super15&quot;: false,&#xd;
    &quot;sumInsured&quot;: 10000000,&#xd;
    &quot;createdBy&quot;: &quot;user&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;user&quot;,&#xd;
    &quot;active&quot;: true,&#xd;
    &quot;selfAge&quot;: 25,&#xd;
    &quot;spouseAge&quot;: 0,&#xd;
    &quot;son1age&quot;: 0,&#xd;
    &quot;son2age&quot;: 12,&#xd;
    &quot;son3age&quot;: 0,&#xd;
    &quot;son4age&quot;: 0,&#xd;
    &quot;daughter1age&quot;: 13,&#xd;
    &quot;daughter2age&quot;: 0,&#xd;
    &quot;daughter3age&quot;: 0,&#xd;
    &quot;daughter4age&quot;: 0,&#xd;
    &quot;fatherAge&quot;: 0,&#xd;
    &quot;motherAge&quot;: 0,&#xd;
    &quot;fatherinlawage&quot;: 0,&#xd;
    &quot;motherinlawage&quot;: 0,&#xd;
    &quot;gender&quot;: &quot;Male&quot;,&#xd;
    &quot;locationPin&quot;: 400025,&#xd;
    &quot;existingInsurance&quot;: false,&#xd;
    &quot;existingpolicyType&quot;: null,&#xd;
    &quot;existingCoverage&quot;: 0,&#xd;
    &quot;currentstep&quot;: 1,&#xd;
    &quot;finalstep&quot;: 6&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${quoteDetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/quoteDetails</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00l_POST_addonDetails ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 25,&#xd;
    &quot;super5&quot;: false,&#xd;
    &quot;super10&quot;: false,&#xd;
    &quot;super15&quot;: false,&#xd;
    &quot;sumInsured&quot;: 500000,&#xd;
    &quot;createdBy&quot;: &quot;user&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;user&quot;,&#xd;
    &quot;active&quot;: true,&#xd;
    &quot;selectedPlanId&quot;: 1,&#xd;
    &quot;selectedQuoteId&quot;: &quot;Q06cd9134-a87d-47d9-9d07-225028ac59a3&quot;,   &#xd;
    &quot;selfAge&quot;: 25,&#xd;
    &quot;spouseAge&quot;: 0,&#xd;
    &quot;son1age&quot;: 0,&#xd;
    &quot;son2age&quot;: 12,&#xd;
    &quot;son3age&quot;: 0,&#xd;
    &quot;son4age&quot;: 0,&#xd;
    &quot;daughter1age&quot;: 13,&#xd;
    &quot;daughter2age&quot;: 0,&#xd;
    &quot;daughter3age&quot;: 0,&#xd;
    &quot;daughter4age&quot;: 0,&#xd;
    &quot;fatherAge&quot;: 0,&#xd;
    &quot;motherAge&quot;: 0,&#xd;
    &quot;fatherinlawage&quot;: 0,&#xd;
    &quot;motherinlawage&quot;: 0,&#xd;
    &quot;gender&quot;: &quot;Male&quot;,&#xd;
    &quot;locationPin&quot;: 400025,&#xd;
    &quot;existingInsurance&quot;: false,&#xd;
    &quot;existingpolicyType&quot;: null,&#xd;
    &quot;existingCoverage&quot;: 0,&#xd;
     &quot;addonDetails&quot;: [&#xd;
        {&#xd;
            &quot;addoninsured&quot;: &quot;self&quot;,&#xd;
            &quot;addonname&quot;: &quot;Future Secure&quot;,&#xd;
            &quot;addoninput&quot;: &quot;12&quot;,&#xd;
            &quot;premium&quot;: 8.7&#xd;
        }&#xd;
    ],&#xd;
    &quot;planDetails&quot;: [&#xd;
         {&#xd;
            &quot;planId&quot;: 1,&#xd;
            &quot;planCode&quot;: &quot;7100100002&quot;,&#xd;
            &quot;planName&quot;: &quot;ABHI Activ Fit Plus&quot;,&#xd;
            &quot;sumInsured&quot;: 500000,&#xd;
            &quot;this_plan_is_for&quot;: &quot;For Health conscious people who stay active&quot;,&#xd;
            &quot;premiumAmount&quot;: 11327.0,&#xd;
            &quot;policyType&quot;: &quot;Family Floater&quot;,&#xd;
            &quot;deductible&quot;: &quot;0.0&quot;,&#xd;
            &quot;quoteId&quot;: &quot;Q-a091c9a0-c1d3-4d4a-9e7e-067320076e8d&quot;,&#xd;
            &quot;usp&quot;: [&#xd;
                &quot;Unlimited Refill&quot;,&#xd;
                &quot;Policy Premium Return&quot;,&#xd;
                &quot;Good Health Discount&quot;,&#xd;
                &quot;Pre &amp; Post Hospitalisation&quot;,&#xd;
                &quot;Early Bird Discount&quot;&#xd;
            ]&#xd;
        },&#xd;
        {&#xd;
            &quot;planId&quot;: 4,&#xd;
            &quot;planCode&quot;: &quot;6212100004&quot;,&#xd;
            &quot;planName&quot;: &quot;ABHI Activ Health Platinum Essential&quot;,&#xd;
            &quot;sumInsured&quot;: 500000,&#xd;
            &quot;this_plan_is_for&quot;: &quot;People looking for a wide range of health and wellness benefits&quot;,&#xd;
            &quot;premiumAmount&quot;: 8698.0,&#xd;
            &quot;policyType&quot;: &quot;Family Floater&quot;,&#xd;
            &quot;deductible&quot;: &quot;0.0&quot;,&#xd;
            &quot;quoteId&quot;: &quot;Q-81affd2d-c227-42ca-9278-6f53351c7460&quot;,&#xd;
            &quot;usp&quot;: [&#xd;
                &quot;Day 1 cover for chronic diseases&quot;,&#xd;
                &quot;No Claim Bonus&quot;,&#xd;
                &quot;Policy Premium Return&quot;,&#xd;
                &quot;Expert Health Assistance&quot;,&#xd;
                &quot;Cashless Home Treatment&quot;&#xd;
            ]&#xd;
        }&#xd;
    ],&#xd;
    &quot;currentstep&quot;: 2,&#xd;
    &quot;finalstep&quot;: 7&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${addonDetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/addonDetails</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00m_POST_proposerinusreddetails ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 25,&#xd;
    &quot;super5&quot;: false,&#xd;
    &quot;super10&quot;: false,&#xd;
    &quot;super15&quot;: false,&#xd;
    &quot;sumInsured&quot;: 500000,&#xd;
    &quot;createdBy&quot;: &quot;user&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;user&quot;,&#xd;
    &quot;active&quot;: true,&#xd;
    &quot;selectedPlanId&quot;: 1,&#xd;
    &quot;selectedQuoteId&quot;: &quot;Q06cd9134-a87d-47d9-9d07-225028ac59a3&quot;,&#xd;
    &quot;selfAge&quot;: 25,&#xd;
    &quot;spouseAge&quot;: 0,&#xd;
    &quot;son1age&quot;: 0,&#xd;
    &quot;son2age&quot;: 12,&#xd;
    &quot;son3age&quot;: 0,&#xd;
    &quot;son4age&quot;: 0,&#xd;
    &quot;daughter1age&quot;: 13,&#xd;
    &quot;daughter2age&quot;: 0,&#xd;
    &quot;daughter3age&quot;: 0,&#xd;
    &quot;daughter4age&quot;: 0,&#xd;
    &quot;fatherAge&quot;: 0,&#xd;
    &quot;motherAge&quot;: 0,&#xd;
    &quot;fatherinlawage&quot;: 0,&#xd;
    &quot;motherinlawage&quot;: 0,&#xd;
    &quot;gender&quot;: &quot;Male&quot;,&#xd;
    &quot;locationPin&quot;: 400025,&#xd;
    &quot;existingInsurance&quot;: false,&#xd;
    &quot;existingpolicyType&quot;: null,&#xd;
    &quot;existingCoverage&quot;: 0,&#xd;
    &quot;proposalId&quot;: &quot;P-9d77508a-4848-40f5-aacd-5dde072657e6&quot;,&#xd;
    &quot;kycmodifiedpremium&quot;: &quot;&quot;,&#xd;
    &quot;addonDetails&quot;: [&#xd;
        {&#xd;
            &quot;addoninsured&quot;: &quot;self&quot;,&#xd;
            &quot;addonname&quot;: &quot;Future Secure&quot;,&#xd;
            &quot;addoninput&quot;: &quot;12&quot;,&#xd;
            &quot;premium&quot;: 8.7&#xd;
        }&#xd;
    ],&#xd;
    &quot;planDetails&quot;: [&#xd;
         {&#xd;
            &quot;planId&quot;: 1,&#xd;
            &quot;planCode&quot;: &quot;7100100002&quot;,&#xd;
            &quot;planName&quot;: &quot;ABHI Activ Fit Plus&quot;,&#xd;
            &quot;sumInsured&quot;: 500000,&#xd;
            &quot;this_plan_is_for&quot;: &quot;For Health conscious people who stay active&quot;,&#xd;
            &quot;premiumAmount&quot;: 11327.0,&#xd;
            &quot;policyType&quot;: &quot;Family Floater&quot;,&#xd;
            &quot;deductible&quot;: &quot;0.0&quot;,&#xd;
            &quot;quoteId&quot;: &quot;Q-a091c9a0-c1d3-4d4a-9e7e-067320076e8d&quot;,&#xd;
            &quot;usp&quot;: [&#xd;
                &quot;Unlimited Refill&quot;,&#xd;
                &quot;Policy Premium Return&quot;,&#xd;
                &quot;Good Health Discount&quot;,&#xd;
                &quot;Pre &amp; Post Hospitalisation&quot;,&#xd;
                &quot;Early Bird Discount&quot;&#xd;
            ]&#xd;
        },&#xd;
        {&#xd;
            &quot;planId&quot;: 4,&#xd;
            &quot;planCode&quot;: &quot;6212100004&quot;,&#xd;
            &quot;planName&quot;: &quot;ABHI Activ Health Platinum Essential&quot;,&#xd;
            &quot;sumInsured&quot;: 500000,&#xd;
            &quot;this_plan_is_for&quot;: &quot;People looking for a wide range of health and wellness benefits&quot;,&#xd;
            &quot;premiumAmount&quot;: 8698.0,&#xd;
            &quot;policyType&quot;: &quot;Family Floater&quot;,&#xd;
            &quot;deductible&quot;: &quot;0.0&quot;,&#xd;
            &quot;quoteId&quot;: &quot;Q-81affd2d-c227-42ca-9278-6f53351c7460&quot;,&#xd;
            &quot;usp&quot;: [&#xd;
                &quot;Day 1 cover for chronic diseases&quot;,&#xd;
                &quot;No Claim Bonus&quot;,&#xd;
                &quot;Policy Premium Return&quot;,&#xd;
                &quot;Expert Health Assistance&quot;,&#xd;
                &quot;Cashless Home Treatment&quot;&#xd;
            ]&#xd;
        }&#xd;
    ],&#xd;
    &quot;proposerInsuredDetails&quot;: {&#xd;
        &quot;nominee&quot;: {&#xd;
            &quot;nomineename&quot;: &quot;Jane Doe&quot;,&#xd;
            &quot;nomineemno&quot;: &quot;9876543210&quot;,&#xd;
            &quot;nomineerelationcode&quot;: 1&#xd;
        },&#xd;
        &quot;proposerInsured&quot;: [&#xd;
            { &#xd;
                &quot;insuredmember&quot;: &quot;self&quot;,&#xd;
                &quot;name&quot;: &quot;John&quot;,&#xd;
                &quot;dob&quot;: &quot;1985-10-15&quot;,&#xd;
                &quot;mno&quot;: &quot;1234567890&quot;,&#xd;
                &quot;panno&quot;: &quot;AWAPR91955F&quot;,&#xd;
                &quot;mailid&quot;: &quot;john@example.com&quot;,&#xd;
                &quot;maritalstatus&quot;: &quot;Single&quot;,&#xd;
                &quot;nationality&quot;: &quot;Indian&quot;,&#xd;
                &quot;height&quot;: 175,&#xd;
                &quot;weight&quot;: 75,&#xd;
                &quot;educationid&quot;: 2,&#xd;
                &quot;occupationid&quot;: 3,&#xd;
                &quot;incomerangeid&quot;: 4,&#xd;
                &quot;proposer&quot;: true&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;currentstep&quot;: 3,&#xd;
    &quot;finalstep&quot;: 7&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${proposerinusreddetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/postData</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00n_POST_kycdetails  ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 25,&#xd;
    &quot;super5&quot;: false,&#xd;
    &quot;super10&quot;: false,&#xd;
    &quot;super15&quot;: false,&#xd;
    &quot;sumInsured&quot;: 500000,&#xd;
    &quot;createdBy&quot;: &quot;user&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;user&quot;,&#xd;
    &quot;active&quot;: true,&#xd;
    &quot;selectedPlanId&quot;: 1,&#xd;
    &quot;selectedQuoteId&quot;: &quot;Q06cd9134-a87d-47d9-9d07-225028ac59a3&quot;,&#xd;
    &quot;proposalId&quot;: &quot;P-9d77508a-4848-40f5-aacd-5dde072657e6&quot;,&#xd;
    &quot;selfAge&quot;: 25,&#xd;
    &quot;spouseAge&quot;: 0,&#xd;
    &quot;son1age&quot;: 0,&#xd;
    &quot;son2age&quot;: 12,&#xd;
    &quot;son3age&quot;: 0,&#xd;
    &quot;son4age&quot;: 0,&#xd;
    &quot;daughter1age&quot;: 13,&#xd;
    &quot;daughter2age&quot;: 0,&#xd;
    &quot;daughter3age&quot;: 0,&#xd;
    &quot;daughter4age&quot;: 0,&#xd;
    &quot;fatherAge&quot;: 0,&#xd;
    &quot;motherAge&quot;: 0,&#xd;
    &quot;fatherinlawage&quot;: 0,&#xd;
    &quot;motherinlawage&quot;: 0,&#xd;
    &quot;gender&quot;: &quot;Male&quot;,&#xd;
    &quot;locationPin&quot;: 400025,&#xd;
    &quot;existingInsurance&quot;: false,&#xd;
    &quot;existingpolicyType&quot;: null,&#xd;
    &quot;existingCoverage&quot;: 0,&#xd;
    &quot;kycmodifiedpremium&quot;:&quot;&quot;,&#xd;
    &quot;addonDetails&quot;: [&#xd;
        {&#xd;
            &quot;addoninsured&quot;: &quot;self&quot;,&#xd;
            &quot;addonname&quot;: &quot;Future Secure&quot;,&#xd;
            &quot;addoninput&quot;: &quot;12&quot;,&#xd;
            &quot;premium&quot;: 8.7&#xd;
        }&#xd;
    ],&#xd;
    &quot;planDetails&quot;: [&#xd;
         {&#xd;
            &quot;planId&quot;: 1,&#xd;
            &quot;planCode&quot;: &quot;7100100002&quot;,&#xd;
            &quot;planName&quot;: &quot;ABHI Activ Fit Plus&quot;,&#xd;
            &quot;sumInsured&quot;: 500000,&#xd;
            &quot;this_plan_is_for&quot;: &quot;For Health conscious people who stay active&quot;,&#xd;
            &quot;premiumAmount&quot;: 11327.0,&#xd;
            &quot;policyType&quot;: &quot;Family Floater&quot;,&#xd;
            &quot;deductible&quot;: &quot;0.0&quot;,&#xd;
            &quot;quoteId&quot;: &quot;Q-a091c9a0-c1d3-4d4a-9e7e-067320076e8d&quot;,&#xd;
            &quot;usp&quot;: [&#xd;
                &quot;Unlimited Refill&quot;,&#xd;
                &quot;Policy Premium Return&quot;,&#xd;
                &quot;Good Health Discount&quot;,&#xd;
                &quot;Pre &amp; Post Hospitalisation&quot;,&#xd;
                &quot;Early Bird Discount&quot;&#xd;
            ]&#xd;
        },&#xd;
        {&#xd;
            &quot;planId&quot;: 4,&#xd;
            &quot;planCode&quot;: &quot;6212100004&quot;,&#xd;
            &quot;planName&quot;: &quot;ABHI Activ Health Platinum Essential&quot;,&#xd;
            &quot;sumInsured&quot;: 500000,&#xd;
            &quot;this_plan_is_for&quot;: &quot;People looking for a wide range of health and wellness benefits&quot;,&#xd;
            &quot;premiumAmount&quot;: 8698.0,&#xd;
            &quot;policyType&quot;: &quot;Family Floater&quot;,&#xd;
            &quot;deductible&quot;: &quot;0.0&quot;,&#xd;
            &quot;quoteId&quot;: &quot;Q-81affd2d-c227-42ca-9278-6f53351c7460&quot;,&#xd;
            &quot;usp&quot;: [&#xd;
                &quot;Day 1 cover for chronic diseases&quot;,&#xd;
                &quot;No Claim Bonus&quot;,&#xd;
                &quot;Policy Premium Return&quot;,&#xd;
                &quot;Expert Health Assistance&quot;,&#xd;
                &quot;Cashless Home Treatment&quot;&#xd;
            ]&#xd;
        }&#xd;
    ],&#xd;
     &quot;proposerInsuredDetails&quot;: {&#xd;
        &quot;nominee&quot;: {&#xd;
            &quot;nomineename&quot;: &quot;Jane Doe&quot;,&#xd;
            &quot;nomineemno&quot;: &quot;9876543210&quot;,&#xd;
            &quot;nomineerelationcode&quot;: 1&#xd;
        },&#xd;
        &quot;proposerInsured&quot;: [&#xd;
            { &#xd;
                &quot;insuredmember&quot;: &quot;self&quot;,&#xd;
                &quot;name&quot;: &quot;John&quot;,&#xd;
                &quot;dob&quot;: &quot;1985-10-15&quot;,&#xd;
                &quot;mno&quot;: &quot;1234567890&quot;,&#xd;
                &quot;panno&quot;: &quot;AWAPR91955F&quot;,&#xd;
                &quot;mailid&quot;: &quot;john@example.com&quot;,&#xd;
                &quot;maritalstatus&quot;: &quot;Single&quot;,&#xd;
                &quot;nationality&quot;: &quot;Indian&quot;,&#xd;
                &quot;height&quot;: 175,&#xd;
                &quot;weight&quot;: 75,&#xd;
                &quot;educationid&quot;: 2,&#xd;
                &quot;occupationid&quot;: 3,&#xd;
                &quot;incomerangeid&quot;: 4,&#xd;
                &quot;proposer&quot;: true&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &#xd;
    &quot;kycDetails&quot;:{&#xd;
        &quot;kyctype&quot;:&quot;&quot;,&#xd;
        &quot;gmaplocation&quot;:&quot;&quot;,&#xd;
        &quot;apartment&quot;:&quot;&quot;,&#xd;
        &quot;landmark&quot;:&quot;&quot;,&#xd;
        &quot;pincode&quot;:1234,&#xd;
        &quot;city&quot;:&quot;&quot;,&#xd;
        &quot;state&quot;:&quot;&quot;,&#xd;
        &quot;addresstype&quot;:&quot;&quot;,&#xd;
        &quot;ckycflag&quot;: false,&#xd;
        &quot;ckycno&quot;: null,&#xd;
        &quot;digilocker&quot;: false,&#xd;
        &quot;maskedaadharnumber&quot;: null,&#xd;
        &quot;hypervergeovdstatus&quot;: true,&#xd;
        &quot;kycstatus&quot;: null,&#xd;
        &quot;photo&quot;: null,&#xd;
        &quot;errorMessage&quot;: null,&#xd;
        &quot;imageurl&quot;: &quot;https://prod-audit-portal-ind.s3.ap-south-1.amazonaws.com/gkyc-ap-south-1/readId/2023-09-20/qw9rjg/1695219582576-add2986b-966c-4bb5-a7e6-a1d28f495869/image.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAZRKK5ZMRVZOEGSPG%2F20230920%2Fap-south-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20230920T180233Z&amp;X-Amz-Expires=900&amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEPD%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCmFwLXNvdXRoLTEiRzBFAiEAh49nqNTJ2VDMmYYOjormlQvgN6vOtp8aK8NEWAOK9BwCIChzJ%2FNlZ46lFfN8HtF7KTROWgfLZeErKFDmG%2FsyDYoLKsgFCNn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQARoMNjU1Njc2NTI1MzQ3IgxRU6QftYHNOnhdWGEqnAU2HFKca1JHv%2F%2FAnb%2BhxQLp71VrSLQoWAQE2NFqZu3WMagHgEOZbWGfMGjnSkOx%2FharzGS6AKoUmE%2F0TY8KT1TBtfPlYP%2Bn1ux7XyW7Bx3qSLqhYbQfh3vVJWbfAfDutM7%2FBmQYLe%2FiGiUCfUjWMG6T0rXDtONhKQVXJm4wvnjxBB13yXvAQVwZWM1nObuEMvhQill8MJaCuoKR98nbx5hhkSOkaCTAMo%2BZH6B2CBR2zdOgPbdOpL%2BayrDNKJeOEkhnwE4lgBz6qxk5nT2LBMHdZZuciTMU9rSDnTlfLCrc13T%2B%2Bpcaw7Vu4OzR2wkNwOnaX75Cj1TJoKqKfnZsEhq0IXKZibAl%2BqJESZ72EtHrdX%2FXgNjPWRNKDCinMNQrfd61%2BSyA8iocsVEFrONUTB1mxWgjAz67aPhPJqlO96JfZbXH91UKDJiJd4fiXPJ4n4DABuSRuAXqMYaODi3RvI2aXSUTIPAYHMY0pO9LJZ1%2F16OLGDBAi7m9HK8XW7zVL7waBlZOKNduywuSz1ZlIpWAoCC5bX3LQa8zQY6sG4DFwaHDyFwNAIqc2iO0cAXzWb2jCo%2BALbcLEIIanzcOBQ7CG4f5WHmrgsO19W1y7uWcWBCYX2edcDS41fOBd9Qrqc2RwcIoiPJMeGcBM8eH0iez23x2pS%2BjDRpHC8cU6r8joQFJcJjSyahz%2BRXq4XKf5ZO8GQzf1gnF71p33fyT6%2B9MXy1WJzl21WfXMhBRBI7DbgnLzcyBC6vHdIUYAnOIW1b5qHfS09Pk1Irnzl1xfzas4IjSb0CwgD4HnhH4Ya68w0W6v9%2FkzJCcHR2sgPRBBe3pbjw7dffnB8YfCS2d5PSlEMPXDGCdnZ8yF6vKy0p%2FyZSgoZrzDETBCrSkUzDloKyoBjqxAZPLav4ZRorfps2SQ7%2FGbwCy7QsRKMZ9uy7d8MOEgU5Y5jE1hjVft8ihe4kSDcr3XrvCjBTTAyU2ha1NakueYTwakFCMT6xbAIx23HrH%2Bzu4Pgzw0SZK0roI2OCQXLr88fbpE4k1KN5b97FcF2d9oT8V3xEytYyyKGpdNHhRAKUH1N1aUcewewksNAe4wqX99P5WCkQU56usfisD9aabHwVOYItsbhIa7Br8ASGnGSOpHw%3D%3D&amp;X-Amz-Signature=30b954a772508d3f7bb9799c998723f42ec77725c67c8f983de5bc6c195f540a&amp;X-Amz-SignedHeaders=host&quot;,&#xd;
        &quot;idNumber&quot;: &quot;XXXXXXXX8553&quot;,&#xd;
        &quot;kycmodifiedpremium&quot;:&quot;2000&quot;&#xd;
    },&#xd;
    &quot;currentstep&quot;: 4,&#xd;
    &quot;finalstep&quot;: 7&#xd;
    }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${kycdetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/postData</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00o_POST_lifestyledetails ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 25,&#xd;
    &quot;super5&quot;: false,&#xd;
    &quot;super10&quot;: false,&#xd;
    &quot;super15&quot;: false,&#xd;
    &quot;sumInsured&quot;: 500000,&#xd;
    &quot;createdBy&quot;: &quot;user&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;user&quot;,&#xd;
    &quot;active&quot;: true,&#xd;
    &quot;selectedPlanId&quot;: 1,&#xd;
    &quot;selectedQuoteId&quot;: &quot;Q06cd9134-a87d-47d9-9d07-225028ac59a3&quot;,&#xd;
    &quot;selfAge&quot;: 25,&#xd;
    &quot;spouseAge&quot;: 0,&#xd;
    &quot;son1age&quot;: 0,&#xd;
    &quot;son2age&quot;: 12,&#xd;
    &quot;son3age&quot;: 0,&#xd;
    &quot;son4age&quot;: 0,&#xd;
    &quot;daughter1age&quot;: 13,&#xd;
    &quot;daughter2age&quot;: 0,&#xd;
    &quot;daughter3age&quot;: 0,&#xd;
    &quot;daughter4age&quot;: 0,&#xd;
    &quot;fatherAge&quot;: 0,&#xd;
    &quot;motherAge&quot;: 0,&#xd;
    &quot;fatherinlawage&quot;: 0,&#xd;
    &quot;motherinlawage&quot;: 0,&#xd;
    &quot;gender&quot;: &quot;Male&quot;,&#xd;
    &quot;locationPin&quot;: 400025,&#xd;
    &quot;existingInsurance&quot;: false,&#xd;
    &quot;existingpolicyType&quot;: null,&#xd;
    &quot;existingCoverage&quot;: 0,&#xd;
    &quot;proposalId&quot;: &quot;P-9d77508a-4848-40f5-aacd-5dde072657e6&quot;,&#xd;
    &quot;addonDetails&quot;: [&#xd;
        {&#xd;
            &quot;addoninsured&quot;: &quot;self&quot;,&#xd;
            &quot;addonname&quot;: &quot;Future Secure&quot;,&#xd;
            &quot;addoninput&quot;: &quot;12&quot;,&#xd;
            &quot;premium&quot;: 8.7&#xd;
        }&#xd;
    ],&#xd;
    &quot;planDetails&quot;: [&#xd;
        {&#xd;
            &quot;planId&quot;: 1,&#xd;
            &quot;planCode&quot;: &quot;7100100002&quot;,&#xd;
            &quot;planName&quot;: &quot;ABHI Activ Fit Plus&quot;,&#xd;
            &quot;sumInsured&quot;: 500000,&#xd;
            &quot;this_plan_is_for&quot;: &quot;For Health conscious people who stay active&quot;,&#xd;
            &quot;premiumAmount&quot;: 11327.0,&#xd;
            &quot;policyType&quot;: &quot;Family Floater&quot;,&#xd;
            &quot;deductible&quot;: &quot;0.0&quot;,&#xd;
            &quot;quoteId&quot;: &quot;Q-a091c9a0-c1d3-4d4a-9e7e-067320076e8d&quot;,&#xd;
            &quot;usp&quot;: [&#xd;
                &quot;Unlimited Refill&quot;,&#xd;
                &quot;Policy Premium Return&quot;,&#xd;
                &quot;Good Health Discount&quot;,&#xd;
                &quot;Pre &amp; Post Hospitalisation&quot;,&#xd;
                &quot;Early Bird Discount&quot;&#xd;
            ]&#xd;
        },&#xd;
        {&#xd;
            &quot;planId&quot;: 4,&#xd;
            &quot;planCode&quot;: &quot;6212100004&quot;,&#xd;
            &quot;planName&quot;: &quot;ABHI Activ Health Platinum Essential&quot;,&#xd;
            &quot;sumInsured&quot;: 500000,&#xd;
            &quot;this_plan_is_for&quot;: &quot;People looking for a wide range of health and wellness benefits&quot;,&#xd;
            &quot;premiumAmount&quot;: 8698.0,&#xd;
            &quot;policyType&quot;: &quot;Family Floater&quot;,&#xd;
            &quot;deductible&quot;: &quot;0.0&quot;,&#xd;
            &quot;quoteId&quot;: &quot;Q-81affd2d-c227-42ca-9278-6f53351c7460&quot;,&#xd;
            &quot;usp&quot;: [&#xd;
                &quot;Day 1 cover for chronic diseases&quot;,&#xd;
                &quot;No Claim Bonus&quot;,&#xd;
                &quot;Policy Premium Return&quot;,&#xd;
                &quot;Expert Health Assistance&quot;,&#xd;
                &quot;Cashless Home Treatment&quot;&#xd;
            ]&#xd;
        }&#xd;
    ],&#xd;
   &quot;proposerInsuredDetails&quot;: {&#xd;
        &quot;nominee&quot;: {&#xd;
            &quot;nomineename&quot;: &quot;Jane Doe&quot;,&#xd;
            &quot;nomineemno&quot;: &quot;9876543210&quot;,&#xd;
            &quot;nomineerelationcode&quot;: 1&#xd;
        },&#xd;
        &quot;proposerInsured&quot;: [&#xd;
            { &#xd;
                &quot;insuredmember&quot;: &quot;self&quot;,&#xd;
                &quot;name&quot;: &quot;John&quot;,&#xd;
                &quot;dob&quot;: &quot;1985-10-15&quot;,&#xd;
                &quot;mno&quot;: &quot;1234567890&quot;,&#xd;
                &quot;panno&quot;: &quot;AWAPR91955F&quot;,&#xd;
                &quot;mailid&quot;: &quot;john@example.com&quot;,&#xd;
                &quot;maritalstatus&quot;: &quot;Single&quot;,&#xd;
                &quot;nationality&quot;: &quot;Indian&quot;,&#xd;
                &quot;height&quot;: 175,&#xd;
                &quot;weight&quot;: 75,&#xd;
                &quot;educationid&quot;: 2,&#xd;
                &quot;occupationid&quot;: 3,&#xd;
                &quot;incomerangeid&quot;: 4,&#xd;
                &quot;proposer&quot;: true&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &#xd;
    &quot;kycDetails&quot;:{&#xd;
        &quot;kyctype&quot;:&quot;&quot;,&#xd;
        &quot;gmaplocation&quot;:&quot;&quot;,&#xd;
        &quot;apartment&quot;:&quot;&quot;,&#xd;
        &quot;landmark&quot;:&quot;&quot;,&#xd;
        &quot;pincode&quot;:1234,&#xd;
        &quot;city&quot;:&quot;&quot;,&#xd;
        &quot;state&quot;:&quot;&quot;,&#xd;
        &quot;addresstype&quot;:&quot;&quot;,&#xd;
        &quot;ckycflag&quot;: false,&#xd;
        &quot;ckycno&quot;: null,&#xd;
        &quot;digilocker&quot;: false,&#xd;
        &quot;maskedaadharnumber&quot;: null,&#xd;
        &quot;hypervergeovdstatus&quot;: true,&#xd;
        &quot;kycstatus&quot;: null,&#xd;
        &quot;photo&quot;: null,&#xd;
        &quot;errorMessage&quot;: null,&#xd;
        &quot;imageurl&quot;: &quot;https://prod-audit-portal-ind.s3.ap-south-1.amazonaws.com/gkyc-ap-south-1/readId/2023-09-20/qw9rjg/1695219582576-add2986b-966c-4bb5-a7e6-a1d28f495869/image.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAZRKK5ZMRVZOEGSPG%2F20230920%2Fap-south-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20230920T180233Z&amp;X-Amz-Expires=900&amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEPD%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCmFwLXNvdXRoLTEiRzBFAiEAh49nqNTJ2VDMmYYOjormlQvgN6vOtp8aK8NEWAOK9BwCIChzJ%2FNlZ46lFfN8HtF7KTROWgfLZeErKFDmG%2FsyDYoLKsgFCNn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQARoMNjU1Njc2NTI1MzQ3IgxRU6QftYHNOnhdWGEqnAU2HFKca1JHv%2F%2FAnb%2BhxQLp71VrSLQoWAQE2NFqZu3WMagHgEOZbWGfMGjnSkOx%2FharzGS6AKoUmE%2F0TY8KT1TBtfPlYP%2Bn1ux7XyW7Bx3qSLqhYbQfh3vVJWbfAfDutM7%2FBmQYLe%2FiGiUCfUjWMG6T0rXDtONhKQVXJm4wvnjxBB13yXvAQVwZWM1nObuEMvhQill8MJaCuoKR98nbx5hhkSOkaCTAMo%2BZH6B2CBR2zdOgPbdOpL%2BayrDNKJeOEkhnwE4lgBz6qxk5nT2LBMHdZZuciTMU9rSDnTlfLCrc13T%2B%2Bpcaw7Vu4OzR2wkNwOnaX75Cj1TJoKqKfnZsEhq0IXKZibAl%2BqJESZ72EtHrdX%2FXgNjPWRNKDCinMNQrfd61%2BSyA8iocsVEFrONUTB1mxWgjAz67aPhPJqlO96JfZbXH91UKDJiJd4fiXPJ4n4DABuSRuAXqMYaODi3RvI2aXSUTIPAYHMY0pO9LJZ1%2F16OLGDBAi7m9HK8XW7zVL7waBlZOKNduywuSz1ZlIpWAoCC5bX3LQa8zQY6sG4DFwaHDyFwNAIqc2iO0cAXzWb2jCo%2BALbcLEIIanzcOBQ7CG4f5WHmrgsO19W1y7uWcWBCYX2edcDS41fOBd9Qrqc2RwcIoiPJMeGcBM8eH0iez23x2pS%2BjDRpHC8cU6r8joQFJcJjSyahz%2BRXq4XKf5ZO8GQzf1gnF71p33fyT6%2B9MXy1WJzl21WfXMhBRBI7DbgnLzcyBC6vHdIUYAnOIW1b5qHfS09Pk1Irnzl1xfzas4IjSb0CwgD4HnhH4Ya68w0W6v9%2FkzJCcHR2sgPRBBe3pbjw7dffnB8YfCS2d5PSlEMPXDGCdnZ8yF6vKy0p%2FyZSgoZrzDETBCrSkUzDloKyoBjqxAZPLav4ZRorfps2SQ7%2FGbwCy7QsRKMZ9uy7d8MOEgU5Y5jE1hjVft8ihe4kSDcr3XrvCjBTTAyU2ha1NakueYTwakFCMT6xbAIx23HrH%2Bzu4Pgzw0SZK0roI2OCQXLr88fbpE4k1KN5b97FcF2d9oT8V3xEytYyyKGpdNHhRAKUH1N1aUcewewksNAe4wqX99P5WCkQU56usfisD9aabHwVOYItsbhIa7Br8ASGnGSOpHw%3D%3D&amp;X-Amz-Signature=30b954a772508d3f7bb9799c998723f42ec77725c67c8f983de5bc6c195f540a&amp;X-Amz-SignedHeaders=host&quot;,&#xd;
        &quot;idNumber&quot;: &quot;XXXXXXXX8553&quot;,&#xd;
        &quot;kycmodifiedpremium&quot;:&quot;2000&quot;&#xd;
    },&#xd;
    &quot;lifestylemedicaldetails&quot;: [&#xd;
        {&#xd;
            &quot;insuredMember&quot;: &quot;self&quot;,&#xd;
            &quot;name&quot;: &quot;john&quot;,&#xd;
            &quot;lifeStyleDetails&quot;: [&#xd;
                {&#xd;
                    &quot;habitName&quot;: &quot;smoking&quot;,&#xd;
                    &quot;habitCount&quot;: 3&#xd;
                }&#xd;
            ],&#xd;
            &quot;medicalDetails&quot;: [&#xd;
                {&#xd;
                    &quot;diseaseName&quot;: &quot;Hypertension&quot;,&#xd;
                    &quot;diagnosisStartDate&quot;: &quot;2023-09-15&quot;,&#xd;
                    &quot;lastConsultationDate&quot;: &quot;2023-09-30&quot;,&#xd;
                    &quot;surgeryName&quot;: &quot;None&quot;,&#xd;
                    &quot;treatmentGiven&quot;: &quot;Medication&quot;,&#xd;
                    &quot;otherComments&quot;: &quot;Patient is responding well to treatment.&quot;,&#xd;
                    &quot;disability&quot;: &quot;None&quot;,&#xd;
                    &quot;hospitalizationStartDate&quot;: &quot;2023-09-20&quot;,&#xd;
                    &quot;hospitalizationEndDate&quot;: &quot;2023-09-25&quot;,&#xd;
                    &quot;isPregnancy&quot;: false,&#xd;
                    &quot;expectedDelivery&quot;: null,&#xd;
                    &quot;previousPolicyNumber&quot;: &quot;POL123456&quot;,&#xd;
                    &quot;benefitType&quot;: &quot;Health&quot;,&#xd;
                    &quot;previousSumInsured&quot;: &quot;50000&quot;,&#xd;
                    &quot;isPreviousClaimed&quot;: true,&#xd;
                    &quot;isPrevProposalDeclined&quot;: false,&#xd;
                    &quot;proposalDeclComments&quot;: &quot;No previous proposal was declined.&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ],&#xd;
    &quot;currentstep&quot;: 5,&#xd;
    &quot;finalstep&quot;: 7&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${lifestyledetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/postData</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00p_POST_reviewanddeclaration ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 25,&#xd;
    &quot;super5&quot;: false,&#xd;
    &quot;super10&quot;: false,&#xd;
    &quot;super15&quot;: false,&#xd;
    &quot;sumInsured&quot;: 500000,&#xd;
    &quot;createdBy&quot;: &quot;user&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;user&quot;,&#xd;
    &quot;active&quot;: true,&#xd;
    &quot;selectedPlanId&quot;: 1,&#xd;
    &quot;selectedQuoteId&quot;: &quot;Q06cd9134-a87d-47d9-9d07-225028ac59a3&quot;,&#xd;
    &quot;proposalId&quot;: &quot;P-9d77508a-4848-40f5-aacd-5dde072657e6&quot;,&#xd;
    &quot;selfAge&quot;: 25,&#xd;
    &quot;spouseAge&quot;: 0,&#xd;
    &quot;son1age&quot;: 0,&#xd;
    &quot;son2age&quot;: 12,&#xd;
    &quot;son3age&quot;: 0,&#xd;
    &quot;son4age&quot;: 0,&#xd;
    &quot;daughter1age&quot;: 13,&#xd;
    &quot;daughter2age&quot;: 0,&#xd;
    &quot;daughter3age&quot;: 0,&#xd;
    &quot;daughter4age&quot;: 0,&#xd;
    &quot;fatherAge&quot;: 0,&#xd;
    &quot;motherAge&quot;: 0,&#xd;
    &quot;fatherinlawage&quot;: 0,&#xd;
    &quot;motherinlawage&quot;: 0,&#xd;
    &quot;gender&quot;: &quot;Male&quot;,&#xd;
    &quot;locationPin&quot;: 400025,&#xd;
    &quot;existingInsurance&quot;: false,&#xd;
    &quot;existingpolicyType&quot;: null,&#xd;
    &quot;existingCoverage&quot;: 0,&#xd;
    &quot;kycmodifiedpremium&quot;: &quot;&quot;,&#xd;
    &quot;ghddiscount&quot;: &quot;&quot;,&#xd;
    &quot;addonDetails&quot;: [&#xd;
        {&#xd;
            &quot;addoninsured&quot;: &quot;self&quot;,&#xd;
            &quot;addonname&quot;: &quot;Future Secure&quot;,&#xd;
            &quot;addoninput&quot;: &quot;12&quot;,&#xd;
            &quot;premium&quot;: 8.7&#xd;
        }&#xd;
    ],&#xd;
    &quot;planDetails&quot;: [&#xd;
        {&#xd;
            &quot;planId&quot;: 1,&#xd;
            &quot;planCode&quot;: &quot;7100100002&quot;,&#xd;
            &quot;planName&quot;: &quot;ABHI Activ Fit Plus&quot;,&#xd;
            &quot;sumInsured&quot;: 500000,&#xd;
            &quot;this_plan_is_for&quot;: &quot;For Health conscious people who stay active&quot;,&#xd;
            &quot;premiumAmount&quot;: 11327.0,&#xd;
            &quot;policyType&quot;: &quot;Family Floater&quot;,&#xd;
            &quot;deductible&quot;: &quot;0.0&quot;,&#xd;
            &quot;quoteId&quot;: &quot;Q-a091c9a0-c1d3-4d4a-9e7e-067320076e8d&quot;,&#xd;
            &quot;usp&quot;: [&#xd;
                &quot;Unlimited Refill&quot;,&#xd;
                &quot;Policy Premium Return&quot;,&#xd;
                &quot;Good Health Discount&quot;,&#xd;
                &quot;Pre &amp; Post Hospitalisation&quot;,&#xd;
                &quot;Early Bird Discount&quot;&#xd;
            ]&#xd;
        },&#xd;
        {&#xd;
            &quot;planId&quot;: 4,&#xd;
            &quot;planCode&quot;: &quot;6212100004&quot;,&#xd;
            &quot;planName&quot;: &quot;ABHI Activ Health Platinum Essential&quot;,&#xd;
            &quot;sumInsured&quot;: 500000,&#xd;
            &quot;this_plan_is_for&quot;: &quot;People looking for a wide range of health and wellness benefits&quot;,&#xd;
            &quot;premiumAmount&quot;: 8698.0,&#xd;
            &quot;policyType&quot;: &quot;Family Floater&quot;,&#xd;
            &quot;deductible&quot;: &quot;0.0&quot;,&#xd;
            &quot;quoteId&quot;: &quot;Q-81affd2d-c227-42ca-9278-6f53351c7460&quot;,&#xd;
            &quot;usp&quot;: [&#xd;
                &quot;Day 1 cover for chronic diseases&quot;,&#xd;
                &quot;No Claim Bonus&quot;,&#xd;
                &quot;Policy Premium Return&quot;,&#xd;
                &quot;Expert Health Assistance&quot;,&#xd;
                &quot;Cashless Home Treatment&quot;&#xd;
            ]&#xd;
        }&#xd;
    ],&#xd;
    &quot;proposerInsuredDetails&quot;: {&#xd;
        &quot;nominee&quot;: {&#xd;
            &quot;nomineename&quot;: &quot;Jane Doe&quot;,&#xd;
            &quot;nomineemno&quot;: &quot;9876543210&quot;,&#xd;
            &quot;nomineerelationcode&quot;: 1&#xd;
        },&#xd;
        &quot;proposerInsured&quot;: [&#xd;
            { &#xd;
                &quot;insuredmember&quot;: &quot;self&quot;,&#xd;
                &quot;name&quot;: &quot;John&quot;,&#xd;
                &quot;dob&quot;: &quot;1985-10-15&quot;,&#xd;
                &quot;mno&quot;: &quot;1234567890&quot;,&#xd;
                &quot;panno&quot;: &quot;AWAPR91955F&quot;,&#xd;
                &quot;mailid&quot;: &quot;john@example.com&quot;,&#xd;
                &quot;maritalstatus&quot;: &quot;Single&quot;,&#xd;
                &quot;nationality&quot;: &quot;Indian&quot;,&#xd;
                &quot;height&quot;: 175,&#xd;
                &quot;weight&quot;: 75,&#xd;
                &quot;educationid&quot;: 2,&#xd;
                &quot;occupationid&quot;: 3,&#xd;
                &quot;incomerangeid&quot;: 4,&#xd;
                &quot;proposer&quot;: true&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &#xd;
    &quot;kycDetails&quot;: {&#xd;
        &quot;kyctype&quot;: &quot;&quot;,&#xd;
        &quot;gmaplocation&quot;: &quot;&quot;,&#xd;
        &quot;apartment&quot;: &quot;&quot;,&#xd;
        &quot;landmark&quot;: &quot;&quot;,&#xd;
        &quot;pincode&quot;: 1234,&#xd;
        &quot;city&quot;: &quot;&quot;,&#xd;
        &quot;state&quot;: &quot;&quot;,&#xd;
        &quot;addresstype&quot;: &quot;&quot;,&#xd;
        &quot;ckycflag&quot;: false,&#xd;
        &quot;ckycno&quot;: null,&#xd;
        &quot;digilocker&quot;: false,&#xd;
        &quot;maskedaadharnumber&quot;: null,&#xd;
        &quot;hypervergeovdstatus&quot;: true,&#xd;
        &quot;kycstatus&quot;: null,&#xd;
        &quot;photo&quot;: null,&#xd;
        &quot;errorMessage&quot;: null,&#xd;
        &quot;imageurl&quot;: &quot;https://prod-audit-portal-ind.s3.ap-south-1.amazonaws.com/gkyc-ap-south-1/readId/2023-09-20/qw9rjg/1695219582576-add2986b-966c-4bb5-a7e6-a1d28f495869/image.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAZRKK5ZMRVZOEGSPG%2F20230920%2Fap-south-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20230920T180233Z&amp;X-Amz-Expires=900&amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEPD%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCmFwLXNvdXRoLTEiRzBFAiEAh49nqNTJ2VDMmYYOjormlQvgN6vOtp8aK8NEWAOK9BwCIChzJ%2FNlZ46lFfN8HtF7KTROWgfLZeErKFDmG%2FsyDYoLKsgFCNn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQARoMNjU1Njc2NTI1MzQ3IgxRU6QftYHNOnhdWGEqnAU2HFKca1JHv%2F%2FAnb%2BhxQLp71VrSLQoWAQE2NFqZu3WMagHgEOZbWGfMGjnSkOx%2FharzGS6AKoUmE%2F0TY8KT1TBtfPlYP%2Bn1ux7XyW7Bx3qSLqhYbQfh3vVJWbfAfDutM7%2FBmQYLe%2FiGiUCfUjWMG6T0rXDtONhKQVXJm4wvnjxBB13yXvAQVwZWM1nObuEMvhQill8MJaCuoKR98nbx5hhkSOkaCTAMo%2BZH6B2CBR2zdOgPbdOpL%2BayrDNKJeOEkhnwE4lgBz6qxk5nT2LBMHdZZuciTMU9rSDnTlfLCrc13T%2B%2Bpcaw7Vu4OzR2wkNwOnaX75Cj1TJoKqKfnZsEhq0IXKZibAl%2BqJESZ72EtHrdX%2FXgNjPWRNKDCinMNQrfd61%2BSyA8iocsVEFrONUTB1mxWgjAz67aPhPJqlO96JfZbXH91UKDJiJd4fiXPJ4n4DABuSRuAXqMYaODi3RvI2aXSUTIPAYHMY0pO9LJZ1%2F16OLGDBAi7m9HK8XW7zVL7waBlZOKNduywuSz1ZlIpWAoCC5bX3LQa8zQY6sG4DFwaHDyFwNAIqc2iO0cAXzWb2jCo%2BALbcLEIIanzcOBQ7CG4f5WHmrgsO19W1y7uWcWBCYX2edcDS41fOBd9Qrqc2RwcIoiPJMeGcBM8eH0iez23x2pS%2BjDRpHC8cU6r8joQFJcJjSyahz%2BRXq4XKf5ZO8GQzf1gnF71p33fyT6%2B9MXy1WJzl21WfXMhBRBI7DbgnLzcyBC6vHdIUYAnOIW1b5qHfS09Pk1Irnzl1xfzas4IjSb0CwgD4HnhH4Ya68w0W6v9%2FkzJCcHR2sgPRBBe3pbjw7dffnB8YfCS2d5PSlEMPXDGCdnZ8yF6vKy0p%2FyZSgoZrzDETBCrSkUzDloKyoBjqxAZPLav4ZRorfps2SQ7%2FGbwCy7QsRKMZ9uy7d8MOEgU5Y5jE1hjVft8ihe4kSDcr3XrvCjBTTAyU2ha1NakueYTwakFCMT6xbAIx23HrH%2Bzu4Pgzw0SZK0roI2OCQXLr88fbpE4k1KN5b97FcF2d9oT8V3xEytYyyKGpdNHhRAKUH1N1aUcewewksNAe4wqX99P5WCkQU56usfisD9aabHwVOYItsbhIa7Br8ASGnGSOpHw%3D%3D&amp;X-Amz-Signature=30b954a772508d3f7bb9799c998723f42ec77725c67c8f983de5bc6c195f540a&amp;X-Amz-SignedHeaders=host&quot;,&#xd;
        &quot;idNumber&quot;: &quot;XXXXXXXX8553&quot;,&#xd;
        &quot;kycmodifiedpremium&quot;: &quot;2000&quot;&#xd;
    },&#xd;
    &quot;lifestylemedicaldetails&quot;: [&#xd;
        {&#xd;
            &quot;insuredMember&quot;: &quot;self&quot;,&#xd;
            &quot;name&quot;: &quot;john&quot;,&#xd;
            &quot;lifeStyleDetails&quot;: [&#xd;
                {&#xd;
                    &quot;habitName&quot;: &quot;smoking&quot;,&#xd;
                    &quot;habitCount&quot;: 3&#xd;
                }&#xd;
            ],&#xd;
            &quot;medicalDetails&quot;: [&#xd;
                {&#xd;
                    &quot;diseaseName&quot;: &quot;Hypertension&quot;,&#xd;
                    &quot;diagnosisStartDate&quot;: &quot;2023-09-15&quot;,&#xd;
                    &quot;lastConsultationDate&quot;: &quot;2023-09-30&quot;,&#xd;
                    &quot;surgeryName&quot;: &quot;None&quot;,&#xd;
                    &quot;treatmentGiven&quot;: &quot;Medication&quot;,&#xd;
                    &quot;otherComments&quot;: &quot;Patient is responding well to treatment.&quot;,&#xd;
                    &quot;disability&quot;: &quot;None&quot;,&#xd;
                    &quot;hospitalizationStartDate&quot;: &quot;2023-09-20&quot;,&#xd;
                    &quot;hospitalizationEndDate&quot;: &quot;2023-09-25&quot;,&#xd;
                    &quot;isPregnancy&quot;: false,&#xd;
                    &quot;expectedDelivery&quot;: null,&#xd;
                    &quot;previousPolicyNumber&quot;: &quot;POL123456&quot;,&#xd;
                    &quot;benefitType&quot;: &quot;Health&quot;,&#xd;
                    &quot;previousSumInsured&quot;: &quot;50000&quot;,&#xd;
                    &quot;isPreviousClaimed&quot;: true,&#xd;
                    &quot;isPrevProposalDeclined&quot;: false,&#xd;
                    &quot;proposalDeclComments&quot;: &quot;No previous proposal was declined.&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ],&#xd;
    &quot;reviewDeclDetails&quot;: {&#xd;
        &quot;isstpFlag&quot;: true,&#xd;
        &quot;policyTenure&quot;: 10,&#xd;
        &quot;iseiaAccount&quot;: true,&#xd;
        &quot;isregisterPolicyInEia&quot;: false,&#xd;
        &quot;eiaNumber&quot;: 9876,&#xd;
        &quot;registerPolicyInEiaValue&quot;: &quot;No&quot;,&#xd;
        &quot;esignStatus&quot;: true,&#xd;
        &quot;isGHDApplicable&quot;: &quot;Y&quot;,&#xd;
        &quot;ghdDetails&quot;: [&#xd;
            {&#xd;
                &quot;ghdInsuredMember&quot;: &quot;John Doe&quot;,&#xd;
                &quot;isghdFlag&quot;: true,&#xd;
                &quot;ghddiscount&quot;: &quot;20&quot;,&#xd;
                &quot;ghdqstns&quot;: [&#xd;
                    {&#xd;
                        &quot;ghdQstn&quot;: &quot;ascdas&quot;,&#xd;
                        &quot;ghdAns&quot;: &quot;DCac&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;ghdQstn&quot;: &quot;ascdas&quot;,&#xd;
                        &quot;ghdAns&quot;: &quot;DCac&quot;&#xd;
                    }&#xd;
                ]&#xd;
            },&#xd;
            {&#xd;
                &quot;ghdInsuredMember&quot;: &quot;John&quot;,&#xd;
                &quot;isghdFlag&quot;: true,&#xd;
                &quot;ghddiscount&quot;: &quot;20&quot;,&#xd;
                &quot;ghdqstns&quot;: [&#xd;
                    {&#xd;
                        &quot;ghdQstn&quot;: &quot;ascdas&quot;,&#xd;
                        &quot;ghdAns&quot;: &quot;DCac&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;ghdQstn&quot;: &quot;ascdas&quot;,&#xd;
                        &quot;ghdAns&quot;: &quot;DCac&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;currentstep&quot;: 6,&#xd;
    &quot;finalstep&quot;: 7&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${reviewanddeclaration}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/postData</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00q_POST_buydetails ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 25,&#xd;
    &quot;super5&quot;: false,&#xd;
    &quot;super10&quot;: false,&#xd;
    &quot;super15&quot;: false,&#xd;
    &quot;sumInsured&quot;: 500000,&#xd;
    &quot;createdBy&quot;: &quot;user&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;user&quot;,&#xd;
    &quot;active&quot;: true,&#xd;
    &quot;selectedPlanId&quot;: 1,&#xd;
    &quot;selectedQuoteId&quot;: &quot;Q06cd9134-a87d-47d9-9d07-225028ac59a3&quot;,&#xd;
    &quot;proposalId&quot;: &quot;P-9d77508a-4848-40f5-aacd-5dde072657e6&quot;,&#xd;
    &quot;selfAge&quot;: 25,&#xd;
    &quot;spouseAge&quot;: 0,&#xd;
    &quot;son1age&quot;: 0,&#xd;
    &quot;son2age&quot;: 12,&#xd;
    &quot;son3age&quot;: 0,&#xd;
    &quot;son4age&quot;: 0,&#xd;
    &quot;daughter1age&quot;: 13,&#xd;
    &quot;daughter2age&quot;: 0,&#xd;
    &quot;daughter3age&quot;: 0,&#xd;
    &quot;daughter4age&quot;: 0,&#xd;
    &quot;fatherAge&quot;: 0,&#xd;
    &quot;motherAge&quot;: 0,&#xd;
    &quot;fatherinlawage&quot;: 0,&#xd;
    &quot;motherinlawage&quot;: 0,&#xd;
    &quot;gender&quot;: &quot;Male&quot;,&#xd;
    &quot;locationPin&quot;: 400025,&#xd;
    &quot;existingInsurance&quot;: false,&#xd;
    &quot;existingpolicyType&quot;: null,&#xd;
    &quot;existingCoverage&quot;: 0,&#xd;
    &quot;kycmodifiedpremium&quot;: &quot;&quot;,&#xd;
    &quot;ghddiscount&quot;: &quot;&quot;,&#xd;
    &quot;addonDetails&quot;: [&#xd;
        {&#xd;
            &quot;addoninsured&quot;: &quot;self&quot;,&#xd;
            &quot;addonname&quot;: &quot;Future Secure&quot;,&#xd;
            &quot;addoninput&quot;: &quot;12&quot;,&#xd;
            &quot;premium&quot;: 8.7&#xd;
        }&#xd;
    ],&#xd;
    &quot;planDetails&quot;: [&#xd;
        {&#xd;
            &quot;planId&quot;: 1,&#xd;
            &quot;planCode&quot;: &quot;7100100002&quot;,&#xd;
            &quot;planName&quot;: &quot;ABHI Activ Fit Plus&quot;,&#xd;
            &quot;sumInsured&quot;: 500000,&#xd;
            &quot;this_plan_is_for&quot;: &quot;For Health conscious people who stay active&quot;,&#xd;
            &quot;premiumAmount&quot;: 11327.0,&#xd;
            &quot;policyType&quot;: &quot;Family Floater&quot;,&#xd;
            &quot;deductible&quot;: &quot;0.0&quot;,&#xd;
            &quot;quoteId&quot;: &quot;Q-a091c9a0-c1d3-4d4a-9e7e-067320076e8d&quot;,&#xd;
            &quot;usp&quot;: [&#xd;
                &quot;Unlimited Refill&quot;,&#xd;
                &quot;Policy Premium Return&quot;,&#xd;
                &quot;Good Health Discount&quot;,&#xd;
                &quot;Pre &amp; Post Hospitalisation&quot;,&#xd;
                &quot;Early Bird Discount&quot;&#xd;
            ]&#xd;
        },&#xd;
        {&#xd;
            &quot;planId&quot;: 4,&#xd;
            &quot;planCode&quot;: &quot;6212100004&quot;,&#xd;
            &quot;planName&quot;: &quot;ABHI Activ Health Platinum Essential&quot;,&#xd;
            &quot;sumInsured&quot;: 500000,&#xd;
            &quot;this_plan_is_for&quot;: &quot;People looking for a wide range of health and wellness benefits&quot;,&#xd;
            &quot;premiumAmount&quot;: 8698.0,&#xd;
            &quot;policyType&quot;: &quot;Family Floater&quot;,&#xd;
            &quot;deductible&quot;: &quot;0.0&quot;,&#xd;
            &quot;quoteId&quot;: &quot;Q-81affd2d-c227-42ca-9278-6f53351c7460&quot;,&#xd;
            &quot;usp&quot;: [&#xd;
                &quot;Day 1 cover for chronic diseases&quot;,&#xd;
                &quot;No Claim Bonus&quot;,&#xd;
                &quot;Policy Premium Return&quot;,&#xd;
                &quot;Expert Health Assistance&quot;,&#xd;
                &quot;Cashless Home Treatment&quot;&#xd;
            ]&#xd;
        }&#xd;
    ],&#xd;
    &quot;proposerInsuredDetails&quot;: {&#xd;
        &quot;nominee&quot;: {&#xd;
            &quot;nomineename&quot;: &quot;Jane Doe&quot;,&#xd;
            &quot;nomineemno&quot;: &quot;9876543210&quot;,&#xd;
            &quot;nomineerelationcode&quot;: 1&#xd;
        },&#xd;
        &quot;proposerInsured&quot;: [&#xd;
            { &#xd;
                &quot;insuredmember&quot;: &quot;self&quot;,&#xd;
                &quot;name&quot;: &quot;John&quot;,&#xd;
                &quot;dob&quot;: &quot;1985-10-15&quot;,&#xd;
                &quot;mno&quot;: &quot;1234567890&quot;,&#xd;
                &quot;panno&quot;: &quot;AWAPR91955F&quot;,&#xd;
                &quot;mailid&quot;: &quot;john@example.com&quot;,&#xd;
                &quot;maritalstatus&quot;: &quot;Single&quot;,&#xd;
                &quot;nationality&quot;: &quot;Indian&quot;,&#xd;
                &quot;height&quot;: 175,&#xd;
                &quot;weight&quot;: 75,&#xd;
                &quot;educationid&quot;: 2,&#xd;
                &quot;occupationid&quot;: 3,&#xd;
                &quot;incomerangeid&quot;: 4,&#xd;
                &quot;proposer&quot;: true&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;kycDetails&quot;: {&#xd;
        &quot;kyctype&quot;: &quot;&quot;,&#xd;
        &quot;gmaplocation&quot;: &quot;&quot;,&#xd;
        &quot;apartment&quot;: &quot;&quot;,&#xd;
        &quot;landmark&quot;: &quot;&quot;,&#xd;
        &quot;pincode&quot;: 1234,&#xd;
        &quot;city&quot;: &quot;&quot;,&#xd;
        &quot;state&quot;: &quot;&quot;,&#xd;
        &quot;addresstype&quot;: &quot;&quot;,&#xd;
        &quot;ckycflag&quot;: false,&#xd;
        &quot;ckycno&quot;: null,&#xd;
        &quot;digilocker&quot;: false,&#xd;
        &quot;maskedaadharnumber&quot;: null,&#xd;
        &quot;hypervergeovdstatus&quot;: true,&#xd;
        &quot;kycstatus&quot;: null,&#xd;
        &quot;photo&quot;: null,&#xd;
        &quot;errorMessage&quot;: null,&#xd;
        &quot;imageurl&quot;: &quot;https://prod-audit-portal-ind.s3.ap-south-1.amazonaws.com/gkyc-ap-south-1/readId/2023-09-20/qw9rjg/1695219582576-add2986b-966c-4bb5-a7e6-a1d28f495869/image.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAZRKK5ZMRVZOEGSPG%2F20230920%2Fap-south-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20230920T180233Z&amp;X-Amz-Expires=900&amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEPD%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCmFwLXNvdXRoLTEiRzBFAiEAh49nqNTJ2VDMmYYOjormlQvgN6vOtp8aK8NEWAOK9BwCIChzJ%2FNlZ46lFfN8HtF7KTROWgfLZeErKFDmG%2FsyDYoLKsgFCNn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQARoMNjU1Njc2NTI1MzQ3IgxRU6QftYHNOnhdWGEqnAU2HFKca1JHv%2F%2FAnb%2BhxQLp71VrSLQoWAQE2NFqZu3WMagHgEOZbWGfMGjnSkOx%2FharzGS6AKoUmE%2F0TY8KT1TBtfPlYP%2Bn1ux7XyW7Bx3qSLqhYbQfh3vVJWbfAfDutM7%2FBmQYLe%2FiGiUCfUjWMG6T0rXDtONhKQVXJm4wvnjxBB13yXvAQVwZWM1nObuEMvhQill8MJaCuoKR98nbx5hhkSOkaCTAMo%2BZH6B2CBR2zdOgPbdOpL%2BayrDNKJeOEkhnwE4lgBz6qxk5nT2LBMHdZZuciTMU9rSDnTlfLCrc13T%2B%2Bpcaw7Vu4OzR2wkNwOnaX75Cj1TJoKqKfnZsEhq0IXKZibAl%2BqJESZ72EtHrdX%2FXgNjPWRNKDCinMNQrfd61%2BSyA8iocsVEFrONUTB1mxWgjAz67aPhPJqlO96JfZbXH91UKDJiJd4fiXPJ4n4DABuSRuAXqMYaODi3RvI2aXSUTIPAYHMY0pO9LJZ1%2F16OLGDBAi7m9HK8XW7zVL7waBlZOKNduywuSz1ZlIpWAoCC5bX3LQa8zQY6sG4DFwaHDyFwNAIqc2iO0cAXzWb2jCo%2BALbcLEIIanzcOBQ7CG4f5WHmrgsO19W1y7uWcWBCYX2edcDS41fOBd9Qrqc2RwcIoiPJMeGcBM8eH0iez23x2pS%2BjDRpHC8cU6r8joQFJcJjSyahz%2BRXq4XKf5ZO8GQzf1gnF71p33fyT6%2B9MXy1WJzl21WfXMhBRBI7DbgnLzcyBC6vHdIUYAnOIW1b5qHfS09Pk1Irnzl1xfzas4IjSb0CwgD4HnhH4Ya68w0W6v9%2FkzJCcHR2sgPRBBe3pbjw7dffnB8YfCS2d5PSlEMPXDGCdnZ8yF6vKy0p%2FyZSgoZrzDETBCrSkUzDloKyoBjqxAZPLav4ZRorfps2SQ7%2FGbwCy7QsRKMZ9uy7d8MOEgU5Y5jE1hjVft8ihe4kSDcr3XrvCjBTTAyU2ha1NakueYTwakFCMT6xbAIx23HrH%2Bzu4Pgzw0SZK0roI2OCQXLr88fbpE4k1KN5b97FcF2d9oT8V3xEytYyyKGpdNHhRAKUH1N1aUcewewksNAe4wqX99P5WCkQU56usfisD9aabHwVOYItsbhIa7Br8ASGnGSOpHw%3D%3D&amp;X-Amz-Signature=30b954a772508d3f7bb9799c998723f42ec77725c67c8f983de5bc6c195f540a&amp;X-Amz-SignedHeaders=host&quot;,&#xd;
        &quot;idNumber&quot;: &quot;XXXXXXXX8553&quot;,&#xd;
        &quot;kycmodifiedpremium&quot;: &quot;2000&quot;&#xd;
    },&#xd;
    &quot;lifestylemedicaldetails&quot;: [&#xd;
        {&#xd;
            &quot;insuredMember&quot;: &quot;self&quot;,&#xd;
            &quot;name&quot;: &quot;john&quot;,&#xd;
            &quot;lifeStyleDetails&quot;: [&#xd;
                {&#xd;
                    &quot;habitName&quot;: &quot;smoking&quot;,&#xd;
                    &quot;habitCount&quot;: 3&#xd;
                }&#xd;
            ],&#xd;
            &quot;medicalDetails&quot;: [&#xd;
                {&#xd;
                    &quot;diseaseName&quot;: &quot;Hypertension&quot;,&#xd;
                    &quot;diagnosisStartDate&quot;: &quot;2023-09-15&quot;,&#xd;
                    &quot;lastConsultationDate&quot;: &quot;2023-09-30&quot;,&#xd;
                    &quot;surgeryName&quot;: &quot;None&quot;,&#xd;
                    &quot;treatmentGiven&quot;: &quot;Medication&quot;,&#xd;
                    &quot;otherComments&quot;: &quot;Patient is responding well to treatment.&quot;,&#xd;
                    &quot;disability&quot;: &quot;None&quot;,&#xd;
                    &quot;hospitalizationStartDate&quot;: &quot;2023-09-20&quot;,&#xd;
                    &quot;hospitalizationEndDate&quot;: &quot;2023-09-25&quot;,&#xd;
                    &quot;isPregnancy&quot;: false,&#xd;
                    &quot;expectedDelivery&quot;: null,&#xd;
                    &quot;previousPolicyNumber&quot;: &quot;POL123456&quot;,&#xd;
                    &quot;benefitType&quot;: &quot;Health&quot;,&#xd;
                    &quot;previousSumInsured&quot;: &quot;50000&quot;,&#xd;
                    &quot;isPreviousClaimed&quot;: true,&#xd;
                    &quot;isPrevProposalDeclined&quot;: false,&#xd;
                    &quot;proposalDeclComments&quot;: &quot;No previous proposal was declined.&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ],&#xd;
    &quot;reviewDeclDetails&quot;: {&#xd;
        &quot;isstpFlag&quot;: true,&#xd;
        &quot;policyTenure&quot;: 10,&#xd;
        &quot;iseiaAccount&quot;: true,&#xd;
        &quot;isregisterPolicyInEia&quot;: false,&#xd;
        &quot;eiaNumber&quot;: 9876,&#xd;
        &quot;registerPolicyInEiaValue&quot;: &quot;No&quot;,&#xd;
        &quot;esignStatus&quot;: true,&#xd;
        &quot;isGHDApplicable&quot;: &quot;Y&quot;,&#xd;
        &quot;ghdDetails&quot;: [&#xd;
            {&#xd;
                &quot;ghdInsuredMember&quot;: &quot;John Doe&quot;,&#xd;
                &quot;isghdFlag&quot;: true,&#xd;
                &quot;ghddiscount&quot;: &quot;20&quot;,&#xd;
                &quot;ghdqstns&quot;: [&#xd;
                    {&#xd;
                        &quot;ghdQstn&quot;: &quot;ascdas&quot;,&#xd;
                        &quot;ghdAns&quot;: &quot;DCac&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;ghdQstn&quot;: &quot;ascdas&quot;,&#xd;
                        &quot;ghdAns&quot;: &quot;DCac&quot;&#xd;
                    }&#xd;
                ]&#xd;
            },&#xd;
            {&#xd;
                &quot;ghdInsuredMember&quot;: &quot;John&quot;,&#xd;
                &quot;isghdFlag&quot;: true,&#xd;
                &quot;ghddiscount&quot;: &quot;20&quot;,&#xd;
                &quot;ghdqstns&quot;: [&#xd;
                    {&#xd;
                        &quot;ghdQstn&quot;: &quot;ascdas&quot;,&#xd;
                        &quot;ghdAns&quot;: &quot;DCac&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;ghdQstn&quot;: &quot;ascdas&quot;,&#xd;
                        &quot;ghdAns&quot;: &quot;DCac&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;buydetails&quot;: {&#xd;
        &quot;paymentType&quot;: &quot;Credit Card&quot;,&#xd;
        &quot;paymentStatus&quot;: true,&#xd;
        &quot;isStp&quot;: false,&#xd;
        &quot;transactionNumber&quot;: &quot;1234567890&quot;,&#xd;
        &quot;policyNumber&quot;: &quot;POL-12345&quot;,&#xd;
        &quot;receiptNumber&quot;: &quot;RCT-98765&quot;&#xd;
    },&#xd;
    &quot;currentstep&quot;: 7,&#xd;
    &quot;finalstep&quot;: 7&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${buydetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsurance/healthinsurance/buydetails</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HealthInsurance_07_00r_POST_resultkyc ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${resultkyc}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-healthinsuranc/kyc/result/ABCD12345678/25</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="VasCredit ${CounterValue}" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VasCredit_11_00a_POST_GetScore${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: ${customerId},&#xd;
    &quot;name&quot;: &quot;${name}&quot;,&#xd;
    &quot;mobileNumber&quot;: &quot;${mobileNumber}&quot;,&#xd;
    &quot;verifiedWithId&quot;: ${verifiedWithId},&#xd;
    &quot;refresh&quot;: false&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GetScore}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-credit-vas/oneappabc/adityabirla/api/v1/vascredit/score</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VasCredit_11_00b_POST_UserConcent${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: ${customerId},&#xd;
    &quot;name&quot;: &quot;${name}&quot;,&#xd;
    &quot;mobileNumber&quot;: &quot;${mobileNumber}&quot;,&#xd;
    &quot;refresh&quot;: false&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${UserConcent}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-credit-vas/oneappabc/adityabirla/api/v1/vascredit/userconsent</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VasCredit_11_00c_POST_Refresh${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:${customerId},&#xd;
    &quot;name&quot;: &quot;${name}&quot;,&#xd;
    &quot;mobileNumber&quot;: &quot;${mobileNumber}&quot;,&#xd;
    &quot;refresh&quot;:false&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${Refresh}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-credit-vas/oneappabc/adityabirla/api/v1/vascredit/refresh</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VasCredit_11_00d_POST_CreditAccounts${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: ${customerId},&#xd;
    &quot;name&quot;: &quot;${name}&quot;,&#xd;
    &quot;mobileNumber&quot;: &quot;${mobileNumber}&quot;,&#xd;
    &quot;refresh&quot;: false&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${CreditAccounts}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-credit-vas/oneappabc/adityabirla/api/v1/vascredit/creditaccounts</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VasCredit_11_00e_POST_History${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: ${customerId},&#xd;
    &quot;name&quot;: &quot;${name}&quot;,&#xd;
    &quot;mobileNumber&quot;: &quot;${mobileNumber}&quot;,&#xd;
    &quot;refresh&quot;: false,&#xd;
    &quot;accountId&quot;: &quot;${accountId}&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${History}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-credit-vas/oneappabc/adityabirla/api/v1/vascredit/creditaccounts/history</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VasCredit_11_00f_GET_CreditTooltips${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${CreditTooltips}${__Random(300,900,)}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-credit-vas/oneappabc/adityabirla/api/v1/vascredit/tips?creditScore=330</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VasCredit_11_00g_POST_PDFGeneration${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:${customerId},&#xd;
    &quot;name&quot;: &quot;${name}&quot;,&#xd;
    &quot;verifiedWithId&quot;: ${verifiedWithId},&#xd;
    &quot;mobileNumber&quot;: &quot;${mobileNumber}&quot;,&#xd;
    &quot;refresh&quot;:false&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${PDFGeneration}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-credit-vas/oneappabc/adityabirla/api/v1/vascredit/creditreport</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.refname">customerId</stringProp>
            </RegexExtractor>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VasCredit_11_00h_POST_ReportDetails${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:${customerId},&#xd;
    &quot;name&quot;: &quot;${name}&quot;,&#xd;
    &quot;mobileNumber&quot;: &quot;${mobileNumber}&quot;,&#xd;
    &quot;refresh&quot;:false&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${ReportDetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-credit-vas/oneappabc/adityabirla/api/v1/vascredit/reportdetails</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VasCredit_11_00i_POST_Simulator${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&#xd;
    &quot;customerId&quot;: ${customerId},&#xd;
    &quot;name&quot;: &quot;${name}&quot;,&#xd;
    &quot;mobileNumber&quot;: &quot;${mobileNumber}&quot;,&#xd;
    &quot;verifiedWithId&quot;: ${verifiedWithId},&#xd;
    &quot;refresh&quot;: false,&#xd;
    &quot;dob&quot;: ${dob},&#xd;
    &quot;gender&quot;: &quot;&quot;,&#xd;
    &quot;inquiryAddresses&quot;: [&#xd;
        {&#xd;
            &quot;seq&quot;: &quot;1&quot;,&#xd;
            &quot;AddressType&quot;: [&#xd;
                &quot;H&quot;,&#xd;
                &quot;P&quot;&#xd;
            ],&#xd;
            &quot;AddressLine1&quot;: ${AddressLine1},&#xd;
            &quot;AddressLine2&quot;: &quot;&quot;,&#xd;
            &quot;Locality&quot;: &quot;&quot;,&#xd;
            &quot;City&quot;: &quot;&quot;,&#xd;
            &quot;State&quot;: ${State},&#xd;
            &quot;Postal&quot;: ${Postal}&#xd;
        }&#xd;
    ],&#xd;
&#xd;
    &quot;customFields&quot;: [&#xd;
        {&#xd;
            &quot;key&quot;: &quot;EventName&quot;,&#xd;
            &quot;value&quot;: ${EventValue}&#xd;
        },&#xd;
        {&#xd;
            &quot;key&quot;: &quot;CurrentBalance&quot;,&#xd;
            &quot;value&quot;: ${CurrentBalanceValue}&#xd;
        },&#xd;
        {&#xd;
            &quot;key&quot;: &quot;OverdueAmount&quot;,&#xd;
            &quot;value&quot;: ${value3OverdueAmountValue}&#xd;
        },&#xd;
        {&#xd;
            &quot;key&quot;: &quot;ProductType&quot;,&#xd;
            &quot;value&quot;: ${ProductValue}&#xd;
        }&#xd;
&#xd;
    ]&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${Simulator}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-credit-vas/oneappabc/adityabirla/api/v1/vascredit/simulator</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VasCredit_11_00j_GET_LoanType${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${LoanType}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-credit-vas/oneappabc/adityabirla/api/v1/vascredit/getloantypelist</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">200</stringProp>
              <stringProp name="RandomTimer.range">1000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="VasCreditPathURI" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">C:/Endurance/VAS Credit/VasCreditPath.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="TestPlan.comments">PathURI</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
            <collectionProp name="CookieManager.cookies"/>
            <boolProp name="CookieManager.clearEachIteration">true</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
          <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="false">
            <boolProp name="clearEachIteration">true</boolProp>
            <boolProp name="useExpires">true</boolProp>
            <boolProp name="CacheManager.controlledByThread">false</boolProp>
          </CacheManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">CounterValue</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="VasCreditRequest" enabled="true">
            <stringProp name="filename">C:/Endurance/VAS Credit/VasCreditRequest.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <stringProp name="TestPlan.comments">Header</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Mutual Fund ${CounterValue}" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00a_POST_sip-calculator ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;monthlyInvestAmt&quot;: ${__Random(100000,500000)},&#xd;
  &quot;expectedAnnualReturns&quot;: ${__Random(100000,500000)},&#xd;
  &quot;investedPeriod&quot;: ${__Random(10,30)}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${sip-calculator}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/sip-calculator</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00b_POST_riskprofile ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customerId&quot;: ${__Random(4,8,)},&#xd;
  &quot;score&quot;: 10,&#xd;
  &quot;createdBy&quot;: &quot;MANI&quot;,&#xd;
  &quot;modifiedBy&quot;: &quot;Eva&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${RiskProfile}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/riskprofile</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00c_GET_pro-investment ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${GETProInvestment}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/pro-investment</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00d_POST_pro-investment ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customerId&quot;: 1,&#xd;
  &quot;totalInvestment&quot;: ${__Random(1000,2000,)},&#xd;
  &quot;schemeCode1&quot;: &quot;121Y&quot;,&#xd;
  &quot;investmentAmount1&quot;: ${__Random(1000,2000,)},&#xd;
  &quot;schemeCode2&quot;: &quot;121Y&quot;,&#xd;
  &quot;investmentAmount2&quot;: ${__Random(1000,2000,)},&#xd;
  &quot;schemeCode3&quot;: &quot;121Y&quot;,&#xd;
  &quot;investmentAmount3&quot;: ${__Random(1000,2000,)},&#xd;
  &quot;createdBy&quot;: &quot;Eva&quot;,&#xd;
  &quot;modifiedBy&quot;: &quot;Eva&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${POSTProInvestment}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/pro-investment</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00e_POST_lumpsum-calculator ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;lumpsumAmt&quot;: ${__Random(200000,500000,)},&#xd;
  &quot;investmentPeriod&quot;: ${__Random(10,30,)},&#xd;
  &quot;expectedReturn&quot;: ${__Random(5,15,)}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${lumpsum-calculator}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/lumpsum-calculator</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00f_POST_goal-calculator ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;goalAmount&quot;: ${__Random(1000000,3000000,)},&#xd;
  &quot;timeHorizon&quot;: ${__Random(2,30,)},&#xd;
  &quot;expectedRor&quot;: ${__Random(2,30,)}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${goal-calculator}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/goal-calculator</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00g_POST_fund-investment ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;fundId&quot;: ${__Random(1,8,)},&#xd;
  &quot;schemeCode&quot;: &quot;string&quot;,&#xd;
  &quot;customerId&quot;: 1,&#xd;
  &quot;investAmount&quot;: ${__Random(1000000,8000000,)},&#xd;
  &quot;investType&quot;: &quot;string&quot;,&#xd;
  &quot;createdDate&quot;: &quot;2023-08-06T13:50:12.058Z&quot;,&#xd;
  &quot;createdBy&quot;: &quot;string&quot;,&#xd;
  &quot;modifiedBy&quot;: &quot;string&quot;,&#xd;
  &quot;modifiedDate&quot;: &quot;2023-08-06T13:50:12.058Z&quot;,&#xd;
  &quot;status&quot;: 0&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${fund-investment}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/fund-investment</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00h_POST_filter-and-sort ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;isDebt&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isEquity&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isHybrid&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isSolutions&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isOthers&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isLowRisk&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isHighRisk&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isModerateRisk&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isModerateLowRisk&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isModerateHighRisk&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isVeryHighRisk&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;returns&quot;: &quot;string&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${filter-and-sort}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/all-funds/filter-and-sort</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">String[] query = new String[]{&quot;true&quot;, &quot;false&quot;,};
    Random random = new Random();
    int i = random.nextInt(query.length);
    vars.put(&quot;randomOption&quot;,query[i]);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00i_GET_scheduler/manua l${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${SchedularManual}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/scheduler/manual</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00j_GET_riskprofile?score ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="score" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">score</stringProp>
                  <stringProp name="Argument.value">${RiskProfileScore}</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${riskprofile?scor}${RiskProfileScore}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/funds/riskprofile?score=10</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00k_GET_fund-details?schemeCode ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${FundDetailsschemeCode}${schemeCode}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/fund-details?schemeCode=117y</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET_FundDetails" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/mutualfund/api/v1/fund-details?schemeCode=02Z</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">Duplicate</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00l_GET_all-funds${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${AllFunds}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/all-funds</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00m_GET_all-funds_Category${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${AllFundsCategory_Equity}${ProductCategory}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/all-funds/category?category=Equity</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="TestPlan.comments">C:\Users\harishraj.s\Desktop\JMeter_Script\MutualFund\Reports\MutualFundviewTree.csv</stringProp>
          </ResultCollector>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">C:/Endurance/MutualFund/MutualFundPathURL.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
            <collectionProp name="CookieManager.cookies"/>
            <boolProp name="CookieManager.clearEachIteration">false</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">CounterValue</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">application/json</stringProp>
                <stringProp name="Header.name">Content-Type</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="RiskProfileScore" elementType="Argument">
                <stringProp name="Argument.name">RiskProfileScore</stringProp>
                <stringProp name="Argument.value">23</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="schemeCode" elementType="Argument">
                <stringProp name="Argument.name">schemeCode</stringProp>
                <stringProp name="Argument.value">117y</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ProductCategory" elementType="Argument">
                <stringProp name="Argument.name">ProductCategory</stringProp>
                <stringProp name="Argument.value">Equity</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TrueFalse_1" elementType="Argument">
                <stringProp name="Argument.name">TrueFalse_1</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TrueFalse_2" elementType="Argument">
                <stringProp name="Argument.name">TrueFalse_2</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV MF_20_100_00a_POST_sip-calculato" enabled="false">
            <stringProp name="filename">C:/Users/harishraj.s/Desktop/JMeter_Script/MutualFund/MutualFundParams.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="false">
            <boolProp name="clearEachIteration">false</boolProp>
            <boolProp name="useExpires">true</boolProp>
            <boolProp name="CacheManager.controlledByThread">false</boolProp>
          </CacheManager>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Mutual Fund Sprint 3 ${CounterValue}" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00a_POST_fetchinvestorstatus ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customer_id&quot;:&quot;2&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${fetchinvestorstatus}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/fetchinvestorstatus</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00b_POST_kyc-check${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: &quot;16531&quot;,&#xd;
    &quot;journeyId&quot;: &quot;MF&quot;,&#xd;
    &quot;profileId&quot;: &quot;8U6yT5&quot;,&#xd;
    &quot;pan&quot;: &quot;DAFPJ3781J&quot;,&#xd;
    &quot;date_of_birth&quot;: &quot;6.09.1998&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${kyc-check}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/kyc-check</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00c_POST_investor-profile ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;customerId&quot; : 16531,//Mandatory&#xd;
  &quot;journeyId&quot; : &quot;ABCMF&quot;,//Mandatory&#xd;
  &quot;type&quot;: &quot;individual&quot;,//Mandatory&#xd;
  &quot;tax_status&quot;: &quot;resident_individual&quot;,//Rest all are optional &#xd;
  &quot;name&quot;: &quot;Siv&quot;,&#xd;
  &quot;date_of_birth&quot;: &quot;1998-09-06&quot;,&#xd;
  &quot;gender&quot;: &quot;male&quot;,&#xd;
  &quot;occupation&quot;: &quot;business&quot;,&#xd;
  &quot;pan&quot;: &quot;DAFPJ3781J&quot;,&#xd;
  //&quot;guardian_name&quot;: &quot;&quot;,&#xd;
  //&quot;guardian_date_of_birth&quot; : &quot;&quot;,&#xd;
  //&quot;guardian_pan&quot; : &quot;&quot;,&#xd;
  //&quot;signature&quot;: &quot;&quot;,&#xd;
  &quot;country_of_birth&quot;: &quot;IN&quot;,&#xd;
  &quot;place_of_birth&quot;: &quot;IN&quot;,&#xd;
  &quot;use_default_tax_residences&quot;: &quot;false&quot;,&#xd;
  &quot;first_tax_residency&quot;: {&#xd;
    &quot;country&quot;: &quot;IN&quot;,&#xd;
    &quot;taxid_type&quot;: &quot;pan&quot;,&#xd;
    &quot;taxid_number&quot;: &quot;DWEPS2837G&quot;&#xd;
  },&#xd;
  &quot;source_of_wealth&quot;: &quot;salary&quot;,&#xd;
  &quot;income_slab&quot;: &quot;upto_1lakh&quot;,&#xd;
  &quot;pep_details&quot;: &quot;not_applicable&quot;,&#xd;
  &quot;ip_address&quot;: &quot;192.92.12.39&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${investor-profile}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/investor-profile</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00d_POST_kyc-create ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: &quot;16531&quot;,&#xd;
    &quot;journeyId&quot;: &quot;MF&quot;,&#xd;
    &quot;profileId&quot;: &quot;invp_779e3387d8184e2791e0135d66ca0a0a&quot;,&#xd;
    &quot;panNumber&quot;: &quot;DAFPJ3781J&quot;,&#xd;
    &quot;dateOfBirth&quot;: &quot;1998-09-06&quot;,&#xd;
    &quot;mobileNumber&quot;: &quot;8903989019&quot;,&#xd;
    &quot;name&quot;: &quot;Siv&quot;,&#xd;
    &quot;email&quot;: &quot;siv111@gamil.com&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${kyc-create}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/kyc-create</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00e_POST_file-upload ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: &quot;16531&quot;,&#xd;
    &quot;profileId&quot;: &quot;inv_tete&quot;,&#xd;
    &quot;journeyId&quot;: &quot;MF&quot;,&#xd;
    &quot;proofType&quot;: &quot;AADHAAR&quot;,&#xd;
    &quot;side&quot;: &quot;FRONT&quot;,&#xd;
    &quot;proofNumber&quot;: &quot;122334&quot;,&#xd;
    &quot;issuedDate&quot;: &quot;2023-10-25&quot;,&#xd;
    &quot;expiryDate&quot;: &quot;2023-10-25&quot;,&#xd;
    &quot;fileExtension&quot;: &quot;pdf&quot;,&#xd;
    &quot;encodedFile&quot;: &quot;&quot;    &#xd;
}&amp;{&#xd;
    &quot;customerId&quot;: &quot;14081&quot;,&#xd;
    &quot;profileId&quot;: &quot;inv_tete&quot;,&#xd;
    &quot;journeyId&quot;: &quot;MF&quot;,&#xd;
    &quot;proofType&quot;: &quot;AADHAAR&quot;,&#xd;
    &quot;side&quot;: &quot;FRONT&quot;,&#xd;
    &quot;proofNumber&quot;: &quot;122334&quot;,&#xd;
    &quot;issuedDate&quot;: &quot;2023-10-25&quot;,&#xd;
    &quot;expiryDate&quot;: &quot;2023-10-25&quot;,&#xd;
    &quot;fileExtension&quot;: &quot;JPEG&quot;,&#xd;
    &quot;encodedFile&quot;: &quot;&quot;    &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${file-upload}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-securities/api/v1/mf/file-upload</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00f_POST_goal-calculator ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;goalAmount&quot;: ${__Random(1000000,3000000,)},&#xd;
  &quot;timeHorizon&quot;: ${__Random(2,30,)},&#xd;
  &quot;expectedRor&quot;: ${__Random(2,30,)}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${goal-calculator}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/goal-calculator</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00g_POST_fund-investment ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;fundId&quot;: ${__Random(1,8,)},&#xd;
  &quot;schemeCode&quot;: &quot;string&quot;,&#xd;
  &quot;customerId&quot;: 1,&#xd;
  &quot;investAmount&quot;: ${__Random(1000000,8000000,)},&#xd;
  &quot;investType&quot;: &quot;string&quot;,&#xd;
  &quot;createdDate&quot;: &quot;2023-08-06T13:50:12.058Z&quot;,&#xd;
  &quot;createdBy&quot;: &quot;string&quot;,&#xd;
  &quot;modifiedBy&quot;: &quot;string&quot;,&#xd;
  &quot;modifiedDate&quot;: &quot;2023-08-06T13:50:12.058Z&quot;,&#xd;
  &quot;status&quot;: 0&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${fund-investment}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/fund-investment</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00h_POST_filter-and-sort ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;isDebt&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isEquity&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isHybrid&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isSolutions&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isOthers&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isLowRisk&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isHighRisk&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isModerateRisk&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isModerateLowRisk&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isModerateHighRisk&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;isVeryHighRisk&quot;: ${__V(TrueFalse_${__Random(1,2,)})},&#xd;
  &quot;returns&quot;: &quot;string&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${filter-and-sort}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/all-funds/filter-and-sort</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">String[] query = new String[]{&quot;true&quot;, &quot;false&quot;,};
    Random random = new Random();
    int i = random.nextInt(query.length);
    vars.put(&quot;randomOption&quot;,query[i]);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00i_GET_scheduler/manua l${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${SchedularManual}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/scheduler/manual</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00j_GET_riskprofile?score ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="score" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">score</stringProp>
                  <stringProp name="Argument.value">${RiskProfileScore}</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${riskprofile?scor}${RiskProfileScore}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/funds/riskprofile?score=10</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00k_GET_fund-details?schemeCode ${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${FundDetailsschemeCode}${schemeCode}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/fund-details?schemeCode=117y</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET_FundDetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">/mutualfund/api/v1/fund-details?schemeCode=02Z</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00l_GET_all-funds${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${AllFunds}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/all-funds</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MF_20_100_00m_GET_all-funds_Category${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
            <stringProp name="HTTPSampler.path">${AllFundsCategory_Equity}${ProductCategory}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.93.88.9:8080/mutualfund/api/v1/all-funds/category?category=Equity</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0200</stringProp>
              <stringProp name="RandomTimer.range">3000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${ResponseDuration}</stringProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </DurationAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1137607432">${Responsecode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching the expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">C:/Endurance/MutualFund/MutualFundPathURL.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
            <collectionProp name="CookieManager.cookies"/>
            <boolProp name="CookieManager.clearEachIteration">false</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">CounterValue</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">application/json</stringProp>
                <stringProp name="Header.name">Content-Type</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="RiskProfileScore" elementType="Argument">
                <stringProp name="Argument.name">RiskProfileScore</stringProp>
                <stringProp name="Argument.value">23</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="schemeCode" elementType="Argument">
                <stringProp name="Argument.name">schemeCode</stringProp>
                <stringProp name="Argument.value">117y</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ProductCategory" elementType="Argument">
                <stringProp name="Argument.name">ProductCategory</stringProp>
                <stringProp name="Argument.value">Equity</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TrueFalse_1" elementType="Argument">
                <stringProp name="Argument.name">TrueFalse_1</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TrueFalse_2" elementType="Argument">
                <stringProp name="Argument.name">TrueFalse_2</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV MF_20_100_00a_POST_sip-calculato" enabled="false">
            <stringProp name="filename">C:/Users/harishraj.s/Desktop/JMeter_Script/MutualFund/MutualFundParams.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="false">
            <boolProp name="clearEachIteration">false</boolProp>
            <boolProp name="useExpires">true</boolProp>
            <boolProp name="CacheManager.controlledByThread">false</boolProp>
          </CacheManager>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Life Insurance ${CounterValue}" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">CounterValue</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
            <boolProp name="clearEachIteration">true</boolProp>
            <boolProp name="useExpires">false</boolProp>
            <boolProp name="CacheManager.controlledByThread">false</boolProp>
          </CacheManager>
          <hashTree/>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
            <collectionProp name="CookieManager.cookies"/>
            <boolProp name="CookieManager.clearEachIteration">true</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="LifeInsurance-Child ${CounterValue}" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_02_00a_GET_GetChildPlan ${CounterValue}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-life-insurance-child-plan/oneappabc/adityabirla/api/v1/lifeinsurance/childplan/1</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-life-insurance-child-plan/oneappabc/adityabirla/api/v1/lifeinsurance/childplan/1</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_02_00b_GET_GetInflationRate ${CounterValue}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-life-insurance-child-plan/oneappabc/adityabirla/api/v1/inflationrate</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-life-insurance-child-plan/oneappabc/adityabirla/api/v1/inflationrate</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_02_00c_POST_AddInflationRate ${CounterValue}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"> {&#xd;
     &quot;inflationRate&quot;:${__Random(6,10,)},&#xd;
    &quot;createdBy&quot;: &quot;Sagar${__Random(1,24,)}&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;Sagar${__Random(1,25,)}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-life-insurance-child-plan/oneappabc/adityabirla/api/v1/inflationrate</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-life-insurance-child-plan/oneappabc/adityabirla/api/v1/inflationrate</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_02_00d_POST_AddChildPlanDetails ${CounterValue}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: 1,&#xd;
    &quot;childName&quot;: &quot;Monu&quot;,&#xd;
    &quot;childAge&quot;: ${__Random(1,3,)},&#xd;
    &quot;goalType&quot;: &quot;Education&quot;,&#xd;
    &quot;goalAmt&quot;: ${__Random(1500000,2100000,)},&#xd;
    &quot;goalTenure&quot;: ${__Random(18,25,)},&#xd;
    &quot;tenure&quot;: ${__Random(8,15,)},&#xd;
    &quot;roi&quot;: 4,&#xd;
    &quot;createdBy&quot;: &quot;Sagar${__Random(1,24,)}&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;Sagar${__Random(1,24,)}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-life-insurance-child-plan/oneappabc/adityabirla/api/v1/lifeinsurance/childplan</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-life-insurance-child-plan/oneappabc/adityabirla/api/v1/lifeinsurance/childplan</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="liChildId" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">liChildId</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;,&quot;liChildId&quot;:</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number"></stringProp>
                <stringProp name="TestPlan.comments">&quot;,&quot;liChildId&quot;:742,&quot; </stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_02_00e_PATCH_termplan ${CounterValue}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;childPlanId&quot;:${liChildId},&#xd;
    &quot;isInterestedInPlan&quot;:true,&#xd;
    &quot;modifiedBy&quot;: &quot;Sagar${__Random(1,24,)}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-life-insurance-child-plan/oneappabc/adityabirla/api/v1/lifeinsurance/childplan</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-life-insurance-child-plan/oneappabc/adityabirla/api/v1/lifeinsurance/childplan</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="LifeInsurance-Quiz ${CounterValue}" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_03_00a_POST_SaveQuizResult ${CounterValue}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:  301,&#xd;
    &quot;score&quot;:  ${__Random(1,10,)},&#xd;
    &quot;createdBy&quot;: &quot;Sagar${__Random(1,25,)}&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;Sagar${__Random(1,33,)}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">/abc-life-insurance-quiz/oneappabc/adityabirla/api/v1/lifeinsurance/quiz/result</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-life-insurance-quiz/oneappabc/adityabirla/api/v1/lifeinsurance/quiz/result</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_03_00b_GET_GetQuizResult ${CounterValue}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-life-insurance-quiz/oneappabc/adityabirla/api/v1/lifeinsurance/quiz/result/1</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-life-insurance-quiz/oneappabc/adityabirla/api/v1/lifeinsurance/quiz/result/1</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_03_00c_GET_GetQuiz ${CounterValue}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-life-insurance-quiz/oneappabc/adityabirla/api/v1/lifeinsurance/quiz?numberOfQuestion=10</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-life-insurance-quiz/oneappabc/adityabirla/api/v1/lifeinsurance/quiz?numberOfQuestion=10</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="LifeInsurance-TermPlan ${CounterValue}" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_04_00a_POST_TermPlan ${CounterValue}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;customer&quot;: {&#xd;
        &quot;id&quot;: ${__Random(303,308,)}&#xd;
    },&#xd;
    &quot;eduQualId&quot;: {&#xd;
        &quot;id&quot;: ${__Random(1,4)}&#xd;
&#xd;
    },&#xd;
    &quot;occupationId&quot;: {&#xd;
        &quot;id&quot;: ${__Random(6,10)}&#xd;
&#xd;
    },&#xd;
    &quot;age&quot;: ${__Random(30,50)}&#xd;
,&#xd;
    &quot;annualIncome&quot;: ${__Random(1000000,2500000)}&#xd;
,&#xd;
    &quot;liabilities&quot;: 1,&#xd;
    &quot;liabilityAmount&quot;: ${__Random(500000,1000000)}&#xd;
,&#xd;
    &quot;existingCover&quot;: 1,&#xd;
    &quot;existingCoverAmt&quot;: ${__Random(50000,500000)}&#xd;
,&#xd;
    &quot;active&quot;:&quot;Y&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan

http://34.93.88.9:8080/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="custTermInsID" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">custTermInsID</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">custTermInsID&quot;:</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number"></stringProp>
                <stringProp name="TestPlan.comments">{&quot;custTermInsID&quot;:839,&quot;    ,</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="minEligCover" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">minEligCover</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">minEligCover&quot;:</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number"></stringProp>
                <stringProp name="TestPlan.comments"> ,&quot;minEligCover&quot;:1.6099998E7,&quot;</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_04_00b_GET_termplanOccupations ${CounterValue}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/occupations</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/occupations</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_04_00c_GET_termplanQualifications ${CounterValue}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/qualifications</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/qualifications</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_04_00d_PATCH_termplan ${CounterValue}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;selectedCover&quot;:${minEligCover}&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/${termplanid}</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-termplan/api/oneappabc/adityabirla/api/v1/lifeinsurance/termplan/{termplanid}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="LifeInsurance-Ulip-Retirement-SavingPlan ${CounterValue}" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <stringProp name="TestPlan.comments">${__Random(37,64,)}</stringProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00a_POST_CreateRetirementPlan ${CounterValue}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;savingTenureYrs&quot;: 20,&#xd;
    &quot;savingAmt&quot;: 16000,&#xd;
    &quot;roi&quot;: 4,&#xd;
    &quot;active&quot;: &quot;Y&quot;,&#xd;
    &quot;createdBy&quot;: &quot;Aman&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;Aman&quot;,&#xd;
    &quot;tcustomer&quot;: {&#xd;
        &quot;id&quot;: ${__Random(37,64,)}&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">saveRetirementUlip-plan/oneabc/adityabirla/api/v1/lifeinsurance/plan/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/saveRetirementUlip-plan/oneabc/adityabirla/api/v1/lifeinsurance/plan/3</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="planid" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">planid</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;planid&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number"></stringProp>
                <stringProp name="TestPlan.comments">{&quot;planid&quot;:2640,&quot;</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="customerId" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">customerId</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;,&quot;customerId&quot;:</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number"></stringProp>
                <stringProp name="TestPlan.comments">&quot;,&quot;customerId&quot;:62,&quot;</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00b_POST_CreateUlipPlan ${CounterValue}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;savingAmt&quot;: 20000,&#xd;
    &quot;savingTenureYrs&quot;: 20,&#xd;
    &quot;savingMaturityYrs&quot;: 10,&#xd;
    &quot;roi&quot;: 4,&#xd;
    &quot;active&quot;: &quot;Y&quot;,&#xd;
    &quot;createdBy&quot;: &quot;Aman&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;Aman&quot;,&#xd;
    &quot;tcustomer&quot;: {&#xd;
        &quot;id&quot;: ${customerId}&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">saveRetirementUlip-plan/oneabc/adityabirla/api/v1/lifeinsurance/plan/2</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/saveRetirementUlip-plan/oneabc/adityabirla/api/v1/lifeinsurance/plan/2</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00c_POST_CreateSavingPlan ${CounterValue}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{ &#xd;
    &quot;savingTenureYrs&quot;: 20,&#xd;
    &quot;savingAmt&quot;: 4800000,&#xd;
    &quot;savingMaturityYrs&quot;: 10,&#xd;
    &quot;active&quot;:&quot;Y&quot;,&#xd;
    &quot;createdBy&quot;: &quot;Aman&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;Aman&quot;,&#xd;
    &quot;tcustomer&quot;: {&#xd;
        &quot;id&quot;: ${customerId}&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">saveRetirementUlip-plan/oneabc/adityabirla/api/v1/lifeinsurance/plan/1</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/saveRetirementUlip-plan/oneabc/adityabirla/api/v1/lifeinsurance/plan/1</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00d_GET_FetchPlanType ${CounterValue}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">saveRetirementUlip-plan/oneabc/adityabirla/api/v1/lifeinsurance/plantype/${__Random(1,3)}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/saveRetirementUlip-plan/oneabc/adityabirla/api/v1/lifeinsurance/plantype/3</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00e_GET_FetchPlanByCustomerId ${CounterValue}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">saveRetirementUlip-plan/oneabc/adityabirla/api/v1/lifeinsurance/plandetails/1</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/saveRetirementUlip-plan/oneabc/adityabirla/api/v1/lifeinsurance/plandetails/${customerId}1</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_05_00f_PATCH_UpdateIsInterestedInPlan ${CounterValue}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;planid&quot;${planid},&#xd;
    &quot;isInterestedInPlan&quot;:true,&#xd;
    &quot;modifiedBy&quot;: &quot;Amank&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">saveRetirementUlip-plan/oneabc/adityabirla/api/v1/lifeinsurance/plandetails</stringProp>
              <stringProp name="HTTPSampler.method">PATCH</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/saveRetirementUlip-plan/oneabc/adityabirla/api/v1/lifeinsurance/plandetails   ${planid}    2661</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="LifeInsurance-CompoundCalculator ${CounterValue}" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_06_00a_GET_CCYearly ${CounterValue}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-compound-calculator/api/v1/compoundcalculator?investmentFrequency=Monthly&amp;amountToInvest=12500&amp;planOnInvesting=5&amp;stayInvested=20&amp;expectedROR=8</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-compound-calculator/api/v1/compoundcalculator?investmentFrequency=Monthly&amp;amountToInvest=12500&amp;planOnInvesting=5&amp;stayInvested=20&amp;expectedROR=8</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_06_00b_GET_CCMonthly ${CounterValue}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-compound-calculator/api/v1/compoundcalculator?investmentFrequency=Monthly&amp;amountToInvest=14500&amp;planOnInvesting=5&amp;stayInvested=20&amp;expectedROR=8</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-compound-calculator/api/v1/compoundcalculator?investmentFrequency=Monthly&amp;amountToInvest=12500&amp;planOnInvesting=5&amp;stayInvested=20&amp;expectedROR=8</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LifeInsurance_06_00c_GET_CCOneTime ${CounterValue}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
              <stringProp name="HTTPSampler.path">abc-compound-calculator/api/v1/compoundcalculator?investmentFrequency=Monthly&amp;amountToInvest=15500&amp;planOnInvesting=5&amp;stayInvested=20&amp;expectedROR=8</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="TestPlan.comments">http://34.93.88.9:8080/abc-compound-calculator/api/v1/compoundcalculator?investmentFrequency=Monthly&amp;amountToInvest=12500&amp;planOnInvesting=5&amp;stayInvested=20&amp;expectedROR=8</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">200</stringProp>
                <stringProp name="RandomTimer.range">1000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="DigiGold" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">D:/Performance Testing - ABC/Jmeter/DigiGold/DigiGold PathURI.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames"></stringProp>
          </CSVDataSet>
          <hashTree/>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
            <collectionProp name="CookieManager.cookies"/>
            <boolProp name="CookieManager.clearEachIteration">true</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.value">application/json</stringProp>
                <stringProp name="Header.name">Content-Type</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">keep-alive</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">34.100.198.4</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
            <boolProp name="clearEachIteration">true</boolProp>
            <boolProp name="useExpires">true</boolProp>
            <boolProp name="CacheManager.controlledByThread">true</boolProp>
          </CacheManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00a_POST_ParterLogin${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Username</stringProp>
                  <stringProp name="Argument.value">ABCD_GOLD</stringProp>
                </elementProp>
                <elementProp name="Password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">Password</stringProp>
                  <stringProp name="Argument.value">ABCD_GOLD</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${partner login}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/login</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.refname">sessionId</stringProp>
              <stringProp name="RegexExtractor.regex">{&quot;authToken&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Session ID not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00b_POST_CreateProfile${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;mobileNumber&quot;: &quot;${__Random(9000000000,9999999999,)}&quot;,&#xd;
    &quot;fullName&quot;: &quot;Performance Tester ${__Random(1,1000,)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${To Create User Profile}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/createProfile</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
              <collectionProp name="CookieManager.cookies">
                <elementProp name="Cookie" elementType="Cookie" testname="Cookie">
                  <stringProp name="Cookie.value">sessionId = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXJ0bmVyX2lkIjoiQUJDRF9HT0xEIiwiaWF0IjoxNjkxNDc4NzY1fQ.LQq4WlP8b5xhCBcwDtFBTm8pLdQBujyv53eeofqZKus</stringProp>
                  <stringProp name="Cookie.domain"></stringProp>
                  <stringProp name="Cookie.path"></stringProp>
                  <boolProp name="Cookie.secure">false</boolProp>
                  <longProp name="Cookie.expires">0</longProp>
                  <boolProp name="Cookie.path_specified">true</boolProp>
                  <boolProp name="Cookie.domain_specified">true</boolProp>
                </elementProp>
              </collectionProp>
              <boolProp name="CookieManager.clearEachIteration">false</boolProp>
              <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
              <stringProp name="CookieManager.policy">default</stringProp>
            </CookieManager>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.refname">customerRefNo</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;customerRefNo&quot;: &quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">customerRefNo not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">customerRefNo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.customerRefNo</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00c_POST_NonExecutableQuote${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;currencyPair&quot;: &quot;XAU/INR&quot;,&#xd;
    &quot;type&quot;: &quot;BUY&quot;,&#xd;
    &quot;calculationType&quot;: &quot;Q&quot;,&#xd;
    &quot;value&quot;: &quot;23.57&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${To generate non executable quote}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/getNonExecutableQuote</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">totalAmount;tax1Amt;tax2Amt;tax3Amt;PreTaxAmount</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.totalAmount;$.tax1Amt;$.tax2Amt;$.tax3Amt;$.calcPreTaxAmount</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00d_POST_GenerateQuoteBuy${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;${customerRefNo}&quot;,&#xd;
    &quot;currencyPair&quot;: &quot;XAU/INR&quot;,&#xd;
    &quot;value&quot;:&quot;5000&quot;,&#xd;
    &quot;type&quot;:&quot;A&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${getQuoteBuy}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/getQuoteBuy</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">transactionRefNo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.transactionRefNo</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">quoteId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.quoteId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">preTaxAmount</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.preTaxAmount</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">tax1Amt</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.tax1Amt</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">tax2Amt</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.tax2Amt</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">tax3Amt</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.tax3Amt</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">totalAmount</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.totalAmount</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00e_POST_GetAddresses${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;${customerRefNo}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${To retrieve addresses}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/getAddresses</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">billingAddressId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">ID not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">2</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00f_POST_ValidateOrderAndExecute${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;${customerRefNo}&quot;&#xd;
    &quot;billingAddressId&quot;: &quot;${billingAddressId}&quot;,&#xd;
    &quot;calculationType&quot;: &quot;Q&quot;,&#xd;
    &quot;preTaxAmount&quot;: &quot;${preTaxAmount}&quot;,&#xd;
    &quot;quantity&quot;: &quot;1.0000&quot;,&#xd;
    &quot;quoteId&quot;: &quot;${quoteId}&quot;,&#xd;
    &quot;tax1Amt&quot;: &quot;${tax1Amt}&quot;,&#xd;
    &quot;tax2Amt&quot;: &quot;${tax2Amt}&quot;,&#xd;
    &quot;tax3Amt&quot;: &quot;${tax3Amt}&quot;, &#xd;
    &quot;transactionOrderID&quot;: &quot;${transactionRefNo}&quot;,&#xd;
    &quot;totalAmount&quot;: &quot;${totalAmount}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${validateOrderAndExecute}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/validateOrderAndExecute</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..id[1:]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.refname">customerRefNo</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;customerRefNo&quot;: &quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">customerRefNo not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00g_POST_ExecuteOrderWithPayIn${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;ABCD_533456489&quot;,&#xd;
    &quot;billingAddressId&quot;: &quot;bzi3fgJJnjJYmTdXWUpq4&quot;,&#xd;
    &quot;payIn&quot;: {&#xd;
        &quot;pgPaymentId&quot;: &quot;pay_LptnixtPzIcSxS&quot;,&#xd;
        &quot;pgOrderId&quot;: &quot;order_LptmxunRtgtn7n&quot;,&#xd;
        &quot;pgSignature&quot;: &quot;f2a53a7b081cf3c1a9818fce9a4e486a46e2e75776a6b0982f06870936c5a71d&quot;,&#xd;
        &quot;pgProvider&quot;: &quot;razorpay&quot;,&#xd;
        &quot;pgAmount&quot;: &quot;6511.02&quot;&#xd;
    },&#xd;
    &quot;calculationType&quot;: &quot;Q&quot;,&#xd;
    &quot;preTaxAmount&quot;: &quot;6159.20&quot;,&#xd;
    &quot;quantity&quot;: &quot;1.0000&quot;,&#xd;
    &quot;quoteId&quot;: &quot;ABDsWeVJooCme882aBMTU7Vpp&quot;,&#xd;
    &quot;tax1Amt&quot;: &quot;92.39&quot;,&#xd;
    &quot;tax2Amt&quot;: &quot;92.39&quot;,&#xd;
    &quot;tax3Amt&quot;: &quot;26.72&quot;,&#xd;
    &quot;transactionOrderID&quot;: &quot;aaaf4ce6-8020-4826-9d32-386f256c91bf&quot;,&#xd;
    &quot;totalAmount&quot;: &quot;6343.97&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${executeOrderWithPayIn}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/executeOrderWithPayIn</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00h_POST_GetPortfolio${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;${customerRefNo}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${getPortfolio}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/getPortfolio</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00i_POST_getOrderHistory${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;ABCD_90000109&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-digigold/api/v1/getOrderHistory</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/getOrderHistory</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">transactionId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..transactionId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00j_POST_getOrderDetails${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;&#xd;
    &quot;type&quot;: &quot;SELL&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${getOrderDetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/getOrderDetails</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00k_POST_getQuoteSell${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;${customerRefNo}&quot;,&#xd;
    &quot;currencyPair&quot;: &quot;XAU/INR&quot;,&#xd;
    &quot;value&quot;: &quot;1000&quot;,&#xd;
    &quot;type&quot;: &quot;A&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${getQuoteSell}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/getQuoteSell</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00l_POST_getIfscDetails${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;ifscCode&quot;: &quot;KARB0000001&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${getIfscDetails}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/getIfscDetails</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00m_POST_vpaVerification${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;vpaId&quot;: &quot;hithai95@okhdfcbank&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${vpaVerification}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/vpaVerification</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00n_POST_executeOrderWithPayOut${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;calculationType&quot;: &quot;Q&quot;,&#xd;
    &quot;customerRefNo&quot;: &quot;${customerRefNo}&quot;,&#xd;
    &quot;otp&quot;: &quot;&quot;,&#xd;
    &quot;payOut&quot;: {&#xd;
        &quot;customerAccountInfo&quot;: {&#xd;
            &quot;name&quot;: &quot;Prashant KUMAR&quot;,&#xd;
            &quot;accountNumber&quot;: &quot;&quot;,&#xd;
            &quot;ifsc&quot;: &quot;&quot;,&#xd;
            &quot;vpa&quot;: &quot;abhijeet@paytm&quot;&#xd;
        },&#xd;
        &quot;paymentChannel&quot;: &quot;UPI/RTGS/NEFT/IMPS&quot;&#xd;
    },&#xd;
    &quot;preTaxAmount&quot;: &quot;5927.30&quot;,&#xd;
    &quot;quantity&quot;: &quot;1.0000&quot;,&#xd;
    &quot;quoteId&quot;: &quot;ABD7FnhE80EtZfiIfYwVBLcQW&quot;,&#xd;
    &quot;tax1Amt&quot;: &quot;0.00&quot;,&#xd;
    &quot;tax2Amt&quot;: &quot;0.00&quot;,&#xd;
    &quot;tax3Amt&quot;: &quot;0.00&quot;,&#xd;
    &quot;transactionOrderID&quot;: &quot;408b1851-d9a4-4567-a473-a8768dea6b39&quot;,&#xd;
    &quot;totalAmount&quot;: &quot;5927.30&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-digigold/api/v1/executeOrderWithPayOut</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/executeOrderWithPayOut</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00o_POST_generateBuyPdfInvoice${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">/abc-digigold/api/v1/generateBuyPdfInvoice</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/generateBuyPdfInvoice</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00p_POST_generateRedeemPdfInvoice${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;transactionId&quot;: &quot;${transactionId}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerNameCEM}</stringProp>
            <stringProp name="HTTPSampler.path">${generateRedeemPdfInvoice}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">https://cem.mmtcpamp.com/pvt/generateRedeemPdfInvoice</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00q_POST_generateSellPdfInvoice${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;transactionId&quot;: &quot;${transactionId}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${generateSellPdfInvoice}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/generateSellPdfInvoice</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00r_POST_createBankAccount${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;${customerRefNo}&quot;,&#xd;
    &quot;accountNumber&quot;: &quot;044321123457&quot;,&#xd;
    &quot;ifscCode&quot;: &quot;SBIN0002636&quot;,&#xd;
    &quot;accountHolderName&quot;: &quot;Peter Parker&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${createBankAccount}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/createBankAccount</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00s_POST_getBankAccounts${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;${customerRefNo}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${getBankAccounts}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/getBankAccounts</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00t_POST_createUpiAccount${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;${customerRefNo}&quot;,&#xd;
    &quot;upiId&quot;: &quot;919841133422@oneabc&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${createUpiAccount}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/createUpiAccount</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DigiGold_Sprint2_00u_POST_getUpiAccounts${CounterValue}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerRefNo&quot;: &quot;${customerRefNo}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${getUpiAccounts}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-digigold/api/v1/getUpiAccounts</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1167160104">${ResponseCode}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">Response code is not matching with expected 200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
              <stringProp name="DurationAssertion.duration">${Duration}</stringProp>
            </DurationAssertion>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.value">application/json</stringProp>
                  <stringProp name="Header.name">Content-Type</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apache-HttpClient/4.5.14 (Java/17.0.8)</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">34.100.198.4</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
            <collectionProp name="AuthManager.auth_list"/>
            <boolProp name="AuthManager.controlledByThreadGroup">true</boolProp>
          </AuthManager>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="DHA -${CounterValue}" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">C:\OneApp\DHA\DHAPath.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames"></stringProp>
          </CSVDataSet>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
            <boolProp name="clearEachIteration">true</boolProp>
            <boolProp name="useExpires">false</boolProp>
            <boolProp name="CacheManager.controlledByThread">false</boolProp>
          </CacheManager>
          <hashTree/>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
            <collectionProp name="CookieManager.cookies"/>
            <boolProp name="CookieManager.clearEachIteration">true</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHA_400_10_10a_pushDhaData -${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&#xd;
    &quot;customer_id&quot;: &quot;2&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;questionnaire&quot;: [&#xd;
            {&#xd;
                &quot;code&quot;: &quot;1&quot;,&#xd;
                &quot;question&quot;: &quot;Enter your Date of Birth&quot;,&#xd;
                &quot;answer&quot;: &quot;1998-11-25&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;2&quot;,&#xd;
                &quot;question&quot;: &quot;Enter your gender&quot;,&#xd;
                &quot;answer&quot;: &quot;male&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;3&quot;,&#xd;
                &quot;question&quot;: &quot;Enter your height&quot;,&#xd;
                &quot;answer&quot;: &quot;187&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;4&quot;,&#xd;
                &quot;question&quot;: &quot;Enter your weight&quot;,&#xd;
                &quot;answer&quot;: &quot;69&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;5&quot;,&#xd;
                &quot;question&quot;: &quot;Enter your current posture&quot;,&#xd;
                &quot;answer&quot;: &quot;standing&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;6&quot;,&#xd;
                &quot;question&quot;: &quot;Any pre-existing disease?&quot;,&#xd;
                &quot;answer&quot;: &quot;&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;7&quot;,&#xd;
                &quot;question&quot;: &quot;Any known family history of illnesses?&quot;,&#xd;
                &quot;answer&quot;: &quot;&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;face_scan&quot;: {&#xd;
            &quot;statusCode&quot;: 200,&#xd;
            &quot;scan_id&quot;: &quot;df42cf84-a640-4a02-8cdd-fdec074529c8&quot;,&#xd;
            &quot;wellness_score&quot;: 86,&#xd;
            &quot;vitals&quot;: {&#xd;
                &quot;heart_rate&quot;: {&#xd;
                    &quot;code&quot;: &quot;8867-4&quot;,&#xd;
                    &quot;value&quot;: 84&#xd;
                },&#xd;
                &quot;oxy_sat_prcnt&quot;: {&#xd;
                    &quot;code&quot;: &quot;59408-5&quot;,&#xd;
                    &quot;value&quot;: 100&#xd;
                },&#xd;
                &quot;resp_rate&quot;: {&#xd;
                    &quot;code&quot;: &quot;9279-1&quot;,&#xd;
                    &quot;value&quot;: 14&#xd;
                },&#xd;
                &quot;bp_sys&quot;: {&#xd;
                    &quot;code&quot;: &quot;8480-6&quot;,&#xd;
                    &quot;value&quot;: 110&#xd;
                },&#xd;
                &quot;bp_dia&quot;: {&#xd;
                    &quot;code&quot;: &quot;8462-4&quot;,&#xd;
                    &quot;value&quot;: 71&#xd;
                }&#xd;
            },&#xd;
            &quot;metadata&quot;: {&#xd;
                &quot;device&quot;: &quot;rppg_careplix_finger_android&quot;,&#xd;
                &quot;physiological_scores&quot;: {&#xd;
                    &quot;height&quot;: {&#xd;
                        &quot;code&quot;: &quot;8302-2&quot;,&#xd;
                        &quot;value&quot;: &quot;154.5&quot;&#xd;
                    },&#xd;
                    &quot;weight&quot;: {&#xd;
                        &quot;code&quot;: &quot;29463-7&quot;,&#xd;
                        &quot;value&quot;: &quot;70.5&quot;&#xd;
                    },&#xd;
                    &quot;vo2max&quot;: {&#xd;
                        &quot;code&quot;: &quot;94122-9&quot;,&#xd;
                        &quot;value&quot;: &quot;50.3&quot;&#xd;
                    },&#xd;
                    &quot;intensity&quot;: &quot;Hard&quot;,&#xd;
                    &quot;bmi&quot;: {&#xd;
                        &quot;code&quot;: &quot;39156-5&quot;,&#xd;
                        &quot;value&quot;: &quot;29.53&quot;&#xd;
                    },&#xd;
                    &quot;tbw&quot;: {&#xd;
                        &quot;code&quot;: &quot;Dummy-TBW-01&quot;,&#xd;
                        &quot;value&quot;: &quot;31.8&quot;&#xd;
                    },&#xd;
                    &quot;tbwp&quot;: {&#xd;
                        &quot;code&quot;: &quot;Dummy-BWP-01&quot;,&#xd;
                        &quot;value&quot;: &quot;45.11&quot;&#xd;
                    },&#xd;
                    &quot;bodyfat&quot;: {&#xd;
                        &quot;code&quot;: &quot;41982-0&quot;,&#xd;
                        &quot;value&quot;: &quot;39.88&quot;&#xd;
                    },&#xd;
                    &quot;cal_fat&quot;: &quot;54.5&quot;,&#xd;
                    &quot;cal_carb&quot;: &quot;45.5&quot;,&#xd;
                    &quot;bloodvolume&quot;: {&#xd;
                        &quot;code&quot;: &quot;Dummy-BV-01&quot;,&#xd;
                        &quot;value&quot;: &quot;4183.68&quot;&#xd;
                    },&#xd;
                    &quot;gender&quot;: &quot;female&quot;,&#xd;
                    &quot;dob&quot;: &quot;1999-06-08&quot;&#xd;
                },&#xd;
                &quot;fps&quot;: 45,&#xd;
                &quot;heartrate_time&quot;: [&#xd;
                    84,&#xd;
                    72,&#xd;
                    110,&#xd;
                    77,&#xd;
                    87,&#xd;
                    97,&#xd;
                    58&#xd;
                ],&#xd;
                &quot;resp_rate_time&quot;: [&#xd;
                    15,&#xd;
                    12,&#xd;
                    14,&#xd;
                    14,&#xd;
                    15,&#xd;
                    16,&#xd;
                    14&#xd;
                ],&#xd;
                &quot;heart_scores&quot;: {&#xd;
                    &quot;HRMax&quot;: {&#xd;
                        &quot;code&quot;: &quot;Dummy-HRM-01&quot;,&#xd;
                        &quot;value&quot;: 192&#xd;
                    },&#xd;
                    &quot;zone_details&quot;: {&#xd;
                        &quot;zone&quot;: &quot;Rest&quot;,&#xd;
                        &quot;lowZoneRange&quot;: &quot;--&quot;,&#xd;
                        &quot;highZoneRange&quot;: 94&#xd;
                    },&#xd;
                    &quot;HRR&quot;: {&#xd;
                        &quot;code&quot;: &quot;Dummy-HRR-01&quot;,&#xd;
                        &quot;value&quot;: &quot;108&quot;&#xd;
                    },&#xd;
                    &quot;heart_utilized&quot;: {&#xd;
                        &quot;code&quot;: &quot;Dummy-HU-01&quot;,&#xd;
                        &quot;value&quot;: &quot;44&quot;&#xd;
                    },&#xd;
                    &quot;THRR&quot;: {&#xd;
                        &quot;code&quot;: &quot;Dummy-THR-01&quot;,&#xd;
                        &quot;value&quot;: &quot;149 - 192&quot;&#xd;
                    },&#xd;
                    &quot;rmssd&quot;: {&#xd;
                        &quot;code&quot;: &quot;Dummy-RMSSD-01&quot;,&#xd;
                        &quot;value&quot;: 36.03&#xd;
                    },&#xd;
                    &quot;sdnn&quot;: {&#xd;
                        &quot;code&quot;: &quot;Dummy-SDNN-01&quot;,&#xd;
                        &quot;value&quot;: 80.11&#xd;
                    },&#xd;
                    &quot;pNN50_per&quot;: {&#xd;
                        &quot;code&quot;: &quot;Dummy-Pnn50-01&quot;,&#xd;
                        &quot;value&quot;: 37.04&#xd;
                    },&#xd;
                    &quot;stress_index&quot;: {&#xd;
                        &quot;code&quot;: &quot;Dummy-SI-01&quot;,&#xd;
                        &quot;value&quot;: 0.08&#xd;
                    },&#xd;
                    &quot;rr_hist&quot;: [&#xd;
                        0,&#xd;
                        0,&#xd;
                        0,&#xd;
                        0,&#xd;
                        0,&#xd;
                        0,&#xd;
                        0,&#xd;
                        0,&#xd;
                        0,&#xd;
                        0,&#xd;
                        1,&#xd;
                        4,&#xd;
                        2,&#xd;
                        2,&#xd;
                        3,&#xd;
                        1,&#xd;
                        0,&#xd;
                        3,&#xd;
                        0,&#xd;
                        0,&#xd;
                        1,&#xd;
                        2,&#xd;
                        0&#xd;
                    ]&#xd;
                },&#xd;
                &quot;cardiovascular&quot;: {&#xd;
                    &quot;cardiac_out&quot;: {&#xd;
                        &quot;code&quot;: &quot;LP19466-9&quot;,&#xd;
                        &quot;value&quot;: 3.95&#xd;
                    },&#xd;
                    &quot;map&quot;: {&#xd;
                        &quot;code&quot;: &quot;8478-0&quot;,&#xd;
                        &quot;value&quot;: 86.67&#xd;
                    },&#xd;
                    &quot;prq&quot;: 6&#xd;
                }&#xd;
            },&#xd;
            &quot;notes&quot;: {&#xd;
                &quot;report_webhook_config&quot;: {&#xd;
                    &quot;tags&quot;: [&#xd;
                        {&#xd;
                            &quot;name&quot;: &quot;client-code&quot;,&#xd;
                            &quot;value&quot;: &quot;abcd&quot;&#xd;
                        },&#xd;
                        {&#xd;
                            &quot;name&quot;: &quot;customer-id&quot;,&#xd;
                            &quot;value&quot;: &quot;customer1&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            },&#xd;
            &quot;overall_heart_score&quot;: 90,&#xd;
            &quot;entry_time&quot;: &quot;2023-04-04 06:13:58.038755+00:00&quot;,&#xd;
            &quot;scan_condition&quot;: null,&#xd;
            &quot;user_id&quot;: &quot;b82a2def-9e44-4d44-9613-6314c9e7bed4&quot;,&#xd;
            &quot;lat&quot;: null,&#xd;
            &quot;lon&quot;: null,&#xd;
            &quot;posture&quot;: &quot;exercising&quot;,&#xd;
            &quot;tz_offset&quot;: null&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${pushDhaData}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-dha/api/v1/pushDhaData</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">2000</stringProp>
              <stringProp name="RandomTimer.range">100.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHA_400_10_10b_dhaData/2 -${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${dhaData2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-dha/api/v1/dhaData/2</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">2000</stringProp>
              <stringProp name="RandomTimer.range">100.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHA_400_10_10c_pushDhaPdfReport -${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__FileToString(pushDhaPdfReport.json,,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${pushDhaPdfReport}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-dha/api/v1/pushDhaPdfReport</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">2000</stringProp>
              <stringProp name="RandomTimer.range">100.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHA_400_10_10d_dhaPdfReport/2 -${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${dhaPdfReport2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-dha/api/v1/dhaPdfReport/2</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">2000</stringProp>
              <stringProp name="RandomTimer.range">100.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DHA_400_10_10e_dhaDataList/3 -${CounterValue}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.path">${dhaDataList3}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">http://34.100.198.4/abc-dha/api/v1/dhaDataList/3</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">2000</stringProp>
              <stringProp name="RandomTimer.range">100.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\Endurance\SummaryReport\SteppingSummaryTestresult01102023.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Error Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\Endurance\SummaryReport\ErrorSteppingSummaryTestresult01102023.csv</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
